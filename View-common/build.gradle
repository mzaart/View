buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

plugins {
    id 'kotlin-platform-common' version '1.2.71'
    id 'org.jetbrains.dokka' version '0.9.17'
    id "maven-publish"
    id "com.jfrog.bintray"
}

apply from: rootProject.file('pom.gradle')
apply from: project.file('bintray.gradle')

publishing {
    publications {
        mavenProject(MavenPublication) {
            from components.java

            groupId project.group
            artifactId project.name
            version '0.1.0'

            artifact sourcesJar

            withPom(pom)
        }
    }
}


repositories {
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-common"
    testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common"
    testCompile "org.jetbrains.kotlin:kotlin-test-common"
    testImplementation "io.mockk:mockk-common:1.8.6"
    implementation 'org.kodein.di:kodein-di-erased-common:5.2.0'
    compile 'org.kodein.di:kodein-di-conf-common:5.2.0'
    compile 'org.kodein.di:kodein-di-core-common:5.2.0'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dokka {
    outputFormat = 'markdown'
    includes = [
            'src/main/kotlin/view/core/dok.md',

            // includes in package view.core.views
            'src/main/kotlin/view/core/views/dok.md',
            'src/main/kotlin/view/core/views/layouts/dok.md',
            'src/main/kotlin/view/core/views/input/dok.md',
            'src/main/kotlin/view/core/views/propertyDelegates/dok.md',

            'src/main/kotlin/view/core/loaders/dok.md',

            'src/main/kotlin/view/di/dok.md',

            // includes in package view.utils
            'src/main/kotlin/view/utils/mapBased/keys/dok.md'
    ]
    impliedPlatforms = ["Common"] // This will force platform tags for all non-common sources e.g. "JVM"
    kotlinTasks {
        // dokka fails to retrieve sources from MPP-tasks so they must be set empty to avoid exception
        // use sourceRoot instead (see below)
        []
    }
    sourceRoot {
        // assuming there is only a single source dir...
        path = sourceSets.getByName("main").kotlin.srcDirs[0]
        platforms = ["Common"]
    }
}

{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"View: Write once, use anywhere View is a high-level and cross-platform UI library written in Kotlin that makes UI development easier and faster. View makes your code cleaner, easy to read and more maintainable. Note that this library is still under development. The current release constitutes a MVP. You can still use it but features may be added, removed or reimplemented and the library isn't fully tested yet. Why use View? Fully Native: With View, you run native code on each platform. The code that you write gets transpiled to bytecode on Android, Apple Framework on iOS and Javascript on the web. In addition to that, there is full interoperability with each platform i.e. you can use your Views in Java, Swift or JS code. Abstraction of UI: All what you have to worry about when using View is describing the structure of your UI. View will take care of the small details such that your UI adheres to platform specific or your own design standards. Easy Customization and Extensibility: View was built with customization in mind. You can easily customize and extend every component of the library. View DSL: You can express your UI structure in an easy to read and type safe manner using a DSL. By using a DSL you can avoid wasting CPU time parsing XML or other serialized strings. Written in Kotlin: You can already share business logic code between platforms using Kotlin Mutliplatform. With View you can increase the amount of shared code by sharing the UI code. How View works The key idea behind View is that the structure of the UI is platform agnostic while the style is platform specific. Thus, the structure of the UI should be described in platform independent code. The library is divided into three main parts: 1) Views: A view represents a particular piece of the UI such as buttons and text fields. You can think of View classes as \"model\" classes. 2) View Loaders: View loaders load views from a serialized format such as JSON. 3) View Renderers: This part of the library is platform specific. View renderers are responsible for mapping views to native objects. For example a view representing text will be mapped to a UIView on iOS, TextView on Android and a span element on the web. View uses Kotlin Multiplatform to share its code across platforms. For more information on each component, please see the guides.","title":"View: Write once, use anywhere"},{"location":"#view-write-once-use-anywhere","text":"View is a high-level and cross-platform UI library written in Kotlin that makes UI development easier and faster. View makes your code cleaner, easy to read and more maintainable. Note that this library is still under development. The current release constitutes a MVP. You can still use it but features may be added, removed or reimplemented and the library isn't fully tested yet.","title":"View: Write once, use anywhere"},{"location":"#why-use-view","text":"Fully Native: With View, you run native code on each platform. The code that you write gets transpiled to bytecode on Android, Apple Framework on iOS and Javascript on the web. In addition to that, there is full interoperability with each platform i.e. you can use your Views in Java, Swift or JS code. Abstraction of UI: All what you have to worry about when using View is describing the structure of your UI. View will take care of the small details such that your UI adheres to platform specific or your own design standards. Easy Customization and Extensibility: View was built with customization in mind. You can easily customize and extend every component of the library. View DSL: You can express your UI structure in an easy to read and type safe manner using a DSL. By using a DSL you can avoid wasting CPU time parsing XML or other serialized strings. Written in Kotlin: You can already share business logic code between platforms using Kotlin Mutliplatform. With View you can increase the amount of shared code by sharing the UI code.","title":"Why use View?"},{"location":"#how-view-works","text":"The key idea behind View is that the structure of the UI is platform agnostic while the style is platform specific. Thus, the structure of the UI should be described in platform independent code. The library is divided into three main parts: 1) Views: A view represents a particular piece of the UI such as buttons and text fields. You can think of View classes as \"model\" classes. 2) View Loaders: View loaders load views from a serialized format such as JSON. 3) View Renderers: This part of the library is platform specific. View renderers are responsible for mapping views to native objects. For example a view representing text will be mapped to a UIView on iOS, TextView on Android and a span element on the web. View uses Kotlin Multiplatform to share its code across platforms. For more information on each component, please see the guides.","title":"How View works"},{"location":"Documentation/MaterialDesignJsViewRenderer/","text":"MaterialDesignJsVeiwRenderer Packages view.core.renderers Contains classes that map view trees to DOM trees that comply with Material Design standards. view.core.renderers.viewRenderers Contains classes that render a single view. view.core.renderers.viewRenderers.display view.core.renderers.viewRenderers.inputs view.core.renderers.viewRenderers.layouts view.di Contains DI bindings for this renderer. view.utils.algos.graph view.utils.elementCss Contains classes useful for describing an HTML element's style. view.utils.elementCss.properties view.utils.extensions Index All Types","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/#packages","text":"view.core.renderers Contains classes that map view trees to DOM trees that comply with Material Design standards. view.core.renderers.viewRenderers Contains classes that render a single view. view.core.renderers.viewRenderers.display view.core.renderers.viewRenderers.inputs view.core.renderers.viewRenderers.layouts view.di Contains DI bindings for this renderer. view.utils.algos.graph view.utils.elementCss Contains classes useful for describing an HTML element's style. view.utils.elementCss.properties view.utils.extensions","title":"Packages"},{"location":"Documentation/MaterialDesignJsViewRenderer/#index","text":"All Types","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/alltypes/","text":"All Types view.core.renderers.viewRenderers.AbstractViewRenderer This class is the base class for all view renderers. view.core.renderers.viewRenderers.inputs.ButtonRenderer view.di.Container view.utils.elementCss.properties.CssDimen view.utils.elementCss.properties.CssProperty Defines an interface for classes that represent a css property. view.utils.elementCss.properties.CssUnit view.utils.elementCss.properties.CssValue Represents a value of a CSS property. view.core.renderers.DefaultTheme The theme that is applied to views by default. view.utils.elementCss.properties.Dimension Represents a CSS dimension property such as width and height. view.utils.elementCss.properties.Display view.utils.elementCss.ElementCss Represents an element's inline CSS. view.utils.elementCss.properties.FlexItemSettings Sets CSS properties of child elements of a FlexBox. view.utils.elementCss.properties.FlexSettings Sets CSS properties related to a FlexBox container. view.utils.elementCss.properties.Font view.utils.algos.graph.Graph Used for topological sorting and detection of circular dependencies. view.utils.elementCss.properties.Grid Sets CSS properties related to a CSS grid. view.utils.elementCss.properties.GridItem Sets the css properties related to the CSS Grid. view.core.renderers.viewRenderers.layouts.GridLayoutRenderer view.core.renderers.viewRenderers.display.ImageViewRenderer view.core.renderers.viewRenderers.layouts.LayoutRenderer This is the base class for renderers that render layout views. view.core.renderers.viewRenderers.layouts.LinearLayoutRenderer view.core.renderers.MaterialDesignJsRenderer Maps view trees to DOM trees that comply with Material Design standards. view.utils.elementCss.properties.Number Represents a numerical CSS value. view.utils.elementCss.properties.Overflow view.utils.elementCss.properties.Position view.core.renderers.viewRenderers.layouts.RelativeLayoutRenderer view.utils.elementCss.RelativePositioning Contains utility methods for positioning DOM elements in relation to each other. view.core.renderers.RendererConfig Contains configuration for the MaterialDesignJsRenderer . view.utils.elementCss.properties.Text view.core.renderers.viewRenderers.display.TextViewRenderer view.utils.elementCss.properties.Transformation view.core.renderers.ViewRenderer Defines an interface for classes that render views. view.utils.elementCss.properties.Visibility view.utils.elementCss.properties.WhiteSpace","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/alltypes/#all-types","text":"view.core.renderers.viewRenderers.AbstractViewRenderer This class is the base class for all view renderers. view.core.renderers.viewRenderers.inputs.ButtonRenderer view.di.Container view.utils.elementCss.properties.CssDimen view.utils.elementCss.properties.CssProperty Defines an interface for classes that represent a css property. view.utils.elementCss.properties.CssUnit view.utils.elementCss.properties.CssValue Represents a value of a CSS property. view.core.renderers.DefaultTheme The theme that is applied to views by default. view.utils.elementCss.properties.Dimension Represents a CSS dimension property such as width and height. view.utils.elementCss.properties.Display view.utils.elementCss.ElementCss Represents an element's inline CSS. view.utils.elementCss.properties.FlexItemSettings Sets CSS properties of child elements of a FlexBox. view.utils.elementCss.properties.FlexSettings Sets CSS properties related to a FlexBox container. view.utils.elementCss.properties.Font view.utils.algos.graph.Graph Used for topological sorting and detection of circular dependencies. view.utils.elementCss.properties.Grid Sets CSS properties related to a CSS grid. view.utils.elementCss.properties.GridItem Sets the css properties related to the CSS Grid. view.core.renderers.viewRenderers.layouts.GridLayoutRenderer view.core.renderers.viewRenderers.display.ImageViewRenderer view.core.renderers.viewRenderers.layouts.LayoutRenderer This is the base class for renderers that render layout views. view.core.renderers.viewRenderers.layouts.LinearLayoutRenderer view.core.renderers.MaterialDesignJsRenderer Maps view trees to DOM trees that comply with Material Design standards. view.utils.elementCss.properties.Number Represents a numerical CSS value. view.utils.elementCss.properties.Overflow view.utils.elementCss.properties.Position view.core.renderers.viewRenderers.layouts.RelativeLayoutRenderer view.utils.elementCss.RelativePositioning Contains utility methods for positioning DOM elements in relation to each other. view.core.renderers.RendererConfig Contains configuration for the MaterialDesignJsRenderer . view.utils.elementCss.properties.Text view.core.renderers.viewRenderers.display.TextViewRenderer view.utils.elementCss.properties.Transformation view.core.renderers.ViewRenderer Defines an interface for classes that render views. view.utils.elementCss.properties.Visibility view.utils.elementCss.properties.WhiteSpace","title":"All Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers Package view.core.renderers Contains classes that map view trees to DOM trees that comply with Material Design standards. Types DefaultTheme open class DefaultTheme The theme that is applied to views by default. MaterialDesignJsRenderer object MaterialDesignJsRenderer Maps view trees to DOM trees that comply with Material Design standards. RendererConfig open class RendererConfig Contains configuration for the MaterialDesignJsRenderer . ViewRenderer interface ViewRenderer V Defines an interface for classes that render views.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/#package-viewcorerenderers","text":"Contains classes that map view trees to DOM trees that comply with Material Design standards.","title":"Package view.core.renderers"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/#types","text":"DefaultTheme open class DefaultTheme The theme that is applied to views by default. MaterialDesignJsRenderer object MaterialDesignJsRenderer Maps view trees to DOM trees that comply with Material Design standards. RendererConfig open class RendererConfig Contains configuration for the MaterialDesignJsRenderer . ViewRenderer interface ViewRenderer V Defines an interface for classes that render views.","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme DefaultTheme open class DefaultTheme The theme that is applied to views by default. Note that the Theme won't modify view properties that already have a value, it will just set a value if the view property is not initialized. This theme edits view, before they are rendered, as follows: Adds margin to views. See the properties horizontalMargin and verticalMargin for more information. Configures button views. See the properties buttonRipple , buttonRaised and buttonAccentColor for more information. Sets Roboto fonts for TextView s. Constructors init DefaultTheme() The theme that is applied to views by default. Properties buttonAccentColor open val buttonAccentColor: Color If true, buttons will have the Material theme's accent color. buttonRaised open val buttonRaised: Boolean If true, buttons will be raised by default. buttonRipple open val buttonRipple: Boolean If true, a ripple animation when be played whenever a button is pressed. horizontalMargin open val horizontalMargin: Double Specifies the horizontal margin for views in pixels. verticalMargin open val verticalMargin: Double Specifies the vertical margin for views in pixels. Functions setIfEmpty fun K, V MutableMap K , V .setIfEmpty(k: K , v: V ): Unit throwExcp fun throwExcp(): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/#defaulttheme","text":"open class DefaultTheme The theme that is applied to views by default. Note that the Theme won't modify view properties that already have a value, it will just set a value if the view property is not initialized. This theme edits view, before they are rendered, as follows: Adds margin to views. See the properties horizontalMargin and verticalMargin for more information. Configures button views. See the properties buttonRipple , buttonRaised and buttonAccentColor for more information. Sets Roboto fonts for TextView s.","title":"DefaultTheme"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/#constructors","text":"init DefaultTheme() The theme that is applied to views by default.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/#properties","text":"buttonAccentColor open val buttonAccentColor: Color If true, buttons will have the Material theme's accent color. buttonRaised open val buttonRaised: Boolean If true, buttons will be raised by default. buttonRipple open val buttonRipple: Boolean If true, a ripple animation when be played whenever a button is pressed. horizontalMargin open val horizontalMargin: Double Specifies the horizontal margin for views in pixels. verticalMargin open val verticalMargin: Double Specifies the vertical margin for views in pixels.","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/#functions","text":"setIfEmpty fun K, V MutableMap K , V .setIfEmpty(k: K , v: V ): Unit throwExcp fun throwExcp(): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / init init DefaultTheme() The theme that is applied to views by default. Note that the Theme won't modify view properties that already have a value, it will just set a value if the view property is not initialized. This theme edits view, before they are rendered, as follows: Adds margin to views. See the properties horizontalMargin and verticalMargin for more information. Configures button views. See the properties buttonRipple , buttonRaised and buttonAccentColor for more information. Sets Roboto fonts for TextView s.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/-init-/#init","text":"DefaultTheme() The theme that is applied to views by default. Note that the Theme won't modify view properties that already have a value, it will just set a value if the view property is not initialized. This theme edits view, before they are rendered, as follows: Adds margin to views. See the properties horizontalMargin and verticalMargin for more information. Configures button views. See the properties buttonRipple , buttonRaised and buttonAccentColor for more information. Sets Roboto fonts for TextView s.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/button-accent-color/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / buttonAccentColor buttonAccentColor open val buttonAccentColor: Color If true, buttons will have the Material theme's accent color.","title":"Button accent color"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/button-accent-color/#buttonaccentcolor","text":"open val buttonAccentColor: Color If true, buttons will have the Material theme's accent color.","title":"buttonAccentColor"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/button-raised/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / buttonRaised buttonRaised open val buttonRaised: Boolean If true, buttons will be raised by default.","title":"Button raised"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/button-raised/#buttonraised","text":"open val buttonRaised: Boolean If true, buttons will be raised by default.","title":"buttonRaised"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/button-ripple/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / buttonRipple buttonRipple open val buttonRipple: Boolean If true, a ripple animation when be played whenever a button is pressed.","title":"Button ripple"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/button-ripple/#buttonripple","text":"open val buttonRipple: Boolean If true, a ripple animation when be played whenever a button is pressed.","title":"buttonRipple"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/horizontal-margin/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / horizontalMargin horizontalMargin open val horizontalMargin: Double Specifies the horizontal margin for views in pixels.","title":"Horizontal margin"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/horizontal-margin/#horizontalmargin","text":"open val horizontalMargin: Double Specifies the horizontal margin for views in pixels.","title":"horizontalMargin"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/set-if-empty/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / setIfEmpty setIfEmpty protected fun K, V MutableMap K , V .setIfEmpty(k: K , v: V ): Unit","title":"Set if empty"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/set-if-empty/#setifempty","text":"protected fun K, V MutableMap K , V .setIfEmpty(k: K , v: V ): Unit","title":"setIfEmpty"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/throw-excp/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / throwExcp throwExcp protected fun throwExcp(): Unit","title":"Throw excp"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/throw-excp/#throwexcp","text":"protected fun throwExcp(): Unit","title":"throwExcp"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/vertical-margin/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / DefaultTheme / verticalMargin verticalMargin open val verticalMargin: Double Specifies the vertical margin for views in pixels.","title":"Vertical margin"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-default-theme/vertical-margin/#verticalmargin","text":"open val verticalMargin: Double Specifies the vertical margin for views in pixels.","title":"verticalMargin"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / MaterialDesignJsRenderer MaterialDesignJsRenderer object MaterialDesignJsRenderer Maps view trees to DOM trees that comply with Material Design standards. Functions invalidate fun invalidate(view: ERROR CLASS ): Unit physicalView fun V V .physicalView(): ERROR CLASS Returns the DOM node corresponding to the view. setRoot fun setRoot(layout: ERROR CLASS ): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/#materialdesignjsrenderer","text":"object MaterialDesignJsRenderer Maps view trees to DOM trees that comply with Material Design standards.","title":"MaterialDesignJsRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/#functions","text":"invalidate fun invalidate(view: ERROR CLASS ): Unit physicalView fun V V .physicalView(): ERROR CLASS Returns the DOM node corresponding to the view. setRoot fun setRoot(layout: ERROR CLASS ): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/invalidate/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / MaterialDesignJsRenderer / invalidate invalidate fun invalidate(view: ERROR CLASS ): Unit","title":"Invalidate"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/invalidate/#invalidate","text":"fun invalidate(view: ERROR CLASS ): Unit","title":"invalidate"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/physical-view/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / MaterialDesignJsRenderer / physicalView physicalView fun V V .physicalView(): ERROR CLASS Returns the DOM node corresponding to the view.","title":"Physical view"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/physical-view/#physicalview","text":"fun V V .physicalView(): ERROR CLASS Returns the DOM node corresponding to the view.","title":"physicalView"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/set-root/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / MaterialDesignJsRenderer / setRoot setRoot fun setRoot(layout: ERROR CLASS ): Unit","title":"Set root"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-material-design-js-renderer/set-root/#setroot","text":"fun setRoot(layout: ERROR CLASS ): Unit","title":"setRoot"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / RendererConfig RendererConfig open class RendererConfig Contains configuration for the MaterialDesignJsRenderer . Constructors init RendererConfig() Contains configuration for the MaterialDesignJsRenderer . Properties rootLayoutHorizontalNoWrap open val rootLayoutHorizontalNoWrap: Boolean Disables horizontal wrapping for the root layout of the view tree displayed by the renderer.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/#rendererconfig","text":"open class RendererConfig Contains configuration for the MaterialDesignJsRenderer .","title":"RendererConfig"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/#constructors","text":"init RendererConfig() Contains configuration for the MaterialDesignJsRenderer .","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/#properties","text":"rootLayoutHorizontalNoWrap open val rootLayoutHorizontalNoWrap: Boolean Disables horizontal wrapping for the root layout of the view tree displayed by the renderer.","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / RendererConfig / init init RendererConfig() Contains configuration for the MaterialDesignJsRenderer .","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/-init-/#init","text":"RendererConfig() Contains configuration for the MaterialDesignJsRenderer .","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/root-layout-horizontal-no-wrap/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / RendererConfig / rootLayoutHorizontalNoWrap rootLayoutHorizontalNoWrap open val rootLayoutHorizontalNoWrap: Boolean Disables horizontal wrapping for the root layout of the view tree displayed by the renderer.","title":"Root layout horizontal no wrap"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-renderer-config/root-layout-horizontal-no-wrap/#rootlayouthorizontalnowrap","text":"open val rootLayoutHorizontalNoWrap: Boolean Disables horizontal wrapping for the root layout of the view tree displayed by the renderer.","title":"rootLayoutHorizontalNoWrap"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-view-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / ViewRenderer ViewRenderer interface ViewRenderer V Defines an interface for classes that render views. Functions renderView abstract fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view. Inheritors AbstractViewRenderer abstract class AbstractViewRenderer V : ViewRenderer V This class is the base class for all view renderers.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-view-renderer/#viewrenderer","text":"interface ViewRenderer V Defines an interface for classes that render views.","title":"ViewRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-view-renderer/#functions","text":"renderView abstract fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-view-renderer/#inheritors","text":"AbstractViewRenderer abstract class AbstractViewRenderer V : ViewRenderer V This class is the base class for all view renderers.","title":"Inheritors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-view-renderer/render-view/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers / ViewRenderer / renderView renderView abstract fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view. Return The HTML element corresponding to the view.","title":"Render view"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers/-view-renderer/render-view/#renderview","text":"abstract fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view. Return The HTML element corresponding to the view.","title":"renderView"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers Package view.core.renderers.viewRenderers Contains classes that render a single view. Types AbstractViewRenderer abstract class AbstractViewRenderer V : ViewRenderer V This class is the base class for all view renderers.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/#package-viewcorerenderersviewrenderers","text":"Contains classes that render a single view.","title":"Package view.core.renderers.viewRenderers"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/#types","text":"AbstractViewRenderer abstract class AbstractViewRenderer V : ViewRenderer V This class is the base class for all view renderers.","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer AbstractViewRenderer abstract class AbstractViewRenderer V : ViewRenderer V This class is the base class for all view renderers. It renders common view properties i.e. the properties of the View class. The view is rendered by building a DOM node representing the view. The procedure for building the DOM element goes as follows: An instance of the appropriate HTMLElement is passed to the renderer. Note that the DOM element passed may already be built, in this case the renderer is supposed to apply only that view properties that have changed. See reRendering for more details. This class applies common view attributes to the DOM element. The subclassing builder applies the attributes of a specific view type. The resultant HTMLElement is returned. Parameters view - The view to render element - A HTMLElement that will represent the view. reRendering - If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. Constructors init AbstractViewRenderer(view: V , element: ERROR CLASS , reRendering: Boolean = false) This class is the base class for all view renderers. Properties css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render Functions buildElement abstract fun buildElement(): Unit renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view. Inheritors ButtonRenderer open class ButtonRenderer : AbstractViewRenderer ERROR CLASS ImageViewRenderer open class ImageViewRenderer : AbstractViewRenderer ERROR CLASS LayoutRenderer abstract class LayoutRenderer L : AbstractViewRenderer L This is the base class for renderers that render layout views. TextViewRenderer open class TextViewRenderer : AbstractViewRenderer ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/#abstractviewrenderer","text":"abstract class AbstractViewRenderer V : ViewRenderer V This class is the base class for all view renderers. It renders common view properties i.e. the properties of the View class. The view is rendered by building a DOM node representing the view. The procedure for building the DOM element goes as follows: An instance of the appropriate HTMLElement is passed to the renderer. Note that the DOM element passed may already be built, in this case the renderer is supposed to apply only that view properties that have changed. See reRendering for more details. This class applies common view attributes to the DOM element. The subclassing builder applies the attributes of a specific view type. The resultant HTMLElement is returned.","title":"AbstractViewRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/#parameters","text":"view - The view to render element - A HTMLElement that will represent the view. reRendering - If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch.","title":"Parameters"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/#constructors","text":"init AbstractViewRenderer(view: V , element: ERROR CLASS , reRendering: Boolean = false) This class is the base class for all view renderers.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/#properties","text":"css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/#functions","text":"buildElement abstract fun buildElement(): Unit renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/#inheritors","text":"ButtonRenderer open class ButtonRenderer : AbstractViewRenderer ERROR CLASS ImageViewRenderer open class ImageViewRenderer : AbstractViewRenderer ERROR CLASS LayoutRenderer abstract class LayoutRenderer L : AbstractViewRenderer L This is the base class for renderers that render layout views. TextViewRenderer open class TextViewRenderer : AbstractViewRenderer ERROR CLASS","title":"Inheritors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / init init AbstractViewRenderer(view: V , element: ERROR CLASS , reRendering: Boolean = false) This class is the base class for all view renderers. It renders common view properties i.e. the properties of the View class. The view is rendered by building a DOM node representing the view. The procedure for building the DOM element goes as follows: An instance of the appropriate HTMLElement is passed to the renderer. Note that the DOM element passed may already be built, in this case the renderer is supposed to apply only that view properties that have changed. See reRendering for more details. This class applies common view attributes to the DOM element. The subclassing builder applies the attributes of a specific view type. The resultant HTMLElement is returned. Parameters view - The view to render element - A HTMLElement that will represent the view. reRendering - If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/-init-/#init","text":"AbstractViewRenderer(view: V , element: ERROR CLASS , reRendering: Boolean = false) This class is the base class for all view renderers. It renders common view properties i.e. the properties of the View class. The view is rendered by building a DOM node representing the view. The procedure for building the DOM element goes as follows: An instance of the appropriate HTMLElement is passed to the renderer. Note that the DOM element passed may already be built, in this case the renderer is supposed to apply only that view properties that have changed. See reRendering for more details. This class applies common view attributes to the DOM element. The subclassing builder applies the attributes of a specific view type. The resultant HTMLElement is returned.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/-init-/#parameters","text":"view - The view to render element - A HTMLElement that will represent the view. reRendering - If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch.","title":"Parameters"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / buildElement buildElement protected abstract fun buildElement(): Unit","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/build-element/#buildelement","text":"protected abstract fun buildElement(): Unit","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/css/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / css css protected val css: ElementCss","title":"Css"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/css/#css","text":"protected val css: ElementCss","title":"css"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / element element protected val element: ERROR CLASS A HTMLElement that will represent the view.","title":"Element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/element/#element","text":"protected val element: ERROR CLASS A HTMLElement that will represent the view.","title":"element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/re-rendering/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / reRendering reRendering protected val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch.","title":"Re rendering"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/re-rendering/#rerendering","text":"protected val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch.","title":"reRendering"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/render-view/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / renderView renderView open fun renderView(): ERROR CLASS Overrides ViewRenderer.renderView Builds a DOM element corresponding to the view. Return The HTML element corresponding to the view.","title":"Render view"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/render-view/#renderview","text":"open fun renderView(): ERROR CLASS Overrides ViewRenderer.renderView Builds a DOM element corresponding to the view. Return The HTML element corresponding to the view.","title":"renderView"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/view/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers / AbstractViewRenderer / view view protected val view: V The view to render","title":"View"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers/-abstract-view-renderer/view/#view","text":"protected val view: V The view to render","title":"view"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display Package view.core.renderers.viewRenderers.display Types ImageViewRenderer open class ImageViewRenderer : AbstractViewRenderer ERROR CLASS TextViewRenderer open class TextViewRenderer : AbstractViewRenderer ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/#package-viewcorerenderersviewrenderersdisplay","text":"","title":"Package view.core.renderers.viewRenderers.display"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/#types","text":"ImageViewRenderer open class ImageViewRenderer : AbstractViewRenderer ERROR CLASS TextViewRenderer open class TextViewRenderer : AbstractViewRenderer ERROR CLASS","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display / ImageViewRenderer ImageViewRenderer open class ImageViewRenderer : AbstractViewRenderer ERROR CLASS Constructors init ImageViewRenderer(view: ERROR CLASS ) ImageViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true) Inherited Properties css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render Functions buildElement open fun buildElement(): Unit Inherited Functions renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/#imageviewrenderer","text":"open class ImageViewRenderer : AbstractViewRenderer ERROR CLASS","title":"ImageViewRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/#constructors","text":"init ImageViewRenderer(view: ERROR CLASS ) ImageViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/#inherited-properties","text":"css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render","title":"Inherited Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/#functions","text":"buildElement open fun buildElement(): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/#inherited-functions","text":"renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display / ImageViewRenderer / init init ImageViewRenderer(view: ERROR CLASS ) ImageViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/-init-/#init","text":"ImageViewRenderer(view: ERROR CLASS ) ImageViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display / ImageViewRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-image-view-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display / TextViewRenderer TextViewRenderer open class TextViewRenderer : AbstractViewRenderer ERROR CLASS Constructors init TextViewRenderer(view: ERROR CLASS ) TextViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true) Inherited Properties css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render Functions buildElement open fun buildElement(): Unit Inherited Functions renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/#textviewrenderer","text":"open class TextViewRenderer : AbstractViewRenderer ERROR CLASS","title":"TextViewRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/#constructors","text":"init TextViewRenderer(view: ERROR CLASS ) TextViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/#inherited-properties","text":"css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render","title":"Inherited Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/#functions","text":"buildElement open fun buildElement(): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/#inherited-functions","text":"renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display / TextViewRenderer / init init TextViewRenderer(view: ERROR CLASS ) TextViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/-init-/#init","text":"TextViewRenderer(view: ERROR CLASS ) TextViewRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.display / TextViewRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.display/-text-view-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs Package view.core.renderers.viewRenderers.inputs Types ButtonRenderer open class ButtonRenderer : AbstractViewRenderer ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/#package-viewcorerenderersviewrenderersinputs","text":"","title":"Package view.core.renderers.viewRenderers.inputs"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/#types","text":"ButtonRenderer open class ButtonRenderer : AbstractViewRenderer ERROR CLASS","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer ButtonRenderer open class ButtonRenderer : AbstractViewRenderer ERROR CLASS Types ButtonConfig class ButtonConfig Constructors init ButtonRenderer(view: ERROR CLASS ) ButtonRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true) Inherited Properties css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render Functions buildElement open fun buildElement(): Unit Inherited Functions renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/#buttonrenderer","text":"open class ButtonRenderer : AbstractViewRenderer ERROR CLASS","title":"ButtonRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/#types","text":"ButtonConfig class ButtonConfig","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/#constructors","text":"init ButtonRenderer(view: ERROR CLASS ) ButtonRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/#inherited-properties","text":"css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render","title":"Inherited Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/#functions","text":"buildElement open fun buildElement(): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/#inherited-functions","text":"renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / init init ButtonRenderer(view: ERROR CLASS ) ButtonRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-init-/#init","text":"ButtonRenderer(view: ERROR CLASS ) ButtonRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig ButtonConfig class ButtonConfig Types Color enum class Color Type enum class Type Constructors init ButtonConfig() Properties accentColor val accentColor: ERROR CLASS keys var keys: MutableMap String , Any ? raise val raise: Boolean ? ripple val ripple: ERROR CLASS type val type: ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/#buttonconfig","text":"class ButtonConfig","title":"ButtonConfig"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/#types","text":"Color enum class Color Type enum class Type","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/#constructors","text":"init ButtonConfig()","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/#properties","text":"accentColor val accentColor: ERROR CLASS keys var keys: MutableMap String , Any ? raise val raise: Boolean ? ripple val ripple: ERROR CLASS type val type: ERROR CLASS","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / init init ButtonConfig()","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-init-/#init","text":"ButtonConfig()","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/accent-color/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / accentColor accentColor val accentColor: ERROR CLASS","title":"Accent color"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/accent-color/#accentcolor","text":"val accentColor: ERROR CLASS","title":"accentColor"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/keys/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / keys keys var keys: MutableMap String , Any ?","title":"Keys"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/keys/#keys","text":"var keys: MutableMap String , Any ?","title":"keys"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/raise/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / raise raise val raise: Boolean ?","title":"Raise"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/raise/#raise","text":"val raise: Boolean ?","title":"raise"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/ripple/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / ripple ripple val ripple: ERROR CLASS","title":"Ripple"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/ripple/#ripple","text":"val ripple: ERROR CLASS","title":"ripple"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/type/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / type type val type: ERROR CLASS","title":"Type"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/type/#type","text":"val type: ERROR CLASS","title":"type"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Color Color enum class Color Enum Values PRIMARY ACCENT NONE","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/#color","text":"enum class Color","title":"Color"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/#enum-values","text":"PRIMARY ACCENT NONE","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/-a-c-c-e-n-t/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Color / ACCENT ACCENT ACCENT","title":" a c c e n t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/-a-c-c-e-n-t/#accent","text":"ACCENT","title":"ACCENT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/-n-o-n-e/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Color / NONE NONE NONE","title":" n o n e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/-n-o-n-e/#none","text":"NONE","title":"NONE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/-p-r-i-m-a-r-y/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Color / PRIMARY PRIMARY PRIMARY","title":" p r i m a r y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-color/-p-r-i-m-a-r-y/#primary","text":"PRIMARY","title":"PRIMARY"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Type Type enum class Type Enum Values FAB FLAT","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/#type","text":"enum class Type","title":"Type"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/#enum-values","text":"FAB FLAT","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/-f-a-b/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Type / FAB FAB FAB","title":" f a b"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/-f-a-b/#fab","text":"FAB","title":"FAB"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/-f-l-a-t/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.inputs / ButtonRenderer / ButtonConfig / Type / FLAT FLAT FLAT","title":" f l a t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.inputs/-button-renderer/-button-config/-type/-f-l-a-t/#flat","text":"FLAT","title":"FLAT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts Package view.core.renderers.viewRenderers.layouts Types GridLayoutRenderer open class GridLayoutRenderer : LayoutRenderer ERROR CLASS LayoutRenderer abstract class LayoutRenderer L : AbstractViewRenderer L This is the base class for renderers that render layout views. LinearLayoutRenderer open class LinearLayoutRenderer : LayoutRenderer ERROR CLASS RelativeLayoutRenderer open class RelativeLayoutRenderer : LayoutRenderer ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/#package-viewcorerenderersviewrendererslayouts","text":"","title":"Package view.core.renderers.viewRenderers.layouts"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/#types","text":"GridLayoutRenderer open class GridLayoutRenderer : LayoutRenderer ERROR CLASS LayoutRenderer abstract class LayoutRenderer L : AbstractViewRenderer L This is the base class for renderers that render layout views. LinearLayoutRenderer open class LinearLayoutRenderer : LayoutRenderer ERROR CLASS RelativeLayoutRenderer open class RelativeLayoutRenderer : LayoutRenderer ERROR CLASS","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / GridLayoutRenderer GridLayoutRenderer open class GridLayoutRenderer : LayoutRenderer ERROR CLASS Constructors init GridLayoutRenderer(view: ERROR CLASS ) GridLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true) Functions beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS Inherited Functions getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int getViewsToBeRendered open fun getViewsToBeRendered(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/#gridlayoutrenderer","text":"open class GridLayoutRenderer : LayoutRenderer ERROR CLASS","title":"GridLayoutRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/#constructors","text":"init GridLayoutRenderer(view: ERROR CLASS ) GridLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/#functions","text":"beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/#inherited-functions","text":"getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int getViewsToBeRendered open fun getViewsToBeRendered(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / GridLayoutRenderer / init init GridLayoutRenderer(view: ERROR CLASS ) GridLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/-init-/#init","text":"GridLayoutRenderer(view: ERROR CLASS ) GridLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/before-child-is-removed/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / GridLayoutRenderer / beforeChildIsRemoved beforeChildIsRemoved protected open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.beforeChildIsRemoved","title":"Before child is removed"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/before-child-is-removed/#beforechildisremoved","text":"protected open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.beforeChildIsRemoved","title":"beforeChildIsRemoved"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / GridLayoutRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides LayoutRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides LayoutRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/child-created/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / GridLayoutRenderer / childCreated childCreated protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.childCreated","title":"Child created"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/child-created/#childcreated","text":"protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.childCreated","title":"childCreated"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/get-child-elements/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / GridLayoutRenderer / getChildElements getChildElements protected open fun getChildElements(): List ERROR CLASS Overrides LayoutRenderer.getChildElements","title":"Get child elements"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-grid-layout-renderer/get-child-elements/#getchildelements","text":"protected open fun getChildElements(): List ERROR CLASS Overrides LayoutRenderer.getChildElements","title":"getChildElements"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer LayoutRenderer abstract class LayoutRenderer L : AbstractViewRenderer L This is the base class for renderers that render layout views. The procedure for rendering layout views goes as follows: The AbstractViewRenderer applies common view attributes. This class applies scrolling to the element Renders any newly added children or all children if the view is being rendered for the first time. Removes any child UI components that were removed from the layout view Listener functions for child view rendering/removal so that subclassing layout renderers can apply layout specific positioning logic. Constructors init LayoutRenderer(view: L ) This constructor is used when rendering the view for the first time. LayoutRenderer(view: L , element: ERROR CLASS , reRendering: Boolean = true) This is the base class for renderers that render layout views. Inherited Properties css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render Functions beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int getViewsToBeRendered open fun getViewsToBeRendered(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit Inherited Functions renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view. Inheritors GridLayoutRenderer open class GridLayoutRenderer : LayoutRenderer ERROR CLASS LinearLayoutRenderer open class LinearLayoutRenderer : LayoutRenderer ERROR CLASS RelativeLayoutRenderer open class RelativeLayoutRenderer : LayoutRenderer ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/#layoutrenderer","text":"abstract class LayoutRenderer L : AbstractViewRenderer L This is the base class for renderers that render layout views. The procedure for rendering layout views goes as follows: The AbstractViewRenderer applies common view attributes. This class applies scrolling to the element Renders any newly added children or all children if the view is being rendered for the first time. Removes any child UI components that were removed from the layout view Listener functions for child view rendering/removal so that subclassing layout renderers can apply layout specific positioning logic.","title":"LayoutRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/#constructors","text":"init LayoutRenderer(view: L ) This constructor is used when rendering the view for the first time. LayoutRenderer(view: L , element: ERROR CLASS , reRendering: Boolean = true) This is the base class for renderers that render layout views.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/#inherited-properties","text":"css val css: ElementCss element val element: ERROR CLASS A HTMLElement that will represent the view. reRendering val reRendering: Boolean If true, this parameter indicates that the element passed was already built. This happens when a view is already rendered and one of its properties changes later. In this case the renderer should only update the element and not rebuild it from scratch. view val view: V The view to render","title":"Inherited Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/#functions","text":"beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int getViewsToBeRendered open fun getViewsToBeRendered(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/#inherited-functions","text":"renderView open fun renderView(): ERROR CLASS Builds a DOM element corresponding to the view.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/#inheritors","text":"GridLayoutRenderer open class GridLayoutRenderer : LayoutRenderer ERROR CLASS LinearLayoutRenderer open class LinearLayoutRenderer : LayoutRenderer ERROR CLASS RelativeLayoutRenderer open class RelativeLayoutRenderer : LayoutRenderer ERROR CLASS","title":"Inheritors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / init init LayoutRenderer(view: L ) This constructor is used when rendering the view for the first time. LayoutRenderer(view: L , element: ERROR CLASS , reRendering: Boolean = true) This is the base class for renderers that render layout views. The procedure for rendering layout views goes as follows: The AbstractViewRenderer applies common view attributes. This class applies scrolling to the element Renders any newly added children or all children if the view is being rendered for the first time. Removes any child UI components that were removed from the layout view Listener functions for child view rendering/removal so that subclassing layout renderers can apply layout specific positioning logic.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/-init-/#init","text":"LayoutRenderer(view: L ) This constructor is used when rendering the view for the first time. LayoutRenderer(view: L , element: ERROR CLASS , reRendering: Boolean = true) This is the base class for renderers that render layout views. The procedure for rendering layout views goes as follows: The AbstractViewRenderer applies common view attributes. This class applies scrolling to the element Renders any newly added children or all children if the view is being rendered for the first time. Removes any child UI components that were removed from the layout view Listener functions for child view rendering/removal so that subclassing layout renderers can apply layout specific positioning logic.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/before-child-is-removed/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / beforeChildIsRemoved beforeChildIsRemoved protected open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean","title":"Before child is removed"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/before-child-is-removed/#beforechildisremoved","text":"protected open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean","title":"beforeChildIsRemoved"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides AbstractViewRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/child-created/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / childCreated childCreated protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean","title":"Child created"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/child-created/#childcreated","text":"protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean","title":"childCreated"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/get-child-elements/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / getChildElements getChildElements protected open fun getChildElements(): List ERROR CLASS","title":"Get child elements"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/get-child-elements/#getchildelements","text":"protected open fun getChildElements(): List ERROR CLASS","title":"getChildElements"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/get-views-to-be-removed/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / getViewsToBeRemoved getViewsToBeRemoved protected open fun getViewsToBeRemoved(): List Int","title":"Get views to be removed"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/get-views-to-be-removed/#getviewstoberemoved","text":"protected open fun getViewsToBeRemoved(): List Int","title":"getViewsToBeRemoved"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/get-views-to-be-rendered/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / getViewsToBeRendered getViewsToBeRendered protected open fun getViewsToBeRendered(): List Int","title":"Get views to be rendered"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/get-views-to-be-rendered/#getviewstoberendered","text":"protected open fun getViewsToBeRendered(): List Int","title":"getViewsToBeRendered"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/remove-children/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / removeChildren removeChildren protected open fun removeChildren(): Unit","title":"Remove children"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/remove-children/#removechildren","text":"protected open fun removeChildren(): Unit","title":"removeChildren"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/render-children/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LayoutRenderer / renderChildren renderChildren protected open fun renderChildren(): Unit","title":"Render children"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-layout-renderer/render-children/#renderchildren","text":"protected open fun renderChildren(): Unit","title":"renderChildren"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer LinearLayoutRenderer open class LinearLayoutRenderer : LayoutRenderer ERROR CLASS Types LinearLayoutConfig class LinearLayoutConfig Constructors init LinearLayoutRenderer(view: ERROR CLASS ) LinearLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true) Properties layoutConfig var layoutConfig: LinearLayoutConfig Functions buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Inherited Functions beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int getViewsToBeRendered open fun getViewsToBeRendered(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/#linearlayoutrenderer","text":"open class LinearLayoutRenderer : LayoutRenderer ERROR CLASS","title":"LinearLayoutRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/#types","text":"LinearLayoutConfig class LinearLayoutConfig","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/#constructors","text":"init LinearLayoutRenderer(view: ERROR CLASS ) LinearLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/#properties","text":"layoutConfig var layoutConfig: LinearLayoutConfig","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/#functions","text":"buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/#inherited-functions","text":"beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int getViewsToBeRendered open fun getViewsToBeRendered(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / init init LinearLayoutRenderer(view: ERROR CLASS ) LinearLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-init-/#init","text":"LinearLayoutRenderer(view: ERROR CLASS ) LinearLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides LayoutRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides LayoutRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/child-created/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / childCreated childCreated protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.childCreated","title":"Child created"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/child-created/#childcreated","text":"protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.childCreated","title":"childCreated"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/layout-config/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / layoutConfig layoutConfig var layoutConfig: LinearLayoutConfig","title":"Layout config"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/layout-config/#layoutconfig","text":"var layoutConfig: LinearLayoutConfig","title":"layoutConfig"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / LinearLayoutConfig LinearLayoutConfig class LinearLayoutConfig Constructors init LinearLayoutConfig() Properties isCard var isCard: ERROR CLASS keys var keys: MutableMap String , Any ?","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/#linearlayoutconfig","text":"class LinearLayoutConfig","title":"LinearLayoutConfig"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/#constructors","text":"init LinearLayoutConfig()","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/#properties","text":"isCard var isCard: ERROR CLASS keys var keys: MutableMap String , Any ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / LinearLayoutConfig / init init LinearLayoutConfig()","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/-init-/#init","text":"LinearLayoutConfig()","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/is-card/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / LinearLayoutConfig / isCard isCard var isCard: ERROR CLASS","title":"Is card"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/is-card/#iscard","text":"var isCard: ERROR CLASS","title":"isCard"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/keys/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / LinearLayoutRenderer / LinearLayoutConfig / keys keys var keys: MutableMap String , Any ?","title":"Keys"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-linear-layout-renderer/-linear-layout-config/keys/#keys","text":"var keys: MutableMap String , Any ?","title":"keys"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / RelativeLayoutRenderer RelativeLayoutRenderer open class RelativeLayoutRenderer : LayoutRenderer ERROR CLASS Constructors init RelativeLayoutRenderer(view: ERROR CLASS ) RelativeLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true) Functions buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean getViewsToBeRendered open fun getViewsToBeRendered(): List Int Inherited Functions beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/#relativelayoutrenderer","text":"open class RelativeLayoutRenderer : LayoutRenderer ERROR CLASS","title":"RelativeLayoutRenderer"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/#constructors","text":"init RelativeLayoutRenderer(view: ERROR CLASS ) RelativeLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/#functions","text":"buildElement open fun buildElement(): Unit childCreated open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean getViewsToBeRendered open fun getViewsToBeRendered(): List Int","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/#inherited-functions","text":"beforeChildIsRemoved open fun beforeChildIsRemoved(childElement: ERROR CLASS ): Boolean getChildElements open fun getChildElements(): List ERROR CLASS getViewsToBeRemoved open fun getViewsToBeRemoved(): List Int removeChildren open fun removeChildren(): Unit renderChildren open fun renderChildren(): Unit","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/-init-/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / RelativeLayoutRenderer / init init RelativeLayoutRenderer(view: ERROR CLASS ) RelativeLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/-init-/#init","text":"RelativeLayoutRenderer(view: ERROR CLASS ) RelativeLayoutRenderer(view: ERROR CLASS , element: ERROR CLASS , reRendering: Boolean = true)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/build-element/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / RelativeLayoutRenderer / buildElement buildElement protected open fun buildElement(): Unit Overrides LayoutRenderer.buildElement","title":"Build element"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/build-element/#buildelement","text":"protected open fun buildElement(): Unit Overrides LayoutRenderer.buildElement","title":"buildElement"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/child-created/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / RelativeLayoutRenderer / childCreated childCreated protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.childCreated","title":"Child created"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/child-created/#childcreated","text":"protected open fun childCreated(child: ERROR CLASS , childElement: ERROR CLASS ): Boolean Overrides LayoutRenderer.childCreated","title":"childCreated"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/get-views-to-be-rendered/","text":"MaterialDesignJsVeiwRenderer / view.core.renderers.viewRenderers.layouts / RelativeLayoutRenderer / getViewsToBeRendered getViewsToBeRendered protected open fun getViewsToBeRendered(): List Int Overrides LayoutRenderer.getViewsToBeRendered","title":"Get views to be rendered"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.core.renderers.view-renderers.layouts/-relative-layout-renderer/get-views-to-be-rendered/#getviewstoberendered","text":"protected open fun getViewsToBeRendered(): List Int Overrides LayoutRenderer.getViewsToBeRendered","title":"getViewsToBeRendered"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/","text":"MaterialDesignJsVeiwRenderer / view.di Package view.di Contains DI bindings for this renderer. These bindings should be added to the View library's bindings before being used. Types Container object Container","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/#package-viewdi","text":"Contains DI bindings for this renderer. These bindings should be added to the View library's bindings before being used.","title":"Package view.di"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/#types","text":"Container object Container","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/-container/","text":"MaterialDesignJsVeiwRenderer / view.di / Container Container object Container Properties kodein val kodein: ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/-container/#container","text":"object Container","title":"Container"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/-container/#properties","text":"kodein val kodein: ERROR CLASS","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/-container/kodein/","text":"MaterialDesignJsVeiwRenderer / view.di / Container / kodein kodein val kodein: ERROR CLASS","title":"Kodein"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.di/-container/kodein/#kodein","text":"val kodein: ERROR CLASS","title":"kodein"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/","text":"MaterialDesignJsVeiwRenderer / view.utils.algos.graph Package view.utils.algos.graph Types Graph class Graph T : Any Used for topological sorting and detection of circular dependencies.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/#package-viewutilsalgosgraph","text":"","title":"Package view.utils.algos.graph"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/#types","text":"Graph class Graph T : Any Used for topological sorting and detection of circular dependencies.","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/","text":"MaterialDesignJsVeiwRenderer / view.utils.algos.graph / Graph Graph class Graph T : Any Used for topological sorting and detection of circular dependencies. One usage of this class is for detecting circular dependencies between positioning rule of RelativeLayout children and figuring which child to render first. Constructors init Graph() Used for topological sorting and detection of circular dependencies. Functions addEdge fun addEdge(from: T , to: T ): Unit topologicalSort fun topologicalSort(): List T Companion Object Functions fromEdges fun T : Any fromEdges(edges: List ERROR CLASS T , T ): Graph T","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/#graph","text":"class Graph T : Any Used for topological sorting and detection of circular dependencies. One usage of this class is for detecting circular dependencies between positioning rule of RelativeLayout children and figuring which child to render first.","title":"Graph"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/#constructors","text":"init Graph() Used for topological sorting and detection of circular dependencies.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/#functions","text":"addEdge fun addEdge(from: T , to: T ): Unit topologicalSort fun topologicalSort(): List T","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/#companion-object-functions","text":"fromEdges fun T : Any fromEdges(edges: List ERROR CLASS T , T ): Graph T","title":"Companion Object Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.algos.graph / Graph / init init Graph() Used for topological sorting and detection of circular dependencies. One usage of this class is for detecting circular dependencies between positioning rule of RelativeLayout children and figuring which child to render first.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/-init-/#init","text":"Graph() Used for topological sorting and detection of circular dependencies. One usage of this class is for detecting circular dependencies between positioning rule of RelativeLayout children and figuring which child to render first.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/add-edge/","text":"MaterialDesignJsVeiwRenderer / view.utils.algos.graph / Graph / addEdge addEdge fun addEdge(from: T , to: T ): Unit","title":"Add edge"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/add-edge/#addedge","text":"fun addEdge(from: T , to: T ): Unit","title":"addEdge"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/from-edges/","text":"MaterialDesignJsVeiwRenderer / view.utils.algos.graph / Graph / fromEdges fromEdges fun T : Any fromEdges(edges: List ERROR CLASS T , T ): Graph T","title":"From edges"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/from-edges/#fromedges","text":"fun T : Any fromEdges(edges: List ERROR CLASS T , T ): Graph T","title":"fromEdges"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/topological-sort/","text":"MaterialDesignJsVeiwRenderer / view.utils.algos.graph / Graph / topologicalSort topologicalSort fun topologicalSort(): List T","title":"Topological sort"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.algos.graph/-graph/topological-sort/#topologicalsort","text":"fun topologicalSort(): List T","title":"topologicalSort"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss Package view.utils.elementCss Contains classes useful for describing an HTML element's style. Tha main components of this package are the: ElementCss CssProperty CssValue Types ElementCss open class ElementCss Represents an element's inline CSS. RelativePositioning object RelativePositioning Contains utility methods for positioning DOM elements in relation to each other.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/#package-viewutilselementcss","text":"Contains classes useful for describing an HTML element's style. Tha main components of this package are the: ElementCss CssProperty CssValue","title":"Package view.utils.elementCss"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/#types","text":"ElementCss open class ElementCss Represents an element's inline CSS. RelativePositioning object RelativePositioning Contains utility methods for positioning DOM elements in relation to each other.","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss ElementCss open class ElementCss Represents an element's inline CSS. Constructors init ElementCss() Represents an element's inline CSS. Properties bottom val bottom: Dimension display var display: Display ? end val end: Dimension flexItemSettings val flexItemSettings: FlexItemSettings flexSettings val flexSettings: FlexSettings font val font: Font grid val grid: Grid gridItem val gridItem: GridItem height val height: Dimension marginBottom val marginBottom: Dimension marginEnd val marginEnd: Dimension marginStart val marginStart: Dimension marginTop val marginTop: Dimension overflowX val overflowX: Overflow overflowY val overflowY: Overflow paddingBottom val paddingBottom: Dimension paddingEnd val paddingEnd: Dimension paddingStart val paddingStart: Dimension paddingTop val paddingTop: Dimension position var position: Position ? start val start: Dimension text val text: Text top val top: Dimension transformation val transformation: Transformation visibility var visibility: Visibility ? whiteSpace var whiteSpace: WhiteSpace ? width val width: Dimension Functions applyTo open fun applyTo(element: ERROR CLASS ): Unit Applies this style to an element's inline style. extend fun extend(style: ElementCss , override: Boolean = false): Unit Inherits the style of another element.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/#elementcss","text":"open class ElementCss Represents an element's inline CSS.","title":"ElementCss"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/#constructors","text":"init ElementCss() Represents an element's inline CSS.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/#properties","text":"bottom val bottom: Dimension display var display: Display ? end val end: Dimension flexItemSettings val flexItemSettings: FlexItemSettings flexSettings val flexSettings: FlexSettings font val font: Font grid val grid: Grid gridItem val gridItem: GridItem height val height: Dimension marginBottom val marginBottom: Dimension marginEnd val marginEnd: Dimension marginStart val marginStart: Dimension marginTop val marginTop: Dimension overflowX val overflowX: Overflow overflowY val overflowY: Overflow paddingBottom val paddingBottom: Dimension paddingEnd val paddingEnd: Dimension paddingStart val paddingStart: Dimension paddingTop val paddingTop: Dimension position var position: Position ? start val start: Dimension text val text: Text top val top: Dimension transformation val transformation: Transformation visibility var visibility: Visibility ? whiteSpace var whiteSpace: WhiteSpace ? width val width: Dimension","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/#functions","text":"applyTo open fun applyTo(element: ERROR CLASS ): Unit Applies this style to an element's inline style. extend fun extend(style: ElementCss , override: Boolean = false): Unit Inherits the style of another element.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / init init ElementCss() Represents an element's inline CSS.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/-init-/#init","text":"ElementCss() Represents an element's inline CSS.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/apply-to/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / applyTo applyTo open fun applyTo(element: ERROR CLASS ): Unit Applies this style to an element's inline style. Parameters element - The element to apply the style to.","title":"Apply to"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/apply-to/#applyto","text":"open fun applyTo(element: ERROR CLASS ): Unit Applies this style to an element's inline style.","title":"applyTo"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/apply-to/#parameters","text":"element - The element to apply the style to.","title":"Parameters"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/bottom/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / bottom bottom val bottom: Dimension","title":"Bottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/bottom/#bottom","text":"val bottom: Dimension","title":"bottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/display/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / display display var display: Display ?","title":"Display"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/display/#display","text":"var display: Display ?","title":"display"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/end/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / end end val end: Dimension","title":"End"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/end/#end","text":"val end: Dimension","title":"end"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/extend/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / extend extend fun extend(style: ElementCss , override: Boolean = false): Unit Inherits the style of another element. Parameters style - The style to extend. override - If true, current values would be overidden by the extended style.","title":"Extend"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/extend/#extend","text":"fun extend(style: ElementCss , override: Boolean = false): Unit Inherits the style of another element.","title":"extend"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/extend/#parameters","text":"style - The style to extend. override - If true, current values would be overidden by the extended style.","title":"Parameters"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/flex-item-settings/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / flexItemSettings flexItemSettings val flexItemSettings: FlexItemSettings","title":"Flex item settings"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/flex-item-settings/#flexitemsettings","text":"val flexItemSettings: FlexItemSettings","title":"flexItemSettings"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/flex-settings/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / flexSettings flexSettings val flexSettings: FlexSettings","title":"Flex settings"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/flex-settings/#flexsettings","text":"val flexSettings: FlexSettings","title":"flexSettings"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/font/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / font font val font: Font","title":"Font"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/font/#font","text":"val font: Font","title":"font"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/grid-item/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / gridItem gridItem val gridItem: GridItem","title":"Grid item"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/grid-item/#griditem","text":"val gridItem: GridItem","title":"gridItem"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/grid/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / grid grid val grid: Grid","title":"Grid"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/grid/#grid","text":"val grid: Grid","title":"grid"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/height/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / height height val height: Dimension","title":"Height"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/height/#height","text":"val height: Dimension","title":"height"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-bottom/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / marginBottom marginBottom val marginBottom: Dimension","title":"Margin bottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-bottom/#marginbottom","text":"val marginBottom: Dimension","title":"marginBottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-end/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / marginEnd marginEnd val marginEnd: Dimension","title":"Margin end"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-end/#marginend","text":"val marginEnd: Dimension","title":"marginEnd"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-start/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / marginStart marginStart val marginStart: Dimension","title":"Margin start"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-start/#marginstart","text":"val marginStart: Dimension","title":"marginStart"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-top/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / marginTop marginTop val marginTop: Dimension","title":"Margin top"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/margin-top/#margintop","text":"val marginTop: Dimension","title":"marginTop"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/overflow-x/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / overflowX overflowX val overflowX: Overflow","title":"Overflow x"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/overflow-x/#overflowx","text":"val overflowX: Overflow","title":"overflowX"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/overflow-y/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / overflowY overflowY val overflowY: Overflow","title":"Overflow y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/overflow-y/#overflowy","text":"val overflowY: Overflow","title":"overflowY"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-bottom/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / paddingBottom paddingBottom val paddingBottom: Dimension","title":"Padding bottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-bottom/#paddingbottom","text":"val paddingBottom: Dimension","title":"paddingBottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-end/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / paddingEnd paddingEnd val paddingEnd: Dimension","title":"Padding end"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-end/#paddingend","text":"val paddingEnd: Dimension","title":"paddingEnd"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-start/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / paddingStart paddingStart val paddingStart: Dimension","title":"Padding start"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-start/#paddingstart","text":"val paddingStart: Dimension","title":"paddingStart"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-top/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / paddingTop paddingTop val paddingTop: Dimension","title":"Padding top"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/padding-top/#paddingtop","text":"val paddingTop: Dimension","title":"paddingTop"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/position/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / position position var position: Position ?","title":"Position"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/position/#position","text":"var position: Position ?","title":"position"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/start/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / start start val start: Dimension","title":"Start"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/start/#start","text":"val start: Dimension","title":"start"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/text/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / text text val text: Text","title":"Text"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/text/#text","text":"val text: Text","title":"text"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/top/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / top top val top: Dimension","title":"Top"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/top/#top","text":"val top: Dimension","title":"top"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/transformation/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / transformation transformation val transformation: Transformation","title":"Transformation"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/transformation/#transformation","text":"val transformation: Transformation","title":"transformation"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/visibility/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / visibility visibility var visibility: Visibility ?","title":"Visibility"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/visibility/#visibility","text":"var visibility: Visibility ?","title":"visibility"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/white-space/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / whiteSpace whiteSpace var whiteSpace: WhiteSpace ?","title":"White space"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/white-space/#whitespace","text":"var whiteSpace: WhiteSpace ?","title":"whiteSpace"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/width/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / ElementCss / width width val width: Dimension","title":"Width"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-element-css/width/#width","text":"val width: Dimension","title":"width"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning RelativePositioning object RelativePositioning Contains utility methods for positioning DOM elements in relation to each other. Functions alignToParentBottom fun alignToParentBottom(childCss: ElementCss ): Unit alignToParentEnd fun alignToParentEnd(childCss: ElementCss ): Unit alignToParentStart fun alignToParentStart(childCss: ElementCss ): Unit alignToParentTop fun alignToParentTop(childCss: ElementCss ): Unit centerHorizontal fun centerHorizontal(childCss: ElementCss ): Unit centerVertical fun centerVertical(childCss: ElementCss ): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/#relativepositioning","text":"object RelativePositioning Contains utility methods for positioning DOM elements in relation to each other.","title":"RelativePositioning"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/#functions","text":"alignToParentBottom fun alignToParentBottom(childCss: ElementCss ): Unit alignToParentEnd fun alignToParentEnd(childCss: ElementCss ): Unit alignToParentStart fun alignToParentStart(childCss: ElementCss ): Unit alignToParentTop fun alignToParentTop(childCss: ElementCss ): Unit centerHorizontal fun centerHorizontal(childCss: ElementCss ): Unit centerVertical fun centerVertical(childCss: ElementCss ): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-bottom/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning / alignToParentBottom alignToParentBottom fun alignToParentBottom(childCss: ElementCss ): Unit","title":"Align to parent bottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-bottom/#aligntoparentbottom","text":"fun alignToParentBottom(childCss: ElementCss ): Unit","title":"alignToParentBottom"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-end/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning / alignToParentEnd alignToParentEnd fun alignToParentEnd(childCss: ElementCss ): Unit","title":"Align to parent end"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-end/#aligntoparentend","text":"fun alignToParentEnd(childCss: ElementCss ): Unit","title":"alignToParentEnd"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-start/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning / alignToParentStart alignToParentStart fun alignToParentStart(childCss: ElementCss ): Unit","title":"Align to parent start"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-start/#aligntoparentstart","text":"fun alignToParentStart(childCss: ElementCss ): Unit","title":"alignToParentStart"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-top/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning / alignToParentTop alignToParentTop fun alignToParentTop(childCss: ElementCss ): Unit","title":"Align to parent top"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/align-to-parent-top/#aligntoparenttop","text":"fun alignToParentTop(childCss: ElementCss ): Unit","title":"alignToParentTop"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/center-horizontal/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning / centerHorizontal centerHorizontal fun centerHorizontal(childCss: ElementCss ): Unit","title":"Center horizontal"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/center-horizontal/#centerhorizontal","text":"fun centerHorizontal(childCss: ElementCss ): Unit","title":"centerHorizontal"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/center-vertical/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss / RelativePositioning / centerVertical centerVertical fun centerVertical(childCss: ElementCss ): Unit","title":"Center vertical"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css/-relative-positioning/center-vertical/#centervertical","text":"fun centerVertical(childCss: ElementCss ): Unit","title":"centerVertical"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties Package view.utils.elementCss.properties Types CssProperty interface CssProperty Defines an interface for classes that represent a css property. CssValue interface CssValue Represents a value of a CSS property. Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Display enum class Display : CssProperty , CssValue FlexItemSettings open class FlexItemSettings : CssProperty Sets CSS properties of child elements of a FlexBox. FlexSettings open class FlexSettings : CssProperty Sets CSS properties related to a FlexBox container. Font class Font : CssProperty Grid class Grid : CssProperty Sets CSS properties related to a CSS grid. GridItem class GridItem : CssProperty Sets the css properties related to the CSS Grid. Number class Number : CssValue Represents a numerical CSS value. Overflow class Overflow : CssProperty Position enum class Position : CssValue , CssProperty Text class Text : CssProperty Transformation open class Transformation : CssProperty Visibility enum class Visibility : CssValue , CssProperty WhiteSpace enum class WhiteSpace : CssValue , CssProperty Type Aliases CssDimen typealias CssDimen = Dimension CssUnit typealias CssUnit = Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/#package-viewutilselementcssproperties","text":"","title":"Package view.utils.elementCss.properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/#types","text":"CssProperty interface CssProperty Defines an interface for classes that represent a css property. CssValue interface CssValue Represents a value of a CSS property. Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Display enum class Display : CssProperty , CssValue FlexItemSettings open class FlexItemSettings : CssProperty Sets CSS properties of child elements of a FlexBox. FlexSettings open class FlexSettings : CssProperty Sets CSS properties related to a FlexBox container. Font class Font : CssProperty Grid class Grid : CssProperty Sets CSS properties related to a CSS grid. GridItem class GridItem : CssProperty Sets the css properties related to the CSS Grid. Number class Number : CssValue Represents a numerical CSS value. Overflow class Overflow : CssProperty Position enum class Position : CssValue , CssProperty Text class Text : CssProperty Transformation open class Transformation : CssProperty Visibility enum class Visibility : CssValue , CssProperty WhiteSpace enum class WhiteSpace : CssValue , CssProperty","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/#type-aliases","text":"CssDimen typealias CssDimen = Dimension CssUnit typealias CssUnit = Unit","title":"Type Aliases"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-dimen/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / CssDimen CssDimen typealias CssDimen = Dimension","title":" css dimen"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-dimen/#cssdimen","text":"typealias CssDimen = Dimension","title":"CssDimen"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-unit/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / CssUnit CssUnit typealias CssUnit = Unit","title":" css unit"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-unit/#cssunit","text":"typealias CssUnit = Unit","title":"CssUnit"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-property/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / CssProperty CssProperty interface CssProperty Defines an interface for classes that represent a css property. Functions applyToStyle abstract fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value Inheritors Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Display enum class Display : CssProperty , CssValue FlexItemSettings open class FlexItemSettings : CssProperty Sets CSS properties of child elements of a FlexBox. FlexSettings open class FlexSettings : CssProperty Sets CSS properties related to a FlexBox container. Font class Font : CssProperty Grid class Grid : CssProperty Sets CSS properties related to a CSS grid. GridItem class GridItem : CssProperty Sets the css properties related to the CSS Grid. Overflow class Overflow : CssProperty Position enum class Position : CssValue , CssProperty Text class Text : CssProperty Transformation open class Transformation : CssProperty Visibility enum class Visibility : CssValue , CssProperty WhiteSpace enum class WhiteSpace : CssValue , CssProperty","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-property/#cssproperty","text":"interface CssProperty Defines an interface for classes that represent a css property.","title":"CssProperty"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-property/#functions","text":"applyToStyle abstract fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-property/#inheritors","text":"Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Display enum class Display : CssProperty , CssValue FlexItemSettings open class FlexItemSettings : CssProperty Sets CSS properties of child elements of a FlexBox. FlexSettings open class FlexSettings : CssProperty Sets CSS properties related to a FlexBox container. Font class Font : CssProperty Grid class Grid : CssProperty Sets CSS properties related to a CSS grid. GridItem class GridItem : CssProperty Sets the css properties related to the CSS Grid. Overflow class Overflow : CssProperty Position enum class Position : CssValue , CssProperty Text class Text : CssProperty Transformation open class Transformation : CssProperty Visibility enum class Visibility : CssValue , CssProperty WhiteSpace enum class WhiteSpace : CssValue , CssProperty","title":"Inheritors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-property/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / CssProperty / applyToStyle applyToStyle abstract fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-property/apply-to-style/#applytostyle","text":"abstract fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-value/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / CssValue CssValue interface CssValue Represents a value of a CSS property. Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Inheritors Align enum class Align : CssValue AlignSelf enum class AlignSelf : CssValue Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Direction enum class Direction : CssValue Display enum class Display : CssProperty , CssValue Number class Number : CssValue Represents a numerical CSS value. Position enum class Position : CssValue , CssProperty Style enum class Style : CssValue Unit enum class Unit : CssValue Value enum class Value : CssValue Visibility enum class Visibility : CssValue , CssProperty Weight enum class Weight : CssValue WhiteSpace enum class WhiteSpace : CssValue , CssProperty","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-value/#cssvalue","text":"interface CssValue Represents a value of a CSS property.","title":"CssValue"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-value/#functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-value/#inheritors","text":"Align enum class Align : CssValue AlignSelf enum class AlignSelf : CssValue Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Direction enum class Direction : CssValue Display enum class Display : CssProperty , CssValue Number class Number : CssValue Represents a numerical CSS value. Position enum class Position : CssValue , CssProperty Style enum class Style : CssValue Unit enum class Unit : CssValue Value enum class Value : CssValue Visibility enum class Visibility : CssValue , CssProperty Weight enum class Weight : CssValue WhiteSpace enum class WhiteSpace : CssValue , CssProperty","title":"Inheritors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-value/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / CssValue / cssString cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-css-value/css-string/#cssstring","text":"open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension Dimension open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height. Types Unit enum class Unit : CssValue Constructors init Dimension(propertyName: String )``Dimension(value: Double ?, unit: Unit ?, propertyName: String ) Represents a CSS dimension property such as width and height. Properties isSet val isSet: Boolean propertyName val propertyName: String unit var unit: Unit ? value var value: Double ? Functions applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value cssString open fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. set fun set(pair: ERROR CLASS Double , Unit ): Unit Companion Object Properties AUTO val AUTO: ERROR CLASS MAX_CONTENT val MAX_CONTENT: ERROR CLASS MIN_CONTENT val MIN_CONTENT: ERROR CLASS ZERO val ZERO: ERROR CLASS","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/#dimension","text":"open class Dimension : CssValue , CssProperty Represents a CSS dimension property such as width and height.","title":"Dimension"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/#types","text":"Unit enum class Unit : CssValue","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/#constructors","text":"init Dimension(propertyName: String )``Dimension(value: Double ?, unit: Unit ?, propertyName: String ) Represents a CSS dimension property such as width and height.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/#properties","text":"isSet val isSet: Boolean propertyName val propertyName: String unit var unit: Unit ? value var value: Double ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/#functions","text":"applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value cssString open fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. set fun set(pair: ERROR CLASS Double , Unit ): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/#companion-object-properties","text":"AUTO val AUTO: ERROR CLASS MAX_CONTENT val MAX_CONTENT: ERROR CLASS MIN_CONTENT val MIN_CONTENT: ERROR CLASS ZERO val ZERO: ERROR CLASS","title":"Companion Object Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-a-u-t-o/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / AUTO AUTO val AUTO: ERROR CLASS","title":" a u t o"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-a-u-t-o/#auto","text":"val AUTO: ERROR CLASS","title":"AUTO"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / init init Dimension(propertyName: String )``Dimension(value: Double ?, unit: Unit ?, propertyName: String ) Represents a CSS dimension property such as width and height.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-init-/#init","text":"Dimension(propertyName: String )``Dimension(value: Double ?, unit: Unit ?, propertyName: String ) Represents a CSS dimension property such as width and height.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-m-a-x_-c-o-n-t-e-n-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / MAX_CONTENT MAX_CONTENT val MAX_CONTENT: ERROR CLASS","title":" m a x  c o n t e n t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-m-a-x_-c-o-n-t-e-n-t/#max_content","text":"val MAX_CONTENT: ERROR CLASS","title":"MAX_CONTENT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-m-i-n_-c-o-n-t-e-n-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / MIN_CONTENT MIN_CONTENT val MIN_CONTENT: ERROR CLASS","title":" m i n  c o n t e n t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-m-i-n_-c-o-n-t-e-n-t/#min_content","text":"val MIN_CONTENT: ERROR CLASS","title":"MIN_CONTENT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-z-e-r-o/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / ZERO ZERO val ZERO: ERROR CLASS","title":" z e r o"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-z-e-r-o/#zero","text":"val ZERO: ERROR CLASS","title":"ZERO"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / applyToStyle applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/apply-to-style/#applytostyle","text":"open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / cssString cssString open fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/css-string/#cssstring","text":"open fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/is-set/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / isSet isSet val isSet: Boolean","title":"Is set"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/is-set/#isset","text":"val isSet: Boolean","title":"isSet"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/property-name/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / propertyName propertyName val propertyName: String","title":"Property name"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/property-name/#propertyname","text":"val propertyName: String","title":"propertyName"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/set/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / set set fun set(pair: ERROR CLASS Double , Unit ): Unit","title":"Set"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/set/#set","text":"fun set(pair: ERROR CLASS Double , Unit ): Unit","title":"set"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/unit/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / unit unit var unit: Unit ?","title":"Unit"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/unit/#unit","text":"var unit: Unit ?","title":"unit"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/value/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / value value var value: Double ?","title":"Value"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/value/#value","text":"var value: Double ?","title":"value"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit Unit enum class Unit : CssValue Enum Values CM MM IN PX PT PC EM EX CH REM AUTO MIN_CONTENT MAX_CONTENT RELATIVE VIEWPORT_WIDTH VIEWPORT_HEIGHT VIEWPORT_MIN VIEWPORT_HEIGHT_MIN Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/#unit","text":"enum class Unit : CssValue","title":"Unit"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/#enum-values","text":"CM MM IN PX PT PC EM EX CH REM AUTO MIN_CONTENT MAX_CONTENT RELATIVE VIEWPORT_WIDTH VIEWPORT_HEIGHT VIEWPORT_MIN VIEWPORT_HEIGHT_MIN","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-a-u-t-o/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / AUTO AUTO AUTO","title":" a u t o"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-a-u-t-o/#auto","text":"AUTO","title":"AUTO"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-c-h/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / CH CH CH","title":" c h"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-c-h/#ch","text":"CH","title":"CH"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-c-m/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / CM CM CM","title":" c m"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-c-m/#cm","text":"CM","title":"CM"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-e-m/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / EM EM EM","title":" e m"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-e-m/#em","text":"EM","title":"EM"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-e-x/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / EX EX EX","title":" e x"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-e-x/#ex","text":"EX","title":"EX"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-i-n/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / IN IN IN","title":" i n"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-i-n/#in","text":"IN","title":"IN"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-m-a-x_-c-o-n-t-e-n-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / MAX_CONTENT MAX_CONTENT MAX_CONTENT","title":" m a x  c o n t e n t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-m-a-x_-c-o-n-t-e-n-t/#max_content","text":"MAX_CONTENT","title":"MAX_CONTENT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-m-i-n_-c-o-n-t-e-n-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / MIN_CONTENT MIN_CONTENT MIN_CONTENT","title":" m i n  c o n t e n t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-m-i-n_-c-o-n-t-e-n-t/#min_content","text":"MIN_CONTENT","title":"MIN_CONTENT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-m-m/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / MM MM MM","title":" m m"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-m-m/#mm","text":"MM","title":"MM"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-p-c/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / PC PC PC","title":" p c"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-p-c/#pc","text":"PC","title":"PC"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-p-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / PT PT PT","title":" p t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-p-t/#pt","text":"PT","title":"PT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-p-x/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / PX PX PX","title":" p x"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-p-x/#px","text":"PX","title":"PX"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-m/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / REM REM REM","title":" r e m"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-m/#rem","text":"REM","title":"REM"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-l-a-t-i-v-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / RELATIVE RELATIVE RELATIVE Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-l-a-t-i-v-e/#relative","text":"RELATIVE","title":"RELATIVE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-l-a-t-i-v-e/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-l-a-t-i-v-e/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / RELATIVE / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-r-e-l-a-t-i-v-e/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_HEIGHT VIEWPORT_HEIGHT VIEWPORT_HEIGHT Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t/#viewport_height","text":"VIEWPORT_HEIGHT","title":"VIEWPORT_HEIGHT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_HEIGHT / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t_-m-i-n/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_HEIGHT_MIN VIEWPORT_HEIGHT_MIN VIEWPORT_HEIGHT_MIN Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t_-m-i-n/#viewport_height_min","text":"VIEWPORT_HEIGHT_MIN","title":"VIEWPORT_HEIGHT_MIN"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t_-m-i-n/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t_-m-i-n/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_HEIGHT_MIN / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-h-e-i-g-h-t_-m-i-n/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-m-i-n/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_MIN VIEWPORT_MIN VIEWPORT_MIN Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-m-i-n/#viewport_min","text":"VIEWPORT_MIN","title":"VIEWPORT_MIN"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-m-i-n/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-m-i-n/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_MIN / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-m-i-n/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-w-i-d-t-h/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_WIDTH VIEWPORT_WIDTH VIEWPORT_WIDTH Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-w-i-d-t-h/#viewport_width","text":"VIEWPORT_WIDTH","title":"VIEWPORT_WIDTH"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-w-i-d-t-h/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-w-i-d-t-h/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Dimension / Unit / VIEWPORT_WIDTH / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-dimension/-unit/-v-i-e-w-p-o-r-t_-w-i-d-t-h/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display Display enum class Display : CssProperty , CssValue Enum Values None BLOCK INLINE INLINE_BLOCK FLEX GRID INLINE_GRID Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/#display","text":"enum class Display : CssProperty , CssValue","title":"Display"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/#enum-values","text":"None BLOCK INLINE INLINE_BLOCK FLEX GRID INLINE_GRID","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-b-l-o-c-k/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / BLOCK BLOCK BLOCK Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" b l o c k"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-b-l-o-c-k/#block","text":"BLOCK","title":"BLOCK"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-b-l-o-c-k/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-f-l-e-x/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / FLEX FLEX FLEX Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" f l e x"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-f-l-e-x/#flex","text":"FLEX","title":"FLEX"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-f-l-e-x/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-g-r-i-d/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / GRID GRID GRID Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" g r i d"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-g-r-i-d/#grid","text":"GRID","title":"GRID"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-g-r-i-d/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / INLINE INLINE INLINE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n l i n e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e/#inline","text":"INLINE","title":"INLINE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e_-b-l-o-c-k/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / INLINE_BLOCK INLINE_BLOCK INLINE_BLOCK Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n l i n e  b l o c k"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e_-b-l-o-c-k/#inline_block","text":"INLINE_BLOCK","title":"INLINE_BLOCK"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e_-b-l-o-c-k/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e_-g-r-i-d/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / INLINE_GRID INLINE_GRID INLINE_GRID Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n l i n e  g r i d"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e_-g-r-i-d/#inline_grid","text":"INLINE_GRID","title":"INLINE_GRID"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-i-n-l-i-n-e_-g-r-i-d/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-none/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / None None None Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" none"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-none/#none","text":"None","title":"None"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/-none/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Display / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-display/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings FlexItemSettings open class FlexItemSettings : CssProperty Sets CSS properties of child elements of a FlexBox. Types AlignSelf enum class AlignSelf : CssValue Constructors init FlexItemSettings() Sets CSS properties of child elements of a FlexBox. Properties alignSelf open var alignSelf: AlignSelf ? flexBasis open var flexBasis: Number ? grow open var grow: Number ? shrink open var shrink: Number ? Functions applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/#flexitemsettings","text":"open class FlexItemSettings : CssProperty Sets CSS properties of child elements of a FlexBox.","title":"FlexItemSettings"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/#types","text":"AlignSelf enum class AlignSelf : CssValue","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/#constructors","text":"init FlexItemSettings() Sets CSS properties of child elements of a FlexBox.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/#properties","text":"alignSelf open var alignSelf: AlignSelf ? flexBasis open var flexBasis: Number ? grow open var grow: Number ? shrink open var shrink: Number ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/#functions","text":"applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / init init FlexItemSettings() Sets CSS properties of child elements of a FlexBox.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-init-/#init","text":"FlexItemSettings() Sets CSS properties of child elements of a FlexBox.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/align-self/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / alignSelf alignSelf open var alignSelf: AlignSelf ?","title":"Align self"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/align-self/#alignself","text":"open var alignSelf: AlignSelf ?","title":"alignSelf"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / applyToStyle applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/apply-to-style/#applytostyle","text":"open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/flex-basis/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / flexBasis flexBasis open var flexBasis: Number ?","title":"Flex basis"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/flex-basis/#flexbasis","text":"open var flexBasis: Number ?","title":"flexBasis"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/grow/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / grow grow open var grow: Number ?","title":"Grow"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/grow/#grow","text":"open var grow: Number ?","title":"grow"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/shrink/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / shrink shrink open var shrink: Number ?","title":"Shrink"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/shrink/#shrink","text":"open var shrink: Number ?","title":"shrink"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / AlignSelf AlignSelf enum class AlignSelf : CssValue Enum Values CENTER FLEX_START FLEX_END BASELINE STRETCH Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/#alignself","text":"enum class AlignSelf : CssValue","title":"AlignSelf"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/#enum-values","text":"CENTER FLEX_START FLEX_END BASELINE STRETCH","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-b-a-s-e-l-i-n-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / AlignSelf / BASELINE BASELINE BASELINE","title":" b a s e l i n e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-b-a-s-e-l-i-n-e/#baseline","text":"BASELINE","title":"BASELINE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-c-e-n-t-e-r/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / AlignSelf / CENTER CENTER CENTER","title":" c e n t e r"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-c-e-n-t-e-r/#center","text":"CENTER","title":"CENTER"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-f-l-e-x_-e-n-d/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / AlignSelf / FLEX_END FLEX_END FLEX_END","title":" f l e x  e n d"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-f-l-e-x_-e-n-d/#flex_end","text":"FLEX_END","title":"FLEX_END"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-f-l-e-x_-s-t-a-r-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / AlignSelf / FLEX_START FLEX_START FLEX_START","title":" f l e x  s t a r t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-f-l-e-x_-s-t-a-r-t/#flex_start","text":"FLEX_START","title":"FLEX_START"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-s-t-r-e-t-c-h/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexItemSettings / AlignSelf / STRETCH STRETCH STRETCH","title":" s t r e t c h"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-item-settings/-align-self/-s-t-r-e-t-c-h/#stretch","text":"STRETCH","title":"STRETCH"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings FlexSettings open class FlexSettings : CssProperty Sets CSS properties related to a FlexBox container. Types Direction enum class Direction : CssValue Constructors init FlexSettings() Sets CSS properties related to a FlexBox container. Properties direction open var direction: Direction ? Functions applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/#flexsettings","text":"open class FlexSettings : CssProperty Sets CSS properties related to a FlexBox container.","title":"FlexSettings"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/#types","text":"Direction enum class Direction : CssValue","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/#constructors","text":"init FlexSettings() Sets CSS properties related to a FlexBox container.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/#properties","text":"direction open var direction: Direction ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/#functions","text":"applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / init init FlexSettings() Sets CSS properties related to a FlexBox container.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-init-/#init","text":"FlexSettings() Sets CSS properties related to a FlexBox container.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / applyToStyle applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/apply-to-style/#applytostyle","text":"open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/direction/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / direction direction open var direction: Direction ?","title":"Direction"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/direction/#direction","text":"open var direction: Direction ?","title":"direction"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / Direction Direction enum class Direction : CssValue Enum Values HORIZONTAL VERTICAL Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/#direction","text":"enum class Direction : CssValue","title":"Direction"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/#enum-values","text":"HORIZONTAL VERTICAL","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-h-o-r-i-z-o-n-t-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / Direction / HORIZONTAL HORIZONTAL HORIZONTAL Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-h-o-r-i-z-o-n-t-a-l/#horizontal","text":"HORIZONTAL","title":"HORIZONTAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-h-o-r-i-z-o-n-t-a-l/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-h-o-r-i-z-o-n-t-a-l/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / Direction / HORIZONTAL / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-h-o-r-i-z-o-n-t-a-l/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-v-e-r-t-i-c-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / Direction / VERTICAL VERTICAL VERTICAL Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-v-e-r-t-i-c-a-l/#vertical","text":"VERTICAL","title":"VERTICAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-v-e-r-t-i-c-a-l/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-v-e-r-t-i-c-a-l/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / FlexSettings / Direction / VERTICAL / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-flex-settings/-direction/-v-e-r-t-i-c-a-l/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font Font class Font : CssProperty Types Style enum class Style : CssValue Weight enum class Weight : CssValue Constructors init Font() Properties family var family: List String ? size var size: Dimension style var style: Style ? weight var weight: Weight ? Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/#font","text":"class Font : CssProperty","title":"Font"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/#types","text":"Style enum class Style : CssValue Weight enum class Weight : CssValue","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/#constructors","text":"init Font()","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/#properties","text":"family var family: List String ? size var size: Dimension style var style: Style ? weight var weight: Weight ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / init init Font()","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-init-/#init","text":"Font()","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/family/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / family family var family: List String ?","title":"Family"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/family/#family","text":"var family: List String ?","title":"family"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/size/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / size size var size: Dimension","title":"Size"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/size/#size","text":"var size: Dimension","title":"size"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / style style var style: Style ?","title":"Style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/style/#style","text":"var style: Style ?","title":"style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/weight/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / weight weight var weight: Weight ?","title":"Weight"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/weight/#weight","text":"var weight: Weight ?","title":"weight"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Style Style enum class Style : CssValue Enum Values NORMAL ITALIC OBLIQUE INITIAL INHERIT Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/#style","text":"enum class Style : CssValue","title":"Style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/#enum-values","text":"NORMAL ITALIC OBLIQUE INITIAL INHERIT","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-i-n-h-e-r-i-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Style / INHERIT INHERIT INHERIT","title":" i n h e r i t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-i-n-h-e-r-i-t/#inherit","text":"INHERIT","title":"INHERIT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-i-n-i-t-i-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Style / INITIAL INITIAL INITIAL","title":" i n i t i a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-i-n-i-t-i-a-l/#initial","text":"INITIAL","title":"INITIAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-i-t-a-l-i-c/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Style / ITALIC ITALIC ITALIC","title":" i t a l i c"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-i-t-a-l-i-c/#italic","text":"ITALIC","title":"ITALIC"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-n-o-r-m-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Style / NORMAL NORMAL NORMAL","title":" n o r m a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-n-o-r-m-a-l/#normal","text":"NORMAL","title":"NORMAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-o-b-l-i-q-u-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Style / OBLIQUE OBLIQUE OBLIQUE","title":" o b l i q u e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-style/-o-b-l-i-q-u-e/#oblique","text":"OBLIQUE","title":"OBLIQUE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight Weight enum class Weight : CssValue Enum Values NORMAL BOLD BOLDER LIGHTER INITIAL INHERIT Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/#weight","text":"enum class Weight : CssValue","title":"Weight"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/#enum-values","text":"NORMAL BOLD BOLDER LIGHTER INITIAL INHERIT","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-b-o-l-d-e-r/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight / BOLDER BOLDER BOLDER","title":" b o l d e r"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-b-o-l-d-e-r/#bolder","text":"BOLDER","title":"BOLDER"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-b-o-l-d/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight / BOLD BOLD BOLD","title":" b o l d"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-b-o-l-d/#bold","text":"BOLD","title":"BOLD"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-i-n-h-e-r-i-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight / INHERIT INHERIT INHERIT","title":" i n h e r i t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-i-n-h-e-r-i-t/#inherit","text":"INHERIT","title":"INHERIT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-i-n-i-t-i-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight / INITIAL INITIAL INITIAL","title":" i n i t i a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-i-n-i-t-i-a-l/#initial","text":"INITIAL","title":"INITIAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-l-i-g-h-t-e-r/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight / LIGHTER LIGHTER LIGHTER","title":" l i g h t e r"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-l-i-g-h-t-e-r/#lighter","text":"LIGHTER","title":"LIGHTER"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-n-o-r-m-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Font / Weight / NORMAL NORMAL NORMAL","title":" n o r m a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-font/-weight/-n-o-r-m-a-l/#normal","text":"NORMAL","title":"NORMAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid Grid class Grid : CssProperty Sets CSS properties related to a CSS grid. Constructors init Grid() Sets CSS properties related to a CSS grid. Properties columnCount var columnCount: Int ? columnGap var columnGap: CssDimen rowCount var rowCount: Int ? rowGap var rowGap: CssDimen Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/#grid","text":"class Grid : CssProperty Sets CSS properties related to a CSS grid.","title":"Grid"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/#constructors","text":"init Grid() Sets CSS properties related to a CSS grid.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/#properties","text":"columnCount var columnCount: Int ? columnGap var columnGap: CssDimen rowCount var rowCount: Int ? rowGap var rowGap: CssDimen","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid / init init Grid() Sets CSS properties related to a CSS grid.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/-init-/#init","text":"Grid() Sets CSS properties related to a CSS grid.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/column-count/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid / columnCount columnCount var columnCount: Int ?","title":"Column count"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/column-count/#columncount","text":"var columnCount: Int ?","title":"columnCount"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/column-gap/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid / columnGap columnGap var columnGap: CssDimen","title":"Column gap"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/column-gap/#columngap","text":"var columnGap: CssDimen","title":"columnGap"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/row-count/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid / rowCount rowCount var rowCount: Int ?","title":"Row count"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/row-count/#rowcount","text":"var rowCount: Int ?","title":"rowCount"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/row-gap/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Grid / rowGap rowGap var rowGap: CssDimen","title":"Row gap"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid/row-gap/#rowgap","text":"var rowGap: CssDimen","title":"rowGap"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem GridItem class GridItem : CssProperty Sets the css properties related to the CSS Grid. Constructors init GridItem() Sets the css properties related to the CSS Grid. Properties column var column: Int ? columnSpan var columnSpan: Int ? row var row: Int ? rowSpan var rowSpan: Int ? Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/#griditem","text":"class GridItem : CssProperty Sets the css properties related to the CSS Grid.","title":"GridItem"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/#constructors","text":"init GridItem() Sets the css properties related to the CSS Grid.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/#properties","text":"column var column: Int ? columnSpan var columnSpan: Int ? row var row: Int ? rowSpan var rowSpan: Int ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem / init init GridItem() Sets the css properties related to the CSS Grid.","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/-init-/#init","text":"GridItem() Sets the css properties related to the CSS Grid.","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/column-span/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem / columnSpan columnSpan var columnSpan: Int ?","title":"Column span"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/column-span/#columnspan","text":"var columnSpan: Int ?","title":"columnSpan"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/column/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem / column column var column: Int ?","title":"Column"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/column/#column","text":"var column: Int ?","title":"column"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/row-span/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem / rowSpan rowSpan var rowSpan: Int ?","title":"Row span"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/row-span/#rowspan","text":"var rowSpan: Int ?","title":"rowSpan"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/row/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / GridItem / row row var row: Int ?","title":"Row"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-grid-item/row/#row","text":"var row: Int ?","title":"row"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number Number class Number : CssValue Represents a numerical CSS value. This class also supports the css values: auto, initial, inherit Constructors init Number(value: Int )``Number(number: Double ) Represents a numerical CSS value. Properties number val number: Double Functions cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Companion Object Properties AUTO val AUTO: Number INHERIT val INHERIT: Number INITIAL val INITIAL: Number","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/#number","text":"class Number : CssValue Represents a numerical CSS value. This class also supports the css values: auto, initial, inherit","title":"Number"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/#constructors","text":"init Number(value: Int )``Number(number: Double ) Represents a numerical CSS value.","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/#properties","text":"number val number: Double","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/#functions","text":"cssString fun cssString(): String This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/#companion-object-properties","text":"AUTO val AUTO: Number INHERIT val INHERIT: Number INITIAL val INITIAL: Number","title":"Companion Object Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-a-u-t-o/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number / AUTO AUTO val AUTO: Number","title":" a u t o"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-a-u-t-o/#auto","text":"val AUTO: Number","title":"AUTO"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-i-n-h-e-r-i-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number / INHERIT INHERIT val INHERIT: Number","title":" i n h e r i t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-i-n-h-e-r-i-t/#inherit","text":"val INHERIT: Number","title":"INHERIT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-i-n-i-t-i-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number / INITIAL INITIAL val INITIAL: Number","title":" i n i t i a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-i-n-i-t-i-a-l/#initial","text":"val INITIAL: Number","title":"INITIAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number / init init Number(value: Int )``Number(number: Double ) Represents a numerical CSS value. This class also supports the css values: auto, initial, inherit","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/-init-/#init","text":"Number(value: Int )``Number(number: Double ) Represents a numerical CSS value. This class also supports the css values: auto, initial, inherit","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/css-string/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number / cssString cssString fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"Css string"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/css-string/#cssstring","text":"fun cssString(): String Overrides CssValue.cssString This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary. Return A string representing the CSS value.","title":"cssString"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/number/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Number / number number val number: Double","title":"Number"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-number/number/#number","text":"val number: Double","title":"number"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow Overflow class Overflow : CssProperty Types OverflowAxis enum class OverflowAxis Value enum class Value : CssValue Constructors init Overflow(axis: OverflowAxis ) Overflow(axis: OverflowAxis , value: Value ?) Properties axis var axis: OverflowAxis value var value: Value ? Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/#overflow","text":"class Overflow : CssProperty","title":"Overflow"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/#types","text":"OverflowAxis enum class OverflowAxis Value enum class Value : CssValue","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/#constructors","text":"init Overflow(axis: OverflowAxis ) Overflow(axis: OverflowAxis , value: Value ?)","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/#properties","text":"axis var axis: OverflowAxis value var value: Value ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / init init Overflow(axis: OverflowAxis ) Overflow(axis: OverflowAxis , value: Value ?)","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-init-/#init","text":"Overflow(axis: OverflowAxis ) Overflow(axis: OverflowAxis , value: Value ?)","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/axis/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / axis axis var axis: OverflowAxis","title":"Axis"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/axis/#axis","text":"var axis: OverflowAxis","title":"axis"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/value/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / value value var value: Value ?","title":"Value"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/value/#value","text":"var value: Value ?","title":"value"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / OverflowAxis OverflowAxis enum class OverflowAxis Enum Values X Y","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/#overflowaxis","text":"enum class OverflowAxis","title":"OverflowAxis"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/#enum-values","text":"X Y","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/-x/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / OverflowAxis / X X X","title":" x"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/-x/#x","text":"X","title":"X"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/-y/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / OverflowAxis / Y Y Y","title":" y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-overflow-axis/-y/#y","text":"Y","title":"Y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value Value enum class Value : CssValue Enum Values SCROLL AUTO HIDDEN VISIBLE INITIAL INHERIT Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/#value","text":"enum class Value : CssValue","title":"Value"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/#enum-values","text":"SCROLL AUTO HIDDEN VISIBLE INITIAL INHERIT","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-a-u-t-o/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value / AUTO AUTO AUTO","title":" a u t o"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-a-u-t-o/#auto","text":"AUTO","title":"AUTO"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-h-i-d-d-e-n/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value / HIDDEN HIDDEN HIDDEN","title":" h i d d e n"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-h-i-d-d-e-n/#hidden","text":"HIDDEN","title":"HIDDEN"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-i-n-h-e-r-i-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value / INHERIT INHERIT INHERIT","title":" i n h e r i t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-i-n-h-e-r-i-t/#inherit","text":"INHERIT","title":"INHERIT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-i-n-i-t-i-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value / INITIAL INITIAL INITIAL","title":" i n i t i a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-i-n-i-t-i-a-l/#initial","text":"INITIAL","title":"INITIAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-s-c-r-o-l-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value / SCROLL SCROLL SCROLL","title":" s c r o l l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-s-c-r-o-l-l/#scroll","text":"SCROLL","title":"SCROLL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-v-i-s-i-b-l-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Overflow / Value / VISIBLE VISIBLE VISIBLE","title":" v i s i b l e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-overflow/-value/-v-i-s-i-b-l-e/#visible","text":"VISIBLE","title":"VISIBLE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position Position enum class Position : CssValue , CssProperty Enum Values STATIC RELATIVE FIXED ABSOLUTE STICKY Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/#position","text":"enum class Position : CssValue , CssProperty","title":"Position"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/#enum-values","text":"STATIC RELATIVE FIXED ABSOLUTE STICKY","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-a-b-s-o-l-u-t-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position / ABSOLUTE ABSOLUTE ABSOLUTE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" a b s o l u t e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-a-b-s-o-l-u-t-e/#absolute","text":"ABSOLUTE","title":"ABSOLUTE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-a-b-s-o-l-u-t-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-f-i-x-e-d/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position / FIXED FIXED FIXED Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" f i x e d"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-f-i-x-e-d/#fixed","text":"FIXED","title":"FIXED"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-f-i-x-e-d/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-r-e-l-a-t-i-v-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position / RELATIVE RELATIVE RELATIVE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" r e l a t i v e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-r-e-l-a-t-i-v-e/#relative","text":"RELATIVE","title":"RELATIVE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-r-e-l-a-t-i-v-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-s-t-a-t-i-c/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position / STATIC STATIC STATIC Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" s t a t i c"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-s-t-a-t-i-c/#static","text":"STATIC","title":"STATIC"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-s-t-a-t-i-c/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-s-t-i-c-k-y/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position / STICKY STICKY STICKY Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" s t i c k y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-s-t-i-c-k-y/#sticky","text":"STICKY","title":"STICKY"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/-s-t-i-c-k-y/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Position / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-position/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text Text class Text : CssProperty Types Align enum class Align : CssValue Constructors init Text() Properties align var align: Align ? color var color: String ? Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/#text","text":"class Text : CssProperty","title":"Text"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/#types","text":"Align enum class Align : CssValue","title":"Types"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/#constructors","text":"init Text()","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/#properties","text":"align var align: Align ? color var color: String ?","title":"Properties"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / init init Text()","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-init-/#init","text":"Text()","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/align/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / align align var align: Align ?","title":"Align"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/align/#align","text":"var align: Align ?","title":"align"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/color/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / color color var color: String ?","title":"Color"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/color/#color","text":"var color: String ?","title":"color"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / Align Align enum class Align : CssValue Enum Values LEFT RIGHT CENTER JUSTIFY Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/#align","text":"enum class Align : CssValue","title":"Align"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/#enum-values","text":"LEFT RIGHT CENTER JUSTIFY","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-c-e-n-t-e-r/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / Align / CENTER CENTER CENTER","title":" c e n t e r"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-c-e-n-t-e-r/#center","text":"CENTER","title":"CENTER"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-j-u-s-t-i-f-y/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / Align / JUSTIFY JUSTIFY JUSTIFY","title":" j u s t i f y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-j-u-s-t-i-f-y/#justify","text":"JUSTIFY","title":"JUSTIFY"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-l-e-f-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / Align / LEFT LEFT LEFT","title":" l e f t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-l-e-f-t/#left","text":"LEFT","title":"LEFT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-r-i-g-h-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Text / Align / RIGHT RIGHT RIGHT","title":" r i g h t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-text/-align/-r-i-g-h-t/#right","text":"RIGHT","title":"RIGHT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation Transformation open class Transformation : CssProperty Constructors init Transformation() Functions applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value toCss open fun toCss(): String ? translate fun translate(x: Dimension , y: Dimension ): Unit translateX fun translateX(pair: ERROR CLASS Double , Unit ): Unit translateY fun translateY(pair: ERROR CLASS Double , Unit ): Unit","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/#transformation","text":"open class Transformation : CssProperty","title":"Transformation"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/#constructors","text":"init Transformation()","title":"Constructors"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/#functions","text":"applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value toCss open fun toCss(): String ? translate fun translate(x: Dimension , y: Dimension ): Unit translateX fun translateX(pair: ERROR CLASS Double , Unit ): Unit translateY fun translateY(pair: ERROR CLASS Double , Unit ): Unit","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/-init-/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation / init init Transformation()","title":" init "},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/-init-/#init","text":"Transformation()","title":"&lt;init&gt;"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation / applyToStyle applyToStyle open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/apply-to-style/#applytostyle","text":"open fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/to-css/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation / toCss toCss open fun toCss(): String ?","title":"To css"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/to-css/#tocss","text":"open fun toCss(): String ?","title":"toCss"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/translate-x/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation / translateX translateX fun translateX(pair: ERROR CLASS Double , Unit ): Unit","title":"Translate x"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/translate-x/#translatex","text":"fun translateX(pair: ERROR CLASS Double , Unit ): Unit","title":"translateX"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/translate-y/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation / translateY translateY fun translateY(pair: ERROR CLASS Double , Unit ): Unit","title":"Translate y"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/translate-y/#translatey","text":"fun translateY(pair: ERROR CLASS Double , Unit ): Unit","title":"translateY"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/translate/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Transformation / translate translate fun translate(x: Dimension , y: Dimension ): Unit","title":"Translate"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-transformation/translate/#translate","text":"fun translate(x: Dimension , y: Dimension ): Unit","title":"translate"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility Visibility enum class Visibility : CssValue , CssProperty Enum Values VISIBLE HIDDEN COLLAPSE INITIAL INHERIT Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/#visibility","text":"enum class Visibility : CssValue , CssProperty","title":"Visibility"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/#enum-values","text":"VISIBLE HIDDEN COLLAPSE INITIAL INHERIT","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-c-o-l-l-a-p-s-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility / COLLAPSE COLLAPSE COLLAPSE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" c o l l a p s e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-c-o-l-l-a-p-s-e/#collapse","text":"COLLAPSE","title":"COLLAPSE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-c-o-l-l-a-p-s-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-h-i-d-d-e-n/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility / HIDDEN HIDDEN HIDDEN Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" h i d d e n"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-h-i-d-d-e-n/#hidden","text":"HIDDEN","title":"HIDDEN"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-h-i-d-d-e-n/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-i-n-h-e-r-i-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility / INHERIT INHERIT INHERIT Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n h e r i t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-i-n-h-e-r-i-t/#inherit","text":"INHERIT","title":"INHERIT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-i-n-h-e-r-i-t/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-i-n-i-t-i-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility / INITIAL INITIAL INITIAL Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n i t i a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-i-n-i-t-i-a-l/#initial","text":"INITIAL","title":"INITIAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-i-n-i-t-i-a-l/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-v-i-s-i-b-l-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility / VISIBLE VISIBLE VISIBLE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" v i s i b l e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-v-i-s-i-b-l-e/#visible","text":"VISIBLE","title":"VISIBLE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/-v-i-s-i-b-l-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / Visibility / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-visibility/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace WhiteSpace enum class WhiteSpace : CssValue , CssProperty Enum Values NORMAL NOWRAP PRE PRE_LINE PRE_WRAP INITIAL INHERIT Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value Inherited Functions cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/#whitespace","text":"enum class WhiteSpace : CssValue , CssProperty","title":"WhiteSpace"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/#enum-values","text":"NORMAL NOWRAP PRE PRE_LINE PRE_WRAP INITIAL INHERIT","title":"Enum Values"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/#functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/#inherited-functions","text":"cssString open fun cssString(): ERROR CLASS This method is generally used in enums representing Css values. It facilitates the conversion from enum value to css string value. For more specific cases, overriding this method is necessary.","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-i-n-h-e-r-i-t/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / INHERIT INHERIT INHERIT Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n h e r i t"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-i-n-h-e-r-i-t/#inherit","text":"INHERIT","title":"INHERIT"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-i-n-h-e-r-i-t/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-i-n-i-t-i-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / INITIAL INITIAL INITIAL Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" i n i t i a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-i-n-i-t-i-a-l/#initial","text":"INITIAL","title":"INITIAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-i-n-i-t-i-a-l/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-n-o-r-m-a-l/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / NORMAL NORMAL NORMAL Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" n o r m a l"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-n-o-r-m-a-l/#normal","text":"NORMAL","title":"NORMAL"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-n-o-r-m-a-l/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-n-o-w-r-a-p/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / NOWRAP NOWRAP NOWRAP Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" n o w r a p"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-n-o-w-r-a-p/#nowrap","text":"NOWRAP","title":"NOWRAP"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-n-o-w-r-a-p/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / PRE PRE PRE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" p r e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e/#pre","text":"PRE","title":"PRE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e_-l-i-n-e/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / PRE_LINE PRE_LINE PRE_LINE Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" p r e  l i n e"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e_-l-i-n-e/#pre_line","text":"PRE_LINE","title":"PRE_LINE"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e_-l-i-n-e/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e_-w-r-a-p/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / PRE_WRAP PRE_WRAP PRE_WRAP Inherited Functions applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":" p r e  w r a p"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e_-w-r-a-p/#pre_wrap","text":"PRE_WRAP","title":"PRE_WRAP"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/-p-r-e_-w-r-a-p/#inherited-functions","text":"applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Sets the element's corresponding css property value","title":"Inherited Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/apply-to-style/","text":"MaterialDesignJsVeiwRenderer / view.utils.elementCss.properties / WhiteSpace / applyToStyle applyToStyle fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"Apply to style"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.element-css.properties/-white-space/apply-to-style/#applytostyle","text":"fun applyToStyle(element: ERROR CLASS ): Unit Overrides CssProperty.applyToStyle Sets the element's corresponding css property value","title":"applyToStyle"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/","text":"MaterialDesignJsVeiwRenderer / view.utils.extensions Package view.utils.extensions Functions addClasses fun E E .addClasses(classes: Set String ): Unit Adds a set of classes to an HTMLElement. applyCss fun E E .applyCss(init: ElementCss .() - Unit ): Unit Applies css on the element. children fun E E .children(): List ERROR CLASS Returns a list of child nodes of an HTMLElement filterChildrenBy fun E E .filterChildrenBy(condition: ( ERROR CLASS ) - Boolean ): List ERROR CLASS Returns the DOM elements, corresponding to views, that meet a certain condition. viewChildren fun E E .viewChildren(): List ERROR CLASS Returns all child DOM elements that correspond to a view.","title":"Index"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/#package-viewutilsextensions","text":"","title":"Package view.utils.extensions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/#functions","text":"addClasses fun E E .addClasses(classes: Set String ): Unit Adds a set of classes to an HTMLElement. applyCss fun E E .applyCss(init: ElementCss .() - Unit ): Unit Applies css on the element. children fun E E .children(): List ERROR CLASS Returns a list of child nodes of an HTMLElement filterChildrenBy fun E E .filterChildrenBy(condition: ( ERROR CLASS ) - Boolean ): List ERROR CLASS Returns the DOM elements, corresponding to views, that meet a certain condition. viewChildren fun E E .viewChildren(): List ERROR CLASS Returns all child DOM elements that correspond to a view.","title":"Functions"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/add-classes/","text":"MaterialDesignJsVeiwRenderer / view.utils.extensions / addClasses addClasses fun E E .addClasses(classes: Set String ): Unit Adds a set of classes to an HTMLElement. Parameters The - classes to add to the element","title":"Add classes"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/add-classes/#addclasses","text":"fun E E .addClasses(classes: Set String ): Unit Adds a set of classes to an HTMLElement.","title":"addClasses"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/add-classes/#parameters","text":"The - classes to add to the element","title":"Parameters"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/apply-css/","text":"MaterialDesignJsVeiwRenderer / view.utils.extensions / applyCss applyCss fun E E .applyCss(init: ElementCss .() - Unit ): Unit Applies css on the element. See Also ElementCss","title":"Apply css"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/apply-css/#applycss","text":"fun E E .applyCss(init: ElementCss .() - Unit ): Unit Applies css on the element. See Also ElementCss","title":"applyCss"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/children/","text":"MaterialDesignJsVeiwRenderer / view.utils.extensions / children children fun E E .children(): List ERROR CLASS Returns a list of child nodes of an HTMLElement","title":"Children"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/children/#children","text":"fun E E .children(): List ERROR CLASS Returns a list of child nodes of an HTMLElement","title":"children"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/filter-children-by/","text":"MaterialDesignJsVeiwRenderer / view.utils.extensions / filterChildrenBy filterChildrenBy fun E E .filterChildrenBy(condition: ( ERROR CLASS ) - Boolean ): List ERROR CLASS Returns the DOM elements, corresponding to views, that meet a certain condition.","title":"Filter children by"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/filter-children-by/#filterchildrenby","text":"fun E E .filterChildrenBy(condition: ( ERROR CLASS ) - Boolean ): List ERROR CLASS Returns the DOM elements, corresponding to views, that meet a certain condition.","title":"filterChildrenBy"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/view-children/","text":"MaterialDesignJsVeiwRenderer / view.utils.extensions / viewChildren viewChildren fun E E .viewChildren(): List ERROR CLASS Returns all child DOM elements that correspond to a view.","title":"View children"},{"location":"Documentation/MaterialDesignJsViewRenderer/view.utils.extensions/view-children/#viewchildren","text":"fun E E .viewChildren(): List ERROR CLASS Returns all child DOM elements that correspond to a view.","title":"viewChildren"},{"location":"Documentation/View/","text":"","title":"Index"},{"location":"Documentation/View/alltypes/","text":"All Types view.utils.mapBased.keys.delegates.AbstractRWKey A delegate for mutable properties that are based on maps. view.core.loaders.builders.AbstractViewBuilder Base class for all view builders. view.core.views.propertyDelegates.AbstractViewProperty This is the base class for view mutable property delegates. view.core.views.animations.Animation This class is a base class for all animations. view.core.views.animations.AnimationSet Represents a group of animations to played. view.core.views.input.binaryStateInput.BinaryStateInput This is the base class for views that represent input UI components with an on/off state. view.utils.mapBased.keys.delegates.nullable.BoolRWKey view.core.views.input.Button Represents a button. view.core.loaders.builders.input.ButtonBuilder view.utils.namingConventions.CaseFormatConverter Converts strings between different case formats. view.utils.mapBased.keys.delegates.readOnly.casts.CastingKey Has the same behaviour as delegation by a map. view.core.views.input.binaryStateInput.CheckBox Represents a Check Box. view.core.loaders.builders.input.binaryStateInput.CheckBoxBuilder view.utils.mapBased.keys.delegates.nullable.ColorRWKey A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. view.utils.validators.conditions.Condition Represents a condition that the a value should meet to be valid. view.utils.validators.conditions.DC view.di.DelegateProvider view.core.loaders.viewTree.nodes.deserializedNode.DeserializedLayoutNode Holds the parsed key-value pairs of a layout view serialization. view.core.loaders.viewTree.nodes.deserializedNode.DeserializedNode Is a collection of parsed key-value pairs. view.core.views.Dimension The Dimension object contains utility methods for classifying values that represent dimensions such as a view's width, height and margins. view.utils.validators.conditions.DoubleConditions view.utils.mapBased.keys.delegates.nullable.DoubleRWKey view.core.loaders.builders.dsl.DslViewTreeLoader view.core.views.input.textInput.EditText Represents an editable text field. view.core.loaders.builders.input.textInput.EditTextBuilder view.utils.mapBased.keys.delegates.nullable.EnumRWKey view.core.views.layouts.GridLayout A layout where child views are positioned in a rectangular grid. view.core.loaders.builders.layouts.GridLayoutBuilder view.core.loaders.builders.dsl.layouts.GridLayoutChildren view.utils.mapBased.keys.HasKeys A base class for classes whose properties are based on a map. view.utils.validators.conditions.IC view.core.loaders.Ids This class keeps track of used view Ids. view.core.loaders.viewTree.IllegalViewTreeException This exception is thrown when an invalid view tree is encountered. view.core.views.display.ImageView This view displays an image on the UI. view.core.loaders.builders.display.ImageViewBuilder view.utils.mapBased.keys.delegates.nullable.IntRWKey view.utils.validators.conditions.IntegerConditions view.utils.serialization.Json view.core.loaders.viewTree.nodes.jsonNode.JsonLayoutNode A node that parses key-value pairs from a Json layout view serialization. view.core.loaders.viewTree.nodes.jsonNode.JsonNode A node that parses key-value pairs from a Json view serialization. view.core.loaders.viewTree.treeLoaders.JsonTreeLoader A tree loader that loads view trees from JSON. view.di.KodeinContainer Contains the bindings for DI. view.utils.validators.conditions.LC view.core.views.propertyDelegates.LateInitVal Allows an immutable property to be initialized later in the class' lifetime. view.core.views.layouts.Layout This is the base class for layout views, which are views that contain other views. view.core.loaders.builders.layouts.LayoutBuilder Base builder for layout builders. view.core.loaders.builders.dsl.layouts.LayoutChildren view.core.loaders.viewTree.nodes.LayoutNode Represents the serialized layout view. view.core.views.layouts.LinearLayout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. view.core.loaders.builders.layouts.LinearLayoutBuilder view.utils.validators.conditions.LongConditions view.utils.mapBased.keys.MapInterface Acts as layer between the property delegate and the map. view.core.loaders.viewTree.nodes.Node Represents the base class for all Node objects. view.utils.mapBased.keys.delegates.nullable.NullableRWKey A delegate for mutable nullable properties that are based on maps. view.core.views.propertyDelegates.NullableViewProperty Represents a nullable and mutable view property. view.utils.observables.ObservableCollection A collection that notifies its subscribes whenever its contents are changed. view.core.views.PreProcessor A preprocessor is a function that edits specific views before rendering. view.core.loaders.builders.layouts.RP view.core.views.input.binaryStateInput.RadioButton Represents a Radio Button. view.core.loaders.builders.input.binaryStateInput.RadioButtonBuilder view.core.views.layouts.RelativeLayout A layout where child views are positioned relative to each other and to the layout itself. view.core.loaders.builders.layouts.RelativeLayoutBuilder view.core.loaders.builders.dsl.layouts.RelativeLayoutChildren view.utils.mapBased.keys.delegates.required.RequiredBoolRWKey view.utils.mapBased.keys.delegates.required.RequiredDoubleRWKey view.utils.mapBased.keys.delegates.required.RequiredEnumRWKey view.utils.mapBased.keys.delegates.required.RequiredIntRWKey view.utils.mapBased.keys.delegates.required.RequiredRWKey A delegate for mutable non-nullable properties that are based on maps. view.utils.mapBased.keys.delegates.required.RequiredStringRWKey view.utils.validators.conditions.SC view.core.loaders.viewTree.treeLoaders.SerializedViewTreeLoader Base class for tree loaders that load view trees from serialized formats. view.core.views.animations.SingleAnimation A single animation. kotlin.String (extensions in package view.utils.extensions) kotlin.String (extensions in package view.utils.extensions) view.utils.validators.conditions.StringConditions view.utils.mapBased.keys.delegates.nullable.StringRWKey view.core.views.input.binaryStateInput.Switch Represents a switch. view.core.loaders.builders.input.binaryStateInput.SwitchBuilder view.core.views.display.TextView Represents a block of text on the UI. view.core.loaders.builders.display.TextViewBuilder view.core.views.Theme A theme specifies the appearance of View s. view.core.views.animations.Timer Defines an interface for classes that execute a function every interval of time. view.utils.validators.ValidationException An exception that is thrown whenever a value doesn't pass a validation. view.utils.validators.Validator A utility class for validation. view.core.views.View This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. view.core.loaders.builders.ViewBuilder Defines an interface for view builders. view.core.loaders.builders.ViewKeys Base class for classes containing view key-value pairs. view.core.views.propertyDelegates.ViewProperty Represents a non-nullable and mutable view property. view.core.loaders.viewTree.treeLoaders.ViewTreeLoader Defines an interface for view tree loaders view.core.renderers.ViewTreeRenderer Defines an interface for view tree renderers. view.core.loaders.builders.dsl.button view.core.loaders.builders.dsl.checkBox view.core.loaders.builders.dsl.editText view.core.loaders.builders.dsl.layouts.gridLayout view.core.loaders.builders.dsl.imageView view.core.loaders.builders.dsl.layouts.linearLayout view.core.loaders.builders.dsl.radioButton view.core.loaders.builders.dsl.layouts.relativeLayout view.core.loaders.builders.dsl.switch view.core.loaders.builders.dsl.textView view.core.loaders.builders.dsl.viewTree","title":"Index"},{"location":"Documentation/View/alltypes/#all-types","text":"view.utils.mapBased.keys.delegates.AbstractRWKey A delegate for mutable properties that are based on maps. view.core.loaders.builders.AbstractViewBuilder Base class for all view builders. view.core.views.propertyDelegates.AbstractViewProperty This is the base class for view mutable property delegates. view.core.views.animations.Animation This class is a base class for all animations. view.core.views.animations.AnimationSet Represents a group of animations to played. view.core.views.input.binaryStateInput.BinaryStateInput This is the base class for views that represent input UI components with an on/off state. view.utils.mapBased.keys.delegates.nullable.BoolRWKey view.core.views.input.Button Represents a button. view.core.loaders.builders.input.ButtonBuilder view.utils.namingConventions.CaseFormatConverter Converts strings between different case formats. view.utils.mapBased.keys.delegates.readOnly.casts.CastingKey Has the same behaviour as delegation by a map. view.core.views.input.binaryStateInput.CheckBox Represents a Check Box. view.core.loaders.builders.input.binaryStateInput.CheckBoxBuilder view.utils.mapBased.keys.delegates.nullable.ColorRWKey A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. view.utils.validators.conditions.Condition Represents a condition that the a value should meet to be valid. view.utils.validators.conditions.DC view.di.DelegateProvider view.core.loaders.viewTree.nodes.deserializedNode.DeserializedLayoutNode Holds the parsed key-value pairs of a layout view serialization. view.core.loaders.viewTree.nodes.deserializedNode.DeserializedNode Is a collection of parsed key-value pairs. view.core.views.Dimension The Dimension object contains utility methods for classifying values that represent dimensions such as a view's width, height and margins. view.utils.validators.conditions.DoubleConditions view.utils.mapBased.keys.delegates.nullable.DoubleRWKey view.core.loaders.builders.dsl.DslViewTreeLoader view.core.views.input.textInput.EditText Represents an editable text field. view.core.loaders.builders.input.textInput.EditTextBuilder view.utils.mapBased.keys.delegates.nullable.EnumRWKey view.core.views.layouts.GridLayout A layout where child views are positioned in a rectangular grid. view.core.loaders.builders.layouts.GridLayoutBuilder view.core.loaders.builders.dsl.layouts.GridLayoutChildren view.utils.mapBased.keys.HasKeys A base class for classes whose properties are based on a map. view.utils.validators.conditions.IC view.core.loaders.Ids This class keeps track of used view Ids. view.core.loaders.viewTree.IllegalViewTreeException This exception is thrown when an invalid view tree is encountered. view.core.views.display.ImageView This view displays an image on the UI. view.core.loaders.builders.display.ImageViewBuilder view.utils.mapBased.keys.delegates.nullable.IntRWKey view.utils.validators.conditions.IntegerConditions view.utils.serialization.Json view.core.loaders.viewTree.nodes.jsonNode.JsonLayoutNode A node that parses key-value pairs from a Json layout view serialization. view.core.loaders.viewTree.nodes.jsonNode.JsonNode A node that parses key-value pairs from a Json view serialization. view.core.loaders.viewTree.treeLoaders.JsonTreeLoader A tree loader that loads view trees from JSON. view.di.KodeinContainer Contains the bindings for DI. view.utils.validators.conditions.LC view.core.views.propertyDelegates.LateInitVal Allows an immutable property to be initialized later in the class' lifetime. view.core.views.layouts.Layout This is the base class for layout views, which are views that contain other views. view.core.loaders.builders.layouts.LayoutBuilder Base builder for layout builders. view.core.loaders.builders.dsl.layouts.LayoutChildren view.core.loaders.viewTree.nodes.LayoutNode Represents the serialized layout view. view.core.views.layouts.LinearLayout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. view.core.loaders.builders.layouts.LinearLayoutBuilder view.utils.validators.conditions.LongConditions view.utils.mapBased.keys.MapInterface Acts as layer between the property delegate and the map. view.core.loaders.viewTree.nodes.Node Represents the base class for all Node objects. view.utils.mapBased.keys.delegates.nullable.NullableRWKey A delegate for mutable nullable properties that are based on maps. view.core.views.propertyDelegates.NullableViewProperty Represents a nullable and mutable view property. view.utils.observables.ObservableCollection A collection that notifies its subscribes whenever its contents are changed. view.core.views.PreProcessor A preprocessor is a function that edits specific views before rendering. view.core.loaders.builders.layouts.RP view.core.views.input.binaryStateInput.RadioButton Represents a Radio Button. view.core.loaders.builders.input.binaryStateInput.RadioButtonBuilder view.core.views.layouts.RelativeLayout A layout where child views are positioned relative to each other and to the layout itself. view.core.loaders.builders.layouts.RelativeLayoutBuilder view.core.loaders.builders.dsl.layouts.RelativeLayoutChildren view.utils.mapBased.keys.delegates.required.RequiredBoolRWKey view.utils.mapBased.keys.delegates.required.RequiredDoubleRWKey view.utils.mapBased.keys.delegates.required.RequiredEnumRWKey view.utils.mapBased.keys.delegates.required.RequiredIntRWKey view.utils.mapBased.keys.delegates.required.RequiredRWKey A delegate for mutable non-nullable properties that are based on maps. view.utils.mapBased.keys.delegates.required.RequiredStringRWKey view.utils.validators.conditions.SC view.core.loaders.viewTree.treeLoaders.SerializedViewTreeLoader Base class for tree loaders that load view trees from serialized formats. view.core.views.animations.SingleAnimation A single animation. kotlin.String (extensions in package view.utils.extensions) kotlin.String (extensions in package view.utils.extensions) view.utils.validators.conditions.StringConditions view.utils.mapBased.keys.delegates.nullable.StringRWKey view.core.views.input.binaryStateInput.Switch Represents a switch. view.core.loaders.builders.input.binaryStateInput.SwitchBuilder view.core.views.display.TextView Represents a block of text on the UI. view.core.loaders.builders.display.TextViewBuilder view.core.views.Theme A theme specifies the appearance of View s. view.core.views.animations.Timer Defines an interface for classes that execute a function every interval of time. view.utils.validators.ValidationException An exception that is thrown whenever a value doesn't pass a validation. view.utils.validators.Validator A utility class for validation. view.core.views.View This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. view.core.loaders.builders.ViewBuilder Defines an interface for view builders. view.core.loaders.builders.ViewKeys Base class for classes containing view key-value pairs. view.core.views.propertyDelegates.ViewProperty Represents a non-nullable and mutable view property. view.core.loaders.viewTree.treeLoaders.ViewTreeLoader Defines an interface for view tree loaders view.core.renderers.ViewTreeRenderer Defines an interface for view tree renderers. view.core.loaders.builders.dsl.button view.core.loaders.builders.dsl.checkBox view.core.loaders.builders.dsl.editText view.core.loaders.builders.dsl.layouts.gridLayout view.core.loaders.builders.dsl.imageView view.core.loaders.builders.dsl.layouts.linearLayout view.core.loaders.builders.dsl.radioButton view.core.loaders.builders.dsl.layouts.relativeLayout view.core.loaders.builders.dsl.switch view.core.loaders.builders.dsl.textView view.core.loaders.builders.dsl.viewTree","title":"All Types"},{"location":"Documentation/View/view.core.loaders/","text":"View-common / view.core.loaders Package view.core.loaders This packages contains classes for loading view trees from a serialized format. The key components of this package are: Ids Class: Keeps track of ids of loaded views and ensures no views have duplicate ids treeLoaders Package: Is responsible for building the view tree. One important component of this package is the Node , which is an abstraction of a serialized view. Regardless of the serialization format (JSON, XML, YAML, etc...), the view tree will be serialized into a tree-like structure of key-value pairs that represent a view. The Node objects are responsible for parsing these key-value pairs. The view tree builders are oblivious to the serialization format used, they just traverse Node objects. builders Package: Responsible for building views from key-value pairs that are parsed by the Node objects. View Builders are map-based classes. Please refer to the package view.utils.mapBased.keys for more information. Types Ids class Ids This class keeps track of used view Ids.","title":"Index"},{"location":"Documentation/View/view.core.loaders/#package-viewcoreloaders","text":"This packages contains classes for loading view trees from a serialized format. The key components of this package are: Ids Class: Keeps track of ids of loaded views and ensures no views have duplicate ids treeLoaders Package: Is responsible for building the view tree. One important component of this package is the Node , which is an abstraction of a serialized view. Regardless of the serialization format (JSON, XML, YAML, etc...), the view tree will be serialized into a tree-like structure of key-value pairs that represent a view. The Node objects are responsible for parsing these key-value pairs. The view tree builders are oblivious to the serialization format used, they just traverse Node objects. builders Package: Responsible for building views from key-value pairs that are parsed by the Node objects. View Builders are map-based classes. Please refer to the package view.utils.mapBased.keys for more information.","title":"Package view.core.loaders"},{"location":"Documentation/View/view.core.loaders/#types","text":"Ids class Ids This class keeps track of used view Ids.","title":"Types"},{"location":"Documentation/View/view.core.loaders/-ids/","text":"View-common / view.core.loaders / Ids Ids class Ids This class keeps track of used view Ids. Constructors init Ids() This class keeps track of used view Ids. Functions addId fun addId(id: Int ): Boolean Marks the id as \"used\" clear fun clear(): Unit Mark all previously used Ids as \"unused\" containsId fun containsId(id: Int ): Boolean Checks if the passed id is already used. newId fun newId(): Int Returns a new unique id","title":"Index"},{"location":"Documentation/View/view.core.loaders/-ids/#ids","text":"class Ids This class keeps track of used view Ids.","title":"Ids"},{"location":"Documentation/View/view.core.loaders/-ids/#constructors","text":"init Ids() This class keeps track of used view Ids.","title":"Constructors"},{"location":"Documentation/View/view.core.loaders/-ids/#functions","text":"addId fun addId(id: Int ): Boolean Marks the id as \"used\" clear fun clear(): Unit Mark all previously used Ids as \"unused\" containsId fun containsId(id: Int ): Boolean Checks if the passed id is already used. newId fun newId(): Int Returns a new unique id","title":"Functions"},{"location":"Documentation/View/view.core.loaders/-ids/-init-/","text":"View-common / view.core.loaders / Ids / init init Ids() This class keeps track of used view Ids.","title":" init "},{"location":"Documentation/View/view.core.loaders/-ids/-init-/#init","text":"Ids() This class keeps track of used view Ids.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders/-ids/add-id/","text":"View-common / view.core.loaders / Ids / addId addId fun addId(id: Int ): Boolean Marks the id as \"used\" Parameters id - The used Id","title":"Add id"},{"location":"Documentation/View/view.core.loaders/-ids/add-id/#addid","text":"fun addId(id: Int ): Boolean Marks the id as \"used\"","title":"addId"},{"location":"Documentation/View/view.core.loaders/-ids/add-id/#parameters","text":"id - The used Id","title":"Parameters"},{"location":"Documentation/View/view.core.loaders/-ids/clear/","text":"View-common / view.core.loaders / Ids / clear clear fun clear(): Unit Mark all previously used Ids as \"unused\"","title":"Clear"},{"location":"Documentation/View/view.core.loaders/-ids/clear/#clear","text":"fun clear(): Unit Mark all previously used Ids as \"unused\"","title":"clear"},{"location":"Documentation/View/view.core.loaders/-ids/contains-id/","text":"View-common / view.core.loaders / Ids / containsId containsId fun containsId(id: Int ): Boolean Checks if the passed id is already used. Parameters The - id to check. Return True if the id is used before, false otherwise","title":"Contains id"},{"location":"Documentation/View/view.core.loaders/-ids/contains-id/#containsid","text":"fun containsId(id: Int ): Boolean Checks if the passed id is already used.","title":"containsId"},{"location":"Documentation/View/view.core.loaders/-ids/contains-id/#parameters","text":"The - id to check. Return True if the id is used before, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.core.loaders/-ids/new-id/","text":"View-common / view.core.loaders / Ids / newId newId fun newId(): Int Returns a new unique id Return The generated Id","title":"New id"},{"location":"Documentation/View/view.core.loaders/-ids/new-id/#newid","text":"fun newId(): Int Returns a new unique id Return The generated Id","title":"newId"},{"location":"Documentation/View/view.core.loaders.builders/","text":"View-common / view.core.loaders.builders Package view.core.loaders.builders Types AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders. ViewBuilder interface ViewBuilder V : View Defines an interface for view builders. ViewKeys abstract class ViewKeys : HasKeys Base class for classes containing view key-value pairs.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders/#package-viewcoreloadersbuilders","text":"","title":"Package view.core.loaders.builders"},{"location":"Documentation/View/view.core.loaders.builders/#types","text":"AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders. ViewBuilder interface ViewBuilder V : View Defines an interface for view builders. ViewKeys abstract class ViewKeys : HasKeys Base class for classes containing view key-value pairs.","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders. This class is responsible for building the common properties of view. In other words, the base builder will set all the properties in the View class. It is the responsibility of view specific builders to set the properties of specific views. Constructors init AbstractViewBuilder() Base class for all view builders. Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? view abstract val view: V The view instance that will have its properties set. visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Inherited Properties keys open var keys: MutableMap String , Any ? The map that contains the property values Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys. Inheritors ButtonBuilder open class ButtonBuilder : AbstractViewBuilder Button CheckBoxBuilder open class CheckBoxBuilder : AbstractViewBuilder CheckBox EditTextBuilder class EditTextBuilder : AbstractViewBuilder EditText ImageViewBuilder open class ImageViewBuilder : AbstractViewBuilder ImageView LayoutBuilder abstract class LayoutBuilder L : Layout : AbstractViewBuilder L Base builder for layout builders. RadioButtonBuilder open class RadioButtonBuilder : AbstractViewBuilder RadioButton SwitchBuilder open class SwitchBuilder : AbstractViewBuilder Switch TextViewBuilder open class TextViewBuilder : AbstractViewBuilder TextView","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/#abstractviewbuilder","text":"abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders. This class is responsible for building the common properties of view. In other words, the base builder will set all the properties in the View class. It is the responsibility of view specific builders to set the properties of specific views.","title":"AbstractViewBuilder"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/#constructors","text":"init AbstractViewBuilder() Base class for all view builders.","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/#properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? view abstract val view: V The view instance that will have its properties set. visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/#inherited-properties","text":"keys open var keys: MutableMap String , Any ? The map that contains the property values","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/#functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/#inheritors","text":"ButtonBuilder open class ButtonBuilder : AbstractViewBuilder Button CheckBoxBuilder open class CheckBoxBuilder : AbstractViewBuilder CheckBox EditTextBuilder class EditTextBuilder : AbstractViewBuilder EditText ImageViewBuilder open class ImageViewBuilder : AbstractViewBuilder ImageView LayoutBuilder abstract class LayoutBuilder L : Layout : AbstractViewBuilder L Base builder for layout builders. RadioButtonBuilder open class RadioButtonBuilder : AbstractViewBuilder RadioButton SwitchBuilder open class SwitchBuilder : AbstractViewBuilder Switch TextViewBuilder open class TextViewBuilder : AbstractViewBuilder TextView","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/-init-/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / init init AbstractViewBuilder() Base class for all view builders. This class is responsible for building the common properties of view. In other words, the base builder will set all the properties in the View class. It is the responsibility of view specific builders to set the properties of specific views.","title":" init "},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/-init-/#init","text":"AbstractViewBuilder() Base class for all view builders. This class is responsible for building the common properties of view. In other words, the base builder will set all the properties in the View class. It is the responsibility of view specific builders to set the properties of specific views.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/android-extras/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / androidExtras androidExtras var androidExtras: Map String , Any ?","title":"Android extras"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/android-extras/#androidextras","text":"var androidExtras: Map String , Any ?","title":"androidExtras"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/apply-keys/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / applyKeys applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Overrides ViewBuilder.applyKeys Edits the views based on the passed keys. Parameters keys - The keys used to extract information from. Return The current builder instance","title":"Apply keys"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/apply-keys/#applykeys","text":"open fun applyKeys(keys: Map String , Any ): ViewBuilder V Overrides ViewBuilder.applyKeys Edits the views based on the passed keys.","title":"applyKeys"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/apply-keys/#parameters","text":"keys - The keys used to extract information from. Return The current builder instance","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/background-color/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / backgroundColor backgroundColor var backgroundColor: Long ?","title":"Background color"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/background-color/#backgroundcolor","text":"var backgroundColor: Long ?","title":"backgroundColor"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/before-production/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/build/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / build build open fun build(): V Overrides ViewBuilder.build Builds the view from the keys. The process for building the view goes as follows: 1. The keys are checked for conflicts 2. Common view properties are set 3. The function beforeProduction is called. Which can be overridden by subclasses to set view-specific properties. 4. The resultant view is returned","title":"Build"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/build/#build","text":"open fun build(): V Overrides ViewBuilder.build Builds the view from the keys. The process for building the view goes as follows: 1. The keys are checked for conflicts 2. Common view properties are set 3. The function beforeProduction is called. Which can be overridden by subclasses to set view-specific properties. 4. The resultant view is returned","title":"build"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/conflicting-keys/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / conflictingKeys conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. If more than one key belonging to the same set are present, an IllegalViewTreeException will be thrown.","title":"Conflicting keys"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/conflicting-keys/#conflictingkeys","text":"open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. If more than one key belonging to the same set are present, an IllegalViewTreeException will be thrown.","title":"conflictingKeys"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/disabled/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / disabled disabled var disabled: Boolean ?","title":"Disabled"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/disabled/#disabled","text":"var disabled: Boolean ?","title":"disabled"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/has-shadow/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / hasShadow hasShadow var hasShadow: Boolean ?","title":"Has shadow"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/has-shadow/#hasshadow","text":"var hasShadow: Boolean ?","title":"hasShadow"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/height/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / height height var height: String ?","title":"Height"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/height/#height","text":"var height: String ?","title":"height"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/id/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / id id var id: String ?","title":"Id"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/id/#id","text":"var id: String ?","title":"id"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/ids/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / ids ids protected val ids: ERROR CLASS","title":"Ids"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/ids/#ids","text":"protected val ids: ERROR CLASS","title":"ids"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/ios-extras/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / iosExtras iosExtras var iosExtras: Map String , Any ?","title":"Ios extras"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/ios-extras/#iosextras","text":"var iosExtras: Map String , Any ?","title":"iosExtras"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-bottom/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / marginBottom marginBottom var marginBottom: Double ?","title":"Margin bottom"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-bottom/#marginbottom","text":"var marginBottom: Double ?","title":"marginBottom"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-end/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / marginEnd marginEnd var marginEnd: Double ?","title":"Margin end"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-end/#marginend","text":"var marginEnd: Double ?","title":"marginEnd"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-horizontal/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / marginHorizontal marginHorizontal var marginHorizontal: Double ?","title":"Margin horizontal"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-horizontal/#marginhorizontal","text":"var marginHorizontal: Double ?","title":"marginHorizontal"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-start/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / marginStart marginStart var marginStart: Double ?","title":"Margin start"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-start/#marginstart","text":"var marginStart: Double ?","title":"marginStart"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-top/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / marginTop marginTop var marginTop: Double ?","title":"Margin top"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-top/#margintop","text":"var marginTop: Double ?","title":"marginTop"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-vertical/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / marginVertical marginVertical var marginVertical: Double ?","title":"Margin vertical"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/margin-vertical/#marginvertical","text":"var marginVertical: Double ?","title":"marginVertical"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-bottom/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / paddingBottom paddingBottom var paddingBottom: Double ?","title":"Padding bottom"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-bottom/#paddingbottom","text":"var paddingBottom: Double ?","title":"paddingBottom"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-end/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / paddingEnd paddingEnd var paddingEnd: Double ?","title":"Padding end"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-end/#paddingend","text":"var paddingEnd: Double ?","title":"paddingEnd"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-horizontal/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / paddingHorizontal paddingHorizontal var paddingHorizontal: Double ?","title":"Padding horizontal"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-horizontal/#paddinghorizontal","text":"var paddingHorizontal: Double ?","title":"paddingHorizontal"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-start/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / paddingStart paddingStart var paddingStart: Double ?","title":"Padding start"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-start/#paddingstart","text":"var paddingStart: Double ?","title":"paddingStart"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-top/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / paddingTop paddingTop var paddingTop: Double ?","title":"Padding top"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-top/#paddingtop","text":"var paddingTop: Double ?","title":"paddingTop"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-vertical/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / paddingVertical paddingVertical var paddingVertical: Double ?","title":"Padding vertical"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/padding-vertical/#paddingvertical","text":"var paddingVertical: Double ?","title":"paddingVertical"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/view/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / view view protected abstract val view: V The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/view/#view","text":"protected abstract val view: V The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/visibility/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / visibility visibility var visibility: Visibility ?","title":"Visibility"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/visibility/#visibility","text":"var visibility: Visibility ?","title":"visibility"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/web-extras/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / webExtras webExtras var webExtras: Map String , Any ?","title":"Web extras"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/web-extras/#webextras","text":"var webExtras: Map String , Any ?","title":"webExtras"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/width/","text":"View-common / view.core.loaders.builders / AbstractViewBuilder / width width var width: String ?","title":"Width"},{"location":"Documentation/View/view.core.loaders.builders/-abstract-view-builder/width/#width","text":"var width: String ?","title":"width"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/","text":"View-common / view.core.loaders.builders / ViewBuilder ViewBuilder interface ViewBuilder V : View Defines an interface for view builders. Functions applyKeys abstract fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build abstract fun build(): V Builds the view Inheritors AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/#viewbuilder","text":"interface ViewBuilder V : View Defines an interface for view builders.","title":"ViewBuilder"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/#functions","text":"applyKeys abstract fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build abstract fun build(): V Builds the view","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/#inheritors","text":"AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders.","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/apply-keys/","text":"View-common / view.core.loaders.builders / ViewBuilder / applyKeys applyKeys abstract fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. Parameters keys - The keys used to extract information from. Return The current builder instance","title":"Apply keys"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/apply-keys/#applykeys","text":"abstract fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys.","title":"applyKeys"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/apply-keys/#parameters","text":"keys - The keys used to extract information from. Return The current builder instance","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/build/","text":"View-common / view.core.loaders.builders / ViewBuilder / build build abstract fun build(): V Builds the view Return The constructed view","title":"Build"},{"location":"Documentation/View/view.core.loaders.builders/-view-builder/build/#build","text":"abstract fun build(): V Builds the view Return The constructed view","title":"build"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/","text":"View-common / view.core.loaders.builders / ViewKeys ViewKeys abstract class ViewKeys : HasKeys Base class for classes containing view key-value pairs. This class validates the keys before being assigned. Constructors init ViewKeys() Base class for classes containing view key-value pairs. Properties keys open var keys: MutableMap String , Any ? The map that contains the property values Inheritors AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders. CellKeys class CellKeys : ViewKeys Child class Child : ViewKeys","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/#viewkeys","text":"abstract class ViewKeys : HasKeys Base class for classes containing view key-value pairs. This class validates the keys before being assigned.","title":"ViewKeys"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/#constructors","text":"init ViewKeys() Base class for classes containing view key-value pairs.","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/#properties","text":"keys open var keys: MutableMap String , Any ? The map that contains the property values","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/#inheritors","text":"AbstractViewBuilder abstract class AbstractViewBuilder V : View : ViewBuilder V , ViewKeys Base class for all view builders. CellKeys class CellKeys : ViewKeys Child class Child : ViewKeys","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/-init-/","text":"View-common / view.core.loaders.builders / ViewKeys / init init ViewKeys() Base class for classes containing view key-value pairs. This class validates the keys before being assigned.","title":" init "},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/-init-/#init","text":"ViewKeys() Base class for classes containing view key-value pairs. This class validates the keys before being assigned.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/keys/","text":"View-common / view.core.loaders.builders / ViewKeys / keys keys open var keys: MutableMap String , Any ? Overrides HasKeys.keys The map that contains the property values Getter The map that contains the property values Setter The map that contains the property values","title":"Keys"},{"location":"Documentation/View/view.core.loaders.builders/-view-keys/keys/#keys","text":"open var keys: MutableMap String , Any ? Overrides HasKeys.keys The map that contains the property values Getter The map that contains the property values Setter The map that contains the property values","title":"keys"},{"location":"Documentation/View/view.core.loaders.builders.display/","text":"View-common / view.core.loaders.builders.display Package view.core.loaders.builders.display Types ImageViewBuilder open class ImageViewBuilder : AbstractViewBuilder ImageView TextViewBuilder open class TextViewBuilder : AbstractViewBuilder TextView","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.display/#package-viewcoreloadersbuildersdisplay","text":"","title":"Package view.core.loaders.builders.display"},{"location":"Documentation/View/view.core.loaders.builders.display/#types","text":"ImageViewBuilder open class ImageViewBuilder : AbstractViewBuilder ImageView TextViewBuilder open class TextViewBuilder : AbstractViewBuilder TextView","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/","text":"View-common / view.core.loaders.builders.display / ImageViewBuilder ImageViewBuilder open class ImageViewBuilder : AbstractViewBuilder ImageView Constructors init ImageViewBuilder() Properties imageResource var imageResource: String scaleType var scaleType: ScaleType ? view open val view: ImageView The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Functions beforeProduction open fun beforeProduction(): Unit Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/#imageviewbuilder","text":"open class ImageViewBuilder : AbstractViewBuilder ImageView","title":"ImageViewBuilder"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/#constructors","text":"init ImageViewBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/#properties","text":"imageResource var imageResource: String scaleType var scaleType: ScaleType ? view open val view: ImageView The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/#functions","text":"beforeProduction open fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/-init-/","text":"View-common / view.core.loaders.builders.display / ImageViewBuilder / init init ImageViewBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/-init-/#init","text":"ImageViewBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/before-production/","text":"View-common / view.core.loaders.builders.display / ImageViewBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/image-resource/","text":"View-common / view.core.loaders.builders.display / ImageViewBuilder / imageResource imageResource var imageResource: String","title":"Image resource"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/image-resource/#imageresource","text":"var imageResource: String","title":"imageResource"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/scale-type/","text":"View-common / view.core.loaders.builders.display / ImageViewBuilder / scaleType scaleType var scaleType: ScaleType ?","title":"Scale type"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/scale-type/#scaletype","text":"var scaleType: ScaleType ?","title":"scaleType"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/view/","text":"View-common / view.core.loaders.builders.display / ImageViewBuilder / view view protected open val view: ImageView Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.display/-image-view-builder/view/#view","text":"protected open val view: ImageView Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder TextViewBuilder open class TextViewBuilder : AbstractViewBuilder TextView Constructors init TextViewBuilder() Properties align var align: Align ? font var font: String ? fontColor var fontColor: Long ? fontSize var fontSize: Double ? fontStyle var fontStyle: Set FontStyle ? text var text: String ? view open val view: TextView The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Functions beforeProduction open fun beforeProduction(): Unit Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/#textviewbuilder","text":"open class TextViewBuilder : AbstractViewBuilder TextView","title":"TextViewBuilder"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/#constructors","text":"init TextViewBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/#properties","text":"align var align: Align ? font var font: String ? fontColor var fontColor: Long ? fontSize var fontSize: Double ? fontStyle var fontStyle: Set FontStyle ? text var text: String ? view open val view: TextView The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/#functions","text":"beforeProduction open fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/-init-/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / init init TextViewBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/-init-/#init","text":"TextViewBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/align/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / align align var align: Align ?","title":"Align"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/align/#align","text":"var align: Align ?","title":"align"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/before-production/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font-color/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / fontColor fontColor var fontColor: Long ?","title":"Font color"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font-color/#fontcolor","text":"var fontColor: Long ?","title":"fontColor"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font-size/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / fontSize fontSize var fontSize: Double ?","title":"Font size"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font-size/#fontsize","text":"var fontSize: Double ?","title":"fontSize"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font-style/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / fontStyle fontStyle var fontStyle: Set FontStyle ?","title":"Font style"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font-style/#fontstyle","text":"var fontStyle: Set FontStyle ?","title":"fontStyle"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / font font var font: String ?","title":"Font"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/font/#font","text":"var font: String ?","title":"font"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/text/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / text text var text: String ?","title":"Text"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/text/#text","text":"var text: String ?","title":"text"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/view/","text":"View-common / view.core.loaders.builders.display / TextViewBuilder / view view protected open val view: TextView Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.display/-text-view-builder/view/#view","text":"protected open val view: TextView Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.dsl/","text":"View-common / view.core.loaders.builders.dsl Package view.core.loaders.builders.dsl Types DslViewTreeLoader class DslViewTreeLoader : ViewTreeLoader button object button checkBox object checkBox editText object editText imageView object imageView radioButton object radioButton switch object switch textView object textView viewTree object viewTree","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/#package-viewcoreloadersbuildersdsl","text":"","title":"Package view.core.loaders.builders.dsl"},{"location":"Documentation/View/view.core.loaders.builders.dsl/#types","text":"DslViewTreeLoader class DslViewTreeLoader : ViewTreeLoader button object button checkBox object checkBox editText object editText imageView object imageView radioButton object radioButton switch object switch textView object textView viewTree object viewTree","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/","text":"View-common / view.core.loaders.builders.dsl / DslViewTreeLoader DslViewTreeLoader class DslViewTreeLoader : ViewTreeLoader Constructors init DslViewTreeLoader() Properties rootLayout lateinit var rootLayout: Layout Functions loadViewTree fun loadViewTree(): Layout Loads the view tree","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/#dslviewtreeloader","text":"class DslViewTreeLoader : ViewTreeLoader","title":"DslViewTreeLoader"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/#constructors","text":"init DslViewTreeLoader()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/#properties","text":"rootLayout lateinit var rootLayout: Layout","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/#functions","text":"loadViewTree fun loadViewTree(): Layout Loads the view tree","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/-init-/","text":"View-common / view.core.loaders.builders.dsl / DslViewTreeLoader / init init DslViewTreeLoader()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/-init-/#init","text":"DslViewTreeLoader()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/load-view-tree/","text":"View-common / view.core.loaders.builders.dsl / DslViewTreeLoader / loadViewTree loadViewTree fun loadViewTree(): Layout Overrides ViewTreeLoader.loadViewTree Loads the view tree Return The root of the loaded view tree","title":"Load view tree"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/load-view-tree/#loadviewtree","text":"fun loadViewTree(): Layout Overrides ViewTreeLoader.loadViewTree Loads the view tree Return The root of the loaded view tree","title":"loadViewTree"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/root-layout/","text":"View-common / view.core.loaders.builders.dsl / DslViewTreeLoader / rootLayout rootLayout lateinit var rootLayout: Layout","title":"Root layout"},{"location":"Documentation/View/view.core.loaders.builders.dsl/-dsl-view-tree-loader/root-layout/#rootlayout","text":"lateinit var rootLayout: Layout","title":"rootLayout"},{"location":"Documentation/View/view.core.loaders.builders.dsl/button/","text":"View-common / view.core.loaders.builders.dsl / button button object button Functions invoke operator fun invoke(init: ButtonBuilder .() - Unit ): ERROR CLASS","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/button/#button","text":"object button","title":"button"},{"location":"Documentation/View/view.core.loaders.builders.dsl/button/#functions","text":"invoke operator fun invoke(init: ButtonBuilder .() - Unit ): ERROR CLASS","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/button/invoke/","text":"View-common / view.core.loaders.builders.dsl / button / invoke invoke operator fun invoke(init: ButtonBuilder .() - Unit ): ERROR CLASS","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/button/invoke/#invoke","text":"operator fun invoke(init: ButtonBuilder .() - Unit ): ERROR CLASS","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/check-box/","text":"View-common / view.core.loaders.builders.dsl / checkBox checkBox object checkBox Functions invoke operator fun invoke(init: CheckBoxBuilder .() - Unit ): ERROR CLASS","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/check-box/#checkbox","text":"object checkBox","title":"checkBox"},{"location":"Documentation/View/view.core.loaders.builders.dsl/check-box/#functions","text":"invoke operator fun invoke(init: CheckBoxBuilder .() - Unit ): ERROR CLASS","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/check-box/invoke/","text":"View-common / view.core.loaders.builders.dsl / checkBox / invoke invoke operator fun invoke(init: CheckBoxBuilder .() - Unit ): ERROR CLASS","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/check-box/invoke/#invoke","text":"operator fun invoke(init: CheckBoxBuilder .() - Unit ): ERROR CLASS","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/edit-text/","text":"View-common / view.core.loaders.builders.dsl / editText editText object editText Functions invoke operator fun invoke(init: EditTextBuilder .() - Unit ): ERROR CLASS","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/edit-text/#edittext","text":"object editText","title":"editText"},{"location":"Documentation/View/view.core.loaders.builders.dsl/edit-text/#functions","text":"invoke operator fun invoke(init: EditTextBuilder .() - Unit ): ERROR CLASS","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/edit-text/invoke/","text":"View-common / view.core.loaders.builders.dsl / editText / invoke invoke operator fun invoke(init: EditTextBuilder .() - Unit ): ERROR CLASS","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/edit-text/invoke/#invoke","text":"operator fun invoke(init: EditTextBuilder .() - Unit ): ERROR CLASS","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/image-view/","text":"View-common / view.core.loaders.builders.dsl / imageView imageView object imageView Functions invoke operator fun invoke(init: ImageViewBuilder .() - Unit ): ImageView","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/image-view/#imageview","text":"object imageView","title":"imageView"},{"location":"Documentation/View/view.core.loaders.builders.dsl/image-view/#functions","text":"invoke operator fun invoke(init: ImageViewBuilder .() - Unit ): ImageView","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/image-view/invoke/","text":"View-common / view.core.loaders.builders.dsl / imageView / invoke invoke operator fun invoke(init: ImageViewBuilder .() - Unit ): ImageView","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/image-view/invoke/#invoke","text":"operator fun invoke(init: ImageViewBuilder .() - Unit ): ImageView","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/radio-button/","text":"View-common / view.core.loaders.builders.dsl / radioButton radioButton object radioButton Functions invoke operator fun invoke(init: RadioButtonBuilder .() - Unit ): ERROR CLASS","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/radio-button/#radiobutton","text":"object radioButton","title":"radioButton"},{"location":"Documentation/View/view.core.loaders.builders.dsl/radio-button/#functions","text":"invoke operator fun invoke(init: RadioButtonBuilder .() - Unit ): ERROR CLASS","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/radio-button/invoke/","text":"View-common / view.core.loaders.builders.dsl / radioButton / invoke invoke operator fun invoke(init: RadioButtonBuilder .() - Unit ): ERROR CLASS","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/radio-button/invoke/#invoke","text":"operator fun invoke(init: RadioButtonBuilder .() - Unit ): ERROR CLASS","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/switch/","text":"View-common / view.core.loaders.builders.dsl / switch switch object switch Functions invoke operator fun invoke(init: SwitchBuilder .() - Unit ): ERROR CLASS","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/switch/#switch","text":"object switch","title":"switch"},{"location":"Documentation/View/view.core.loaders.builders.dsl/switch/#functions","text":"invoke operator fun invoke(init: SwitchBuilder .() - Unit ): ERROR CLASS","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/switch/invoke/","text":"View-common / view.core.loaders.builders.dsl / switch / invoke invoke operator fun invoke(init: SwitchBuilder .() - Unit ): ERROR CLASS","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/switch/invoke/#invoke","text":"operator fun invoke(init: SwitchBuilder .() - Unit ): ERROR CLASS","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/text-view/","text":"View-common / view.core.loaders.builders.dsl / textView textView object textView Functions invoke operator fun invoke(init: TextViewBuilder .() - Unit ): TextView","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/text-view/#textview","text":"object textView","title":"textView"},{"location":"Documentation/View/view.core.loaders.builders.dsl/text-view/#functions","text":"invoke operator fun invoke(init: TextViewBuilder .() - Unit ): TextView","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/text-view/invoke/","text":"View-common / view.core.loaders.builders.dsl / textView / invoke invoke operator fun invoke(init: TextViewBuilder .() - Unit ): TextView","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/text-view/invoke/#invoke","text":"operator fun invoke(init: TextViewBuilder .() - Unit ): TextView","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl/view-tree/","text":"View-common / view.core.loaders.builders.dsl / viewTree viewTree object viewTree Functions withRoot infix fun withRoot(root: Layout ): Layout","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl/view-tree/#viewtree","text":"object viewTree","title":"viewTree"},{"location":"Documentation/View/view.core.loaders.builders.dsl/view-tree/#functions","text":"withRoot infix fun withRoot(root: Layout ): Layout","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl/view-tree/with-root/","text":"View-common / view.core.loaders.builders.dsl / viewTree / withRoot withRoot infix fun withRoot(root: Layout ): Layout","title":"With root"},{"location":"Documentation/View/view.core.loaders.builders.dsl/view-tree/with-root/#withroot","text":"infix fun withRoot(root: Layout ): Layout","title":"withRoot"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/","text":"View-common / view.core.loaders.builders.dsl.layouts Package view.core.loaders.builders.dsl.layouts Types GridLayoutChildren class GridLayoutChildren LayoutChildren class LayoutChildren RelativeLayoutChildren class RelativeLayoutChildren gridLayout object gridLayout linearLayout object linearLayout relativeLayout object relativeLayout","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/#package-viewcoreloadersbuildersdsllayouts","text":"","title":"Package view.core.loaders.builders.dsl.layouts"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/#types","text":"GridLayoutChildren class GridLayoutChildren LayoutChildren class LayoutChildren RelativeLayoutChildren class RelativeLayoutChildren gridLayout object gridLayout linearLayout object linearLayout relativeLayout object relativeLayout","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/","text":"View-common / view.core.loaders.builders.dsl.layouts / GridLayoutChildren GridLayoutChildren class GridLayoutChildren Constructors init GridLayoutChildren(builder: GridLayoutBuilder ) Properties builder val builder: GridLayoutBuilder Functions get operator fun get(vararg children: ERROR CLASS View , CellKeys ): Unit","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/#gridlayoutchildren","text":"class GridLayoutChildren","title":"GridLayoutChildren"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/#constructors","text":"init GridLayoutChildren(builder: GridLayoutBuilder )","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/#properties","text":"builder val builder: GridLayoutBuilder","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/#functions","text":"get operator fun get(vararg children: ERROR CLASS View , CellKeys ): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/-init-/","text":"View-common / view.core.loaders.builders.dsl.layouts / GridLayoutChildren / init init GridLayoutChildren(builder: GridLayoutBuilder )","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/-init-/#init","text":"GridLayoutChildren(builder: GridLayoutBuilder )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/builder/","text":"View-common / view.core.loaders.builders.dsl.layouts / GridLayoutChildren / builder builder val builder: GridLayoutBuilder","title":"Builder"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/builder/#builder","text":"val builder: GridLayoutBuilder","title":"builder"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/get/","text":"View-common / view.core.loaders.builders.dsl.layouts / GridLayoutChildren / get get operator fun get(vararg children: ERROR CLASS View , CellKeys ): Unit","title":"Get"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-grid-layout-children/get/#get","text":"operator fun get(vararg children: ERROR CLASS View , CellKeys ): Unit","title":"get"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/","text":"View-common / view.core.loaders.builders.dsl.layouts / LayoutChildren LayoutChildren class LayoutChildren Constructors init LayoutChildren(bldr: LinearLayoutBuilder ) Functions get operator fun get(vararg children: View ): Unit","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/#layoutchildren","text":"class LayoutChildren","title":"LayoutChildren"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/#constructors","text":"init LayoutChildren(bldr: LinearLayoutBuilder )","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/#functions","text":"get operator fun get(vararg children: View ): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/-init-/","text":"View-common / view.core.loaders.builders.dsl.layouts / LayoutChildren / init init LayoutChildren(bldr: LinearLayoutBuilder )","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/-init-/#init","text":"LayoutChildren(bldr: LinearLayoutBuilder )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/get/","text":"View-common / view.core.loaders.builders.dsl.layouts / LayoutChildren / get get operator fun get(vararg children: View ): Unit","title":"Get"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-layout-children/get/#get","text":"operator fun get(vararg children: View ): Unit","title":"get"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/","text":"View-common / view.core.loaders.builders.dsl.layouts / RelativeLayoutChildren RelativeLayoutChildren class RelativeLayoutChildren Constructors init RelativeLayoutChildren(bldr: RelativeLayoutBuilder ) Functions get operator fun get(vararg children: ERROR CLASS View , Child ): Unit","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/#relativelayoutchildren","text":"class RelativeLayoutChildren","title":"RelativeLayoutChildren"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/#constructors","text":"init RelativeLayoutChildren(bldr: RelativeLayoutBuilder )","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/#functions","text":"get operator fun get(vararg children: ERROR CLASS View , Child ): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/-init-/","text":"View-common / view.core.loaders.builders.dsl.layouts / RelativeLayoutChildren / init init RelativeLayoutChildren(bldr: RelativeLayoutBuilder )","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/-init-/#init","text":"RelativeLayoutChildren(bldr: RelativeLayoutBuilder )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/get/","text":"View-common / view.core.loaders.builders.dsl.layouts / RelativeLayoutChildren / get get operator fun get(vararg children: ERROR CLASS View , Child ): Unit","title":"Get"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/-relative-layout-children/get/#get","text":"operator fun get(vararg children: ERROR CLASS View , Child ): Unit","title":"get"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/","text":"View-common / view.core.loaders.builders.dsl.layouts / gridLayout gridLayout object gridLayout Properties children val GridLayoutBuilder .children: GridLayoutChildren Functions inCell infix fun V : View V .inCell(init: CellKeys .() - Unit ): ERROR CLASS View , CellKeys invoke operator fun invoke(init: GridLayoutBuilder .() - Unit ): GridLayout toEnd fun V : View V .toEnd(): ERROR CLASS View , CellKeys","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/#gridlayout","text":"object gridLayout","title":"gridLayout"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/#properties","text":"children val GridLayoutBuilder .children: GridLayoutChildren","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/#functions","text":"inCell infix fun V : View V .inCell(init: CellKeys .() - Unit ): ERROR CLASS View , CellKeys invoke operator fun invoke(init: GridLayoutBuilder .() - Unit ): GridLayout toEnd fun V : View V .toEnd(): ERROR CLASS View , CellKeys","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/children/","text":"View-common / view.core.loaders.builders.dsl.layouts / gridLayout / children children val GridLayoutBuilder .children: GridLayoutChildren","title":"Children"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/children/#children","text":"val GridLayoutBuilder .children: GridLayoutChildren","title":"children"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/in-cell/","text":"View-common / view.core.loaders.builders.dsl.layouts / gridLayout / inCell inCell infix fun V : View V .inCell(init: CellKeys .() - Unit ): ERROR CLASS View , CellKeys","title":"In cell"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/in-cell/#incell","text":"infix fun V : View V .inCell(init: CellKeys .() - Unit ): ERROR CLASS View , CellKeys","title":"inCell"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/invoke/","text":"View-common / view.core.loaders.builders.dsl.layouts / gridLayout / invoke invoke operator fun invoke(init: GridLayoutBuilder .() - Unit ): GridLayout","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/invoke/#invoke","text":"operator fun invoke(init: GridLayoutBuilder .() - Unit ): GridLayout","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/to-end/","text":"View-common / view.core.loaders.builders.dsl.layouts / gridLayout / toEnd toEnd fun V : View V .toEnd(): ERROR CLASS View , CellKeys","title":"To end"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/grid-layout/to-end/#toend","text":"fun V : View V .toEnd(): ERROR CLASS View , CellKeys","title":"toEnd"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/","text":"View-common / view.core.loaders.builders.dsl.layouts / linearLayout linearLayout object linearLayout Properties children val LinearLayoutBuilder .children: LayoutChildren Functions invoke operator fun invoke(init: LinearLayoutBuilder .() - Unit ): LinearLayout","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/#linearlayout","text":"object linearLayout","title":"linearLayout"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/#properties","text":"children val LinearLayoutBuilder .children: LayoutChildren","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/#functions","text":"invoke operator fun invoke(init: LinearLayoutBuilder .() - Unit ): LinearLayout","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/children/","text":"View-common / view.core.loaders.builders.dsl.layouts / linearLayout / children children val LinearLayoutBuilder .children: LayoutChildren","title":"Children"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/children/#children","text":"val LinearLayoutBuilder .children: LayoutChildren","title":"children"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/invoke/","text":"View-common / view.core.loaders.builders.dsl.layouts / linearLayout / invoke invoke operator fun invoke(init: LinearLayoutBuilder .() - Unit ): LinearLayout","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/linear-layout/invoke/#invoke","text":"operator fun invoke(init: LinearLayoutBuilder .() - Unit ): LinearLayout","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/","text":"View-common / view.core.loaders.builders.dsl.layouts / relativeLayout relativeLayout object relativeLayout Properties children val RelativeLayoutBuilder .children: RelativeLayoutChildren Functions invoke operator fun invoke(init: RelativeLayoutBuilder .() - Unit ): RelativeLayout relativeTo infix fun V : View V .relativeTo(init: Child .() - Unit ): ERROR CLASS V , Child","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/#relativelayout","text":"object relativeLayout","title":"relativeLayout"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/#properties","text":"children val RelativeLayoutBuilder .children: RelativeLayoutChildren","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/#functions","text":"invoke operator fun invoke(init: RelativeLayoutBuilder .() - Unit ): RelativeLayout relativeTo infix fun V : View V .relativeTo(init: Child .() - Unit ): ERROR CLASS V , Child","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/children/","text":"View-common / view.core.loaders.builders.dsl.layouts / relativeLayout / children children val RelativeLayoutBuilder .children: RelativeLayoutChildren","title":"Children"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/children/#children","text":"val RelativeLayoutBuilder .children: RelativeLayoutChildren","title":"children"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/invoke/","text":"View-common / view.core.loaders.builders.dsl.layouts / relativeLayout / invoke invoke operator fun invoke(init: RelativeLayoutBuilder .() - Unit ): RelativeLayout","title":"Invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/invoke/#invoke","text":"operator fun invoke(init: RelativeLayoutBuilder .() - Unit ): RelativeLayout","title":"invoke"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/relative-to/","text":"View-common / view.core.loaders.builders.dsl.layouts / relativeLayout / relativeTo relativeTo infix fun V : View V .relativeTo(init: Child .() - Unit ): ERROR CLASS V , Child","title":"Relative to"},{"location":"Documentation/View/view.core.loaders.builders.dsl.layouts/relative-layout/relative-to/#relativeto","text":"infix fun V : View V .relativeTo(init: Child .() - Unit ): ERROR CLASS V , Child","title":"relativeTo"},{"location":"Documentation/View/view.core.loaders.builders.input/","text":"View-common / view.core.loaders.builders.input Package view.core.loaders.builders.input Types ButtonBuilder open class ButtonBuilder : AbstractViewBuilder Button","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input/#package-viewcoreloadersbuildersinput","text":"","title":"Package view.core.loaders.builders.input"},{"location":"Documentation/View/view.core.loaders.builders.input/#types","text":"ButtonBuilder open class ButtonBuilder : AbstractViewBuilder Button","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/","text":"View-common / view.core.loaders.builders.input / ButtonBuilder ButtonBuilder open class ButtonBuilder : AbstractViewBuilder Button Constructors init ButtonBuilder() Properties text var text: String ? type var type: TYPE ? view open val view: Button The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Functions beforeProduction open fun beforeProduction(): Unit Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/#buttonbuilder","text":"open class ButtonBuilder : AbstractViewBuilder Button","title":"ButtonBuilder"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/#constructors","text":"init ButtonBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/#properties","text":"text var text: String ? type var type: TYPE ? view open val view: Button The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/#functions","text":"beforeProduction open fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/-init-/","text":"View-common / view.core.loaders.builders.input / ButtonBuilder / init init ButtonBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/-init-/#init","text":"ButtonBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/before-production/","text":"View-common / view.core.loaders.builders.input / ButtonBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/text/","text":"View-common / view.core.loaders.builders.input / ButtonBuilder / text text var text: String ?","title":"Text"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/text/#text","text":"var text: String ?","title":"text"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/type/","text":"View-common / view.core.loaders.builders.input / ButtonBuilder / type type var type: TYPE ?","title":"Type"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/type/#type","text":"var type: TYPE ?","title":"type"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/view/","text":"View-common / view.core.loaders.builders.input / ButtonBuilder / view view protected open val view: Button Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.input/-button-builder/view/#view","text":"protected open val view: Button Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/","text":"View-common / view.core.loaders.builders.input.binaryStateInput Package view.core.loaders.builders.input.binaryStateInput Types CheckBoxBuilder open class CheckBoxBuilder : AbstractViewBuilder CheckBox RadioButtonBuilder open class RadioButtonBuilder : AbstractViewBuilder RadioButton SwitchBuilder open class SwitchBuilder : AbstractViewBuilder Switch","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/#package-viewcoreloadersbuildersinputbinarystateinput","text":"","title":"Package view.core.loaders.builders.input.binaryStateInput"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/#types","text":"CheckBoxBuilder open class CheckBoxBuilder : AbstractViewBuilder CheckBox RadioButtonBuilder open class RadioButtonBuilder : AbstractViewBuilder RadioButton SwitchBuilder open class SwitchBuilder : AbstractViewBuilder Switch","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / CheckBoxBuilder CheckBoxBuilder open class CheckBoxBuilder : AbstractViewBuilder CheckBox Constructors init CheckBoxBuilder() Properties view open val view: CheckBox The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/#checkboxbuilder","text":"open class CheckBoxBuilder : AbstractViewBuilder CheckBox","title":"CheckBoxBuilder"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/#constructors","text":"init CheckBoxBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/#properties","text":"view open val view: CheckBox The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/-init-/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / CheckBoxBuilder / init init CheckBoxBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/-init-/#init","text":"CheckBoxBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/view/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / CheckBoxBuilder / view view protected open val view: CheckBox Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-check-box-builder/view/#view","text":"protected open val view: CheckBox Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / RadioButtonBuilder RadioButtonBuilder open class RadioButtonBuilder : AbstractViewBuilder RadioButton Constructors init RadioButtonBuilder() Properties view open val view: RadioButton The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/#radiobuttonbuilder","text":"open class RadioButtonBuilder : AbstractViewBuilder RadioButton","title":"RadioButtonBuilder"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/#constructors","text":"init RadioButtonBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/#properties","text":"view open val view: RadioButton The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/-init-/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / RadioButtonBuilder / init init RadioButtonBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/-init-/#init","text":"RadioButtonBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/view/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / RadioButtonBuilder / view view protected open val view: RadioButton Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-radio-button-builder/view/#view","text":"protected open val view: RadioButton Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / SwitchBuilder SwitchBuilder open class SwitchBuilder : AbstractViewBuilder Switch Constructors init SwitchBuilder() Properties view open val view: Switch The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/#switchbuilder","text":"open class SwitchBuilder : AbstractViewBuilder Switch","title":"SwitchBuilder"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/#constructors","text":"init SwitchBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/#properties","text":"view open val view: Switch The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. beforeProduction open fun beforeProduction(): Unit build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/-init-/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / SwitchBuilder / init init SwitchBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/-init-/#init","text":"SwitchBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/view/","text":"View-common / view.core.loaders.builders.input.binaryStateInput / SwitchBuilder / view view protected open val view: Switch Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.input.binary-state-input/-switch-builder/view/#view","text":"protected open val view: Switch Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/","text":"View-common / view.core.loaders.builders.input.textInput Package view.core.loaders.builders.input.textInput Types EditTextBuilder class EditTextBuilder : AbstractViewBuilder EditText","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/#package-viewcoreloadersbuildersinputtextinput","text":"","title":"Package view.core.loaders.builders.input.textInput"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/#types","text":"EditTextBuilder class EditTextBuilder : AbstractViewBuilder EditText","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder EditTextBuilder class EditTextBuilder : AbstractViewBuilder EditText Constructors init EditTextBuilder() Properties fontColor var fontColor: Long ? fontSize var fontSize: Int ? text var text: String ? view val view: EditText The view instance that will have its properties set. Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Functions beforeProduction fun beforeProduction(): Unit Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/#edittextbuilder","text":"class EditTextBuilder : AbstractViewBuilder EditText","title":"EditTextBuilder"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/#constructors","text":"init EditTextBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/#properties","text":"fontColor var fontColor: Long ? fontSize var fontSize: Int ? text var text: String ? view val view: EditText The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/#functions","text":"beforeProduction fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/-init-/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder / init init EditTextBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/-init-/#init","text":"EditTextBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/before-production/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder / beforeProduction beforeProduction protected fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/before-production/#beforeproduction","text":"protected fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/font-color/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder / fontColor fontColor var fontColor: Long ?","title":"Font color"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/font-color/#fontcolor","text":"var fontColor: Long ?","title":"fontColor"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/font-size/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder / fontSize fontSize var fontSize: Int ?","title":"Font size"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/font-size/#fontsize","text":"var fontSize: Int ?","title":"fontSize"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/text/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder / text text var text: String ?","title":"Text"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/text/#text","text":"var text: String ?","title":"text"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/view/","text":"View-common / view.core.loaders.builders.input.textInput / EditTextBuilder / view view protected val view: EditText Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.input.text-input/-edit-text-builder/view/#view","text":"protected val view: EditText Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.layouts/","text":"View-common / view.core.loaders.builders.layouts Package view.core.loaders.builders.layouts Types GridLayoutBuilder open class GridLayoutBuilder : LayoutBuilder GridLayout LayoutBuilder abstract class LayoutBuilder L : Layout : AbstractViewBuilder L Base builder for layout builders. LinearLayoutBuilder open class LinearLayoutBuilder : LayoutBuilder LinearLayout RelativeLayoutBuilder open class RelativeLayoutBuilder : LayoutBuilder RelativeLayout Type Aliases RP typealias RP = Positioning","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/#package-viewcoreloadersbuilderslayouts","text":"","title":"Package view.core.loaders.builders.layouts"},{"location":"Documentation/View/view.core.loaders.builders.layouts/#types","text":"GridLayoutBuilder open class GridLayoutBuilder : LayoutBuilder GridLayout LayoutBuilder abstract class LayoutBuilder L : Layout : AbstractViewBuilder L Base builder for layout builders. LinearLayoutBuilder open class LinearLayoutBuilder : LayoutBuilder LinearLayout RelativeLayoutBuilder open class RelativeLayoutBuilder : LayoutBuilder RelativeLayout","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.layouts/#type-aliases","text":"RP typealias RP = Positioning","title":"Type Aliases"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-r-p/","text":"View-common / view.core.loaders.builders.layouts / RP RP typealias RP = Positioning","title":" r p"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-r-p/#rp","text":"typealias RP = Positioning","title":"RP"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder GridLayoutBuilder open class GridLayoutBuilder : LayoutBuilder GridLayout Types CellKeys class CellKeys : ViewKeys Constructors init GridLayoutBuilder() Properties columnCount var columnCount: Int ? horizontalSpace var horizontalSpace: Double ? rowCount var rowCount: Int ? verticalSpace var verticalSpace: Double ? view open val view: GridLayout The view instance that will have its properties set. Inherited Properties children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ? Functions addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout. beforeProduction open fun beforeProduction(): Unit Inherited Functions addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. Extension Properties children val GridLayoutBuilder .children: GridLayoutChildren","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#gridlayoutbuilder","text":"open class GridLayoutBuilder : LayoutBuilder GridLayout","title":"GridLayoutBuilder"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#types","text":"CellKeys class CellKeys : ViewKeys","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#constructors","text":"init GridLayoutBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#properties","text":"columnCount var columnCount: Int ? horizontalSpace var horizontalSpace: Double ? rowCount var rowCount: Int ? verticalSpace var verticalSpace: Double ? view open val view: GridLayout The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#inherited-properties","text":"children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#functions","text":"addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout. beforeProduction open fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#inherited-functions","text":"addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/#extension-properties","text":"children val GridLayoutBuilder .children: GridLayoutChildren","title":"Extension Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-init-/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / init init GridLayoutBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-init-/#init","text":"GridLayoutBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/add-children-to-views/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / addChildrenToViews addChildrenToViews protected open fun addChildrenToViews(): Unit Overrides LayoutBuilder.addChildrenToViews Adds the child views to the layout.","title":"Add children to views"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/add-children-to-views/#addchildrentoviews","text":"protected open fun addChildrenToViews(): Unit Overrides LayoutBuilder.addChildrenToViews Adds the child views to the layout.","title":"addChildrenToViews"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/before-production/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit Overrides LayoutBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit Overrides LayoutBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/column-count/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / columnCount columnCount var columnCount: Int ?","title":"Column count"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/column-count/#columncount","text":"var columnCount: Int ?","title":"columnCount"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/horizontal-space/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / horizontalSpace horizontalSpace var horizontalSpace: Double ?","title":"Horizontal space"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/horizontal-space/#horizontalspace","text":"var horizontalSpace: Double ?","title":"horizontalSpace"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/row-count/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / rowCount rowCount var rowCount: Int ?","title":"Row count"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/row-count/#rowcount","text":"var rowCount: Int ?","title":"rowCount"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/vertical-space/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / verticalSpace verticalSpace var verticalSpace: Double ?","title":"Vertical space"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/vertical-space/#verticalspace","text":"var verticalSpace: Double ?","title":"verticalSpace"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/view/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / view view protected open val view: GridLayout Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/view/#view","text":"protected open val view: GridLayout Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys CellKeys class CellKeys : ViewKeys Constructors init CellKeys() Properties colSpan var colSpan: Int ? column var column: Int horizontalAlignment var horizontalAlignment: HorizontalAlignment ? row var row: Int rowSpan var rowSpan: Int ? verticalAlignment var verticalAlignment: VerticalAlignment ? Inherited Properties keys open var keys: MutableMap String , Any ? The map that contains the property values","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/#cellkeys","text":"class CellKeys : ViewKeys","title":"CellKeys"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/#constructors","text":"init CellKeys()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/#properties","text":"colSpan var colSpan: Int ? column var column: Int horizontalAlignment var horizontalAlignment: HorizontalAlignment ? row var row: Int rowSpan var rowSpan: Int ? verticalAlignment var verticalAlignment: VerticalAlignment ?","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/#inherited-properties","text":"keys open var keys: MutableMap String , Any ? The map that contains the property values","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/-init-/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / init init CellKeys()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/-init-/#init","text":"CellKeys()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/col-span/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / colSpan colSpan var colSpan: Int ?","title":"Col span"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/col-span/#colspan","text":"var colSpan: Int ?","title":"colSpan"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/column/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / column column var column: Int","title":"Column"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/column/#column","text":"var column: Int","title":"column"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/horizontal-alignment/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / horizontalAlignment horizontalAlignment var horizontalAlignment: HorizontalAlignment ?","title":"Horizontal alignment"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/horizontal-alignment/#horizontalalignment","text":"var horizontalAlignment: HorizontalAlignment ?","title":"horizontalAlignment"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/row-span/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / rowSpan rowSpan var rowSpan: Int ?","title":"Row span"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/row-span/#rowspan","text":"var rowSpan: Int ?","title":"rowSpan"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/row/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / row row var row: Int","title":"Row"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/row/#row","text":"var row: Int","title":"row"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/vertical-alignment/","text":"View-common / view.core.loaders.builders.layouts / GridLayoutBuilder / CellKeys / verticalAlignment verticalAlignment var verticalAlignment: VerticalAlignment ?","title":"Vertical alignment"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-grid-layout-builder/-cell-keys/vertical-alignment/#verticalalignment","text":"var verticalAlignment: VerticalAlignment ?","title":"verticalAlignment"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder LayoutBuilder abstract class LayoutBuilder L : Layout : AbstractViewBuilder L Base builder for layout builders. This builder sets properties common to all layouts. Constructors init LayoutBuilder() Base builder for layout builders. Properties children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ? Inherited Properties androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? view abstract val view: V The view instance that will have its properties set. visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ? Functions addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout. beforeProduction open fun beforeProduction(): Unit Inherited Functions applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys. Inheritors GridLayoutBuilder open class GridLayoutBuilder : LayoutBuilder GridLayout LinearLayoutBuilder open class LinearLayoutBuilder : LayoutBuilder LinearLayout RelativeLayoutBuilder open class RelativeLayoutBuilder : LayoutBuilder RelativeLayout","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#layoutbuilder","text":"abstract class LayoutBuilder L : Layout : AbstractViewBuilder L Base builder for layout builders. This builder sets properties common to all layouts.","title":"LayoutBuilder"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#constructors","text":"init LayoutBuilder() Base builder for layout builders.","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#properties","text":"children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ?","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#inherited-properties","text":"androidExtras var androidExtras: Map String , Any ? backgroundColor var backgroundColor: Long ? conflictingKeys open val conflictingKeys: ERROR CLASS Contains sets of conflicting keys. disabled var disabled: Boolean ? hasShadow var hasShadow: Boolean ? height var height: String ? id var id: String ? ids val ids: ERROR CLASS iosExtras var iosExtras: Map String , Any ? marginBottom var marginBottom: Double ? marginEnd var marginEnd: Double ? marginHorizontal var marginHorizontal: Double ? marginStart var marginStart: Double ? marginTop var marginTop: Double ? marginVertical var marginVertical: Double ? paddingBottom var paddingBottom: Double ? paddingEnd var paddingEnd: Double ? paddingHorizontal var paddingHorizontal: Double ? paddingStart var paddingStart: Double ? paddingTop var paddingTop: Double ? paddingVertical var paddingVertical: Double ? view abstract val view: V The view instance that will have its properties set. visibility var visibility: Visibility ? webExtras var webExtras: Map String , Any ? width var width: String ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#functions","text":"addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout. beforeProduction open fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#inherited-functions","text":"applyKeys open fun applyKeys(keys: Map String , Any ): ViewBuilder V Edits the views based on the passed keys. build open fun build(): V Builds the view from the keys.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/#inheritors","text":"GridLayoutBuilder open class GridLayoutBuilder : LayoutBuilder GridLayout LinearLayoutBuilder open class LinearLayoutBuilder : LayoutBuilder LinearLayout RelativeLayoutBuilder open class RelativeLayoutBuilder : LayoutBuilder RelativeLayout","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/-init-/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / init init LayoutBuilder() Base builder for layout builders. This builder sets properties common to all layouts.","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/-init-/#init","text":"LayoutBuilder() Base builder for layout builders. This builder sets properties common to all layouts.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/add-child/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / addChild addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. Parameters child - The child view to add childKeys - Key-value pairs that contain information on the child's position in the layout","title":"Add child"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/add-child/#addchild","text":"fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built.","title":"addChild"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/add-child/#parameters","text":"child - The child view to add childKeys - Key-value pairs that contain information on the child's position in the layout","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/add-children-to-views/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / addChildrenToViews addChildrenToViews protected open fun addChildrenToViews(): Unit Adds the child views to the layout.","title":"Add children to views"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/add-children-to-views/#addchildrentoviews","text":"protected open fun addChildrenToViews(): Unit Adds the child views to the layout.","title":"addChildrenToViews"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/before-production/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit Overrides AbstractViewBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/children/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / children children protected val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information","title":"Children"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/children/#children","text":"protected val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information","title":"children"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/scroll-x/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / scrollX scrollX var scrollX: Boolean ?","title":"Scroll x"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/scroll-x/#scrollx","text":"var scrollX: Boolean ?","title":"scrollX"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/scroll-y/","text":"View-common / view.core.loaders.builders.layouts / LayoutBuilder / scrollY scrollY var scrollY: Boolean ?","title":"Scroll y"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-layout-builder/scroll-y/#scrolly","text":"var scrollY: Boolean ?","title":"scrollY"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/","text":"View-common / view.core.loaders.builders.layouts / LinearLayoutBuilder LinearLayoutBuilder open class LinearLayoutBuilder : LayoutBuilder LinearLayout Constructors init LinearLayoutBuilder() Properties direction var direction: Direction view open val view: LinearLayout The view instance that will have its properties set. Inherited Properties children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ? Functions beforeProduction open fun beforeProduction(): Unit Inherited Functions addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout. Extension Properties children val LinearLayoutBuilder .children: LayoutChildren","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#linearlayoutbuilder","text":"open class LinearLayoutBuilder : LayoutBuilder LinearLayout","title":"LinearLayoutBuilder"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#constructors","text":"init LinearLayoutBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#properties","text":"direction var direction: Direction view open val view: LinearLayout The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#inherited-properties","text":"children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#functions","text":"beforeProduction open fun beforeProduction(): Unit","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#inherited-functions","text":"addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/#extension-properties","text":"children val LinearLayoutBuilder .children: LayoutChildren","title":"Extension Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/-init-/","text":"View-common / view.core.loaders.builders.layouts / LinearLayoutBuilder / init init LinearLayoutBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/-init-/#init","text":"LinearLayoutBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/before-production/","text":"View-common / view.core.loaders.builders.layouts / LinearLayoutBuilder / beforeProduction beforeProduction protected open fun beforeProduction(): Unit Overrides LayoutBuilder.beforeProduction","title":"Before production"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/before-production/#beforeproduction","text":"protected open fun beforeProduction(): Unit Overrides LayoutBuilder.beforeProduction","title":"beforeProduction"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/direction/","text":"View-common / view.core.loaders.builders.layouts / LinearLayoutBuilder / direction direction var direction: Direction","title":"Direction"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/direction/#direction","text":"var direction: Direction","title":"direction"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/view/","text":"View-common / view.core.loaders.builders.layouts / LinearLayoutBuilder / view view protected open val view: LinearLayout Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-linear-layout-builder/view/#view","text":"protected open val view: LinearLayout Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder RelativeLayoutBuilder open class RelativeLayoutBuilder : LayoutBuilder RelativeLayout Types Child class Child : ViewKeys Constructors init RelativeLayoutBuilder() Properties view open val view: RelativeLayout The view instance that will have its properties set. Inherited Properties children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ? Functions addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout. Inherited Functions addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. beforeProduction open fun beforeProduction(): Unit Extension Properties children val RelativeLayoutBuilder .children: RelativeLayoutChildren","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#relativelayoutbuilder","text":"open class RelativeLayoutBuilder : LayoutBuilder RelativeLayout","title":"RelativeLayoutBuilder"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#types","text":"Child class Child : ViewKeys","title":"Types"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#constructors","text":"init RelativeLayoutBuilder()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#properties","text":"view open val view: RelativeLayout The view instance that will have its properties set.","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#inherited-properties","text":"children val children: MutableList ERROR CLASS View , Map String , Any ? A list of child views with their corresponding position information scrollX var scrollX: Boolean ? scrollY var scrollY: Boolean ?","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#functions","text":"addChildrenToViews open fun addChildrenToViews(): Unit Adds the child views to the layout.","title":"Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#inherited-functions","text":"addChild fun addChild(child: View , childKeys: Map String , Any ? = mapOf()): LayoutBuilder L Adds the child to the builder. The child will be added to the layout once it is built. beforeProduction open fun beforeProduction(): Unit","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/#extension-properties","text":"children val RelativeLayoutBuilder .children: RelativeLayoutChildren","title":"Extension Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-init-/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / init init RelativeLayoutBuilder()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-init-/#init","text":"RelativeLayoutBuilder()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/add-children-to-views/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / addChildrenToViews addChildrenToViews protected open fun addChildrenToViews(): Unit Overrides LayoutBuilder.addChildrenToViews Adds the child views to the layout.","title":"Add children to views"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/add-children-to-views/#addchildrentoviews","text":"protected open fun addChildrenToViews(): Unit Overrides LayoutBuilder.addChildrenToViews Adds the child views to the layout.","title":"addChildrenToViews"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/view/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / view view protected open val view: RelativeLayout Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"View"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/view/#view","text":"protected open val view: RelativeLayout Overrides AbstractViewBuilder.view The view instance that will have its properties set.","title":"view"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child Child class Child : ViewKeys Constructors init Child() Properties alignBottom var alignBottom: String ? alignEnd var alignEnd: String ? alignParentBottom var alignParentBottom: Boolean ? alignParentEnd var alignParentEnd: Boolean ? alignParentStart var alignParentStart: Boolean ? alignParentTop var alignParentTop: Boolean ? alignStart var alignStart: String ? alignTop var alignTop: String ? bottomOf var bottomOf: String ? center var center: Boolean ? centerHorizontal var centerHorizontal: Boolean ? centerVertical var centerVertical: Boolean ? endOf var endOf: String ? startOf var startOf: String ? topOf var topOf: String ? Inherited Properties keys open var keys: MutableMap String , Any ? The map that contains the property values","title":"Index"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/#child","text":"class Child : ViewKeys","title":"Child"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/#constructors","text":"init Child()","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/#properties","text":"alignBottom var alignBottom: String ? alignEnd var alignEnd: String ? alignParentBottom var alignParentBottom: Boolean ? alignParentEnd var alignParentEnd: Boolean ? alignParentStart var alignParentStart: Boolean ? alignParentTop var alignParentTop: Boolean ? alignStart var alignStart: String ? alignTop var alignTop: String ? bottomOf var bottomOf: String ? center var center: Boolean ? centerHorizontal var centerHorizontal: Boolean ? centerVertical var centerVertical: Boolean ? endOf var endOf: String ? startOf var startOf: String ? topOf var topOf: String ?","title":"Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/#inherited-properties","text":"keys open var keys: MutableMap String , Any ? The map that contains the property values","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/-init-/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / init init Child()","title":" init "},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/-init-/#init","text":"Child()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-bottom/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignBottom alignBottom var alignBottom: String ?","title":"Align bottom"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-bottom/#alignbottom","text":"var alignBottom: String ?","title":"alignBottom"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-end/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignEnd alignEnd var alignEnd: String ?","title":"Align end"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-end/#alignend","text":"var alignEnd: String ?","title":"alignEnd"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-bottom/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignParentBottom alignParentBottom var alignParentBottom: Boolean ?","title":"Align parent bottom"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-bottom/#alignparentbottom","text":"var alignParentBottom: Boolean ?","title":"alignParentBottom"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-end/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignParentEnd alignParentEnd var alignParentEnd: Boolean ?","title":"Align parent end"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-end/#alignparentend","text":"var alignParentEnd: Boolean ?","title":"alignParentEnd"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-start/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignParentStart alignParentStart var alignParentStart: Boolean ?","title":"Align parent start"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-start/#alignparentstart","text":"var alignParentStart: Boolean ?","title":"alignParentStart"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-top/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignParentTop alignParentTop var alignParentTop: Boolean ?","title":"Align parent top"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-parent-top/#alignparenttop","text":"var alignParentTop: Boolean ?","title":"alignParentTop"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-start/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignStart alignStart var alignStart: String ?","title":"Align start"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-start/#alignstart","text":"var alignStart: String ?","title":"alignStart"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-top/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / alignTop alignTop var alignTop: String ?","title":"Align top"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/align-top/#aligntop","text":"var alignTop: String ?","title":"alignTop"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/bottom-of/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / bottomOf bottomOf var bottomOf: String ?","title":"Bottom of"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/bottom-of/#bottomof","text":"var bottomOf: String ?","title":"bottomOf"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/center-horizontal/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / centerHorizontal centerHorizontal var centerHorizontal: Boolean ?","title":"Center horizontal"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/center-horizontal/#centerhorizontal","text":"var centerHorizontal: Boolean ?","title":"centerHorizontal"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/center-vertical/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / centerVertical centerVertical var centerVertical: Boolean ?","title":"Center vertical"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/center-vertical/#centervertical","text":"var centerVertical: Boolean ?","title":"centerVertical"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/center/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / center center var center: Boolean ?","title":"Center"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/center/#center","text":"var center: Boolean ?","title":"center"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/end-of/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / endOf endOf var endOf: String ?","title":"End of"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/end-of/#endof","text":"var endOf: String ?","title":"endOf"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/start-of/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / startOf startOf var startOf: String ?","title":"Start of"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/start-of/#startof","text":"var startOf: String ?","title":"startOf"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/top-of/","text":"View-common / view.core.loaders.builders.layouts / RelativeLayoutBuilder / Child / topOf topOf var topOf: String ?","title":"Top of"},{"location":"Documentation/View/view.core.loaders.builders.layouts/-relative-layout-builder/-child/top-of/#topof","text":"var topOf: String ?","title":"topOf"},{"location":"Documentation/View/view.core.loaders.view-tree/","text":"View-common / view.core.loaders.viewTree Package view.core.loaders.viewTree Exceptions IllegalViewTreeException class IllegalViewTreeException : RuntimeException This exception is thrown when an invalid view tree is encountered.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree/#package-viewcoreloadersviewtree","text":"","title":"Package view.core.loaders.viewTree"},{"location":"Documentation/View/view.core.loaders.view-tree/#exceptions","text":"IllegalViewTreeException class IllegalViewTreeException : RuntimeException This exception is thrown when an invalid view tree is encountered.","title":"Exceptions"},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/","text":"View-common / view.core.loaders.viewTree / IllegalViewTreeException IllegalViewTreeException class IllegalViewTreeException : RuntimeException This exception is thrown when an invalid view tree is encountered. A view tree can be invalid for numerous reasons such as having a view missing required properties or having a duplicate ID. Constructors init IllegalViewTreeException(missingKeys: Set String )``IllegalViewTreeException(message: String ) Initializes the exception with a message","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/#illegalviewtreeexception","text":"class IllegalViewTreeException : RuntimeException This exception is thrown when an invalid view tree is encountered. A view tree can be invalid for numerous reasons such as having a view missing required properties or having a duplicate ID.","title":"IllegalViewTreeException"},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/#constructors","text":"init IllegalViewTreeException(missingKeys: Set String )``IllegalViewTreeException(message: String ) Initializes the exception with a message","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/-init-/","text":"View-common / view.core.loaders.viewTree / IllegalViewTreeException / init init IllegalViewTreeException(missingKeys: Set String ) Parameters missingKeys - The missing keys that are required for building the view IllegalViewTreeException(message: String ) Initializes the exception with a message Parameters message - The reason for the tree being invalid Constructor Initializes the exception with a message","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/-init-/#init","text":"IllegalViewTreeException(missingKeys: Set String )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/-init-/#parameters","text":"missingKeys - The missing keys that are required for building the view IllegalViewTreeException(message: String ) Initializes the exception with a message","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree/-illegal-view-tree-exception/-init-/#parameters_1","text":"message - The reason for the tree being invalid Constructor Initializes the exception with a message","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/","text":"View-common / view.core.loaders.viewTree.nodes Package view.core.loaders.viewTree.nodes Types LayoutNode abstract class LayoutNode : Node Represents the serialized layout view. Node abstract class Node Represents the base class for all Node objects.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/#package-viewcoreloadersviewtreenodes","text":"","title":"Package view.core.loaders.viewTree.nodes"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/#types","text":"LayoutNode abstract class LayoutNode : Node Represents the serialized layout view. Node abstract class Node Represents the base class for all Node objects.","title":"Types"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/","text":"View-common / view.core.loaders.viewTree.nodes / LayoutNode LayoutNode abstract class LayoutNode : Node Represents the serialized layout view. Constructors init LayoutNode() Represents the serialized layout view. Properties children val children: List Node The node's child nodes Inherited Properties content abstract var content: Map String , Any The key-value pairs parsed Inheritors DeserializedLayoutNode class DeserializedLayoutNode : LayoutNode Holds the parsed key-value pairs of a layout view serialization. JsonLayoutNode class JsonLayoutNode : LayoutNode A node that parses key-value pairs from a Json layout view serialization.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/#layoutnode","text":"abstract class LayoutNode : Node Represents the serialized layout view.","title":"LayoutNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/#constructors","text":"init LayoutNode() Represents the serialized layout view.","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/#properties","text":"children val children: List Node The node's child nodes","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/#inherited-properties","text":"content abstract var content: Map String , Any The key-value pairs parsed","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/#inheritors","text":"DeserializedLayoutNode class DeserializedLayoutNode : LayoutNode Holds the parsed key-value pairs of a layout view serialization. JsonLayoutNode class JsonLayoutNode : LayoutNode A node that parses key-value pairs from a Json layout view serialization.","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/-init-/","text":"View-common / view.core.loaders.viewTree.nodes / LayoutNode / init init LayoutNode() Represents the serialized layout view.","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/-init-/#init","text":"LayoutNode() Represents the serialized layout view.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/children/","text":"View-common / view.core.loaders.viewTree.nodes / LayoutNode / children children val children: List Node The node's child nodes","title":"Children"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-layout-node/children/#children","text":"val children: List Node The node's child nodes","title":"children"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/","text":"View-common / view.core.loaders.viewTree.nodes / Node Node abstract class Node Represents the base class for all Node objects. A node object is an abstraction of a View serialization. It is a collection of parsed key-value pairs. Constructors init Node() Represents the base class for all Node objects. Properties content abstract var content: Map String , Any The key-value pairs parsed Inheritors DeserializedNode class DeserializedNode : Node Is a collection of parsed key-value pairs. JsonNode class JsonNode : Node A node that parses key-value pairs from a Json view serialization. LayoutNode abstract class LayoutNode : Node Represents the serialized layout view.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/#node","text":"abstract class Node Represents the base class for all Node objects. A node object is an abstraction of a View serialization. It is a collection of parsed key-value pairs.","title":"Node"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/#constructors","text":"init Node() Represents the base class for all Node objects.","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/#properties","text":"content abstract var content: Map String , Any The key-value pairs parsed","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/#inheritors","text":"DeserializedNode class DeserializedNode : Node Is a collection of parsed key-value pairs. JsonNode class JsonNode : Node A node that parses key-value pairs from a Json view serialization. LayoutNode abstract class LayoutNode : Node Represents the serialized layout view.","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/-init-/","text":"View-common / view.core.loaders.viewTree.nodes / Node / init init Node() Represents the base class for all Node objects. A node object is an abstraction of a View serialization. It is a collection of parsed key-value pairs.","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/-init-/#init","text":"Node() Represents the base class for all Node objects. A node object is an abstraction of a View serialization. It is a collection of parsed key-value pairs.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/content/","text":"View-common / view.core.loaders.viewTree.nodes / Node / content content abstract var content: Map String , Any The key-value pairs parsed","title":"Content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes/-node/content/#content","text":"abstract var content: Map String , Any The key-value pairs parsed","title":"content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode Package view.core.loaders.viewTree.nodes.deserializedNode Types DeserializedLayoutNode class DeserializedLayoutNode : LayoutNode Holds the parsed key-value pairs of a layout view serialization. DeserializedNode class DeserializedNode : Node Is a collection of parsed key-value pairs.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/#package-viewcoreloadersviewtreenodesdeserializednode","text":"","title":"Package view.core.loaders.viewTree.nodes.deserializedNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/#types","text":"DeserializedLayoutNode class DeserializedLayoutNode : LayoutNode Holds the parsed key-value pairs of a layout view serialization. DeserializedNode class DeserializedNode : Node Is a collection of parsed key-value pairs.","title":"Types"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode / DeserializedLayoutNode DeserializedLayoutNode class DeserializedLayoutNode : LayoutNode Holds the parsed key-value pairs of a layout view serialization. This node doesn't do any parsing, it just holds already parsed key-value pairs. Constructors init DeserializedLayoutNode(content: Map String , Any ) Initializes the node with parsed key-value pairs Properties content var content: Map String , Any The parsed key-value pairs Inherited Properties children val children: List Node The node's child nodes","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/#deserializedlayoutnode","text":"class DeserializedLayoutNode : LayoutNode Holds the parsed key-value pairs of a layout view serialization. This node doesn't do any parsing, it just holds already parsed key-value pairs.","title":"DeserializedLayoutNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/#constructors","text":"init DeserializedLayoutNode(content: Map String , Any ) Initializes the node with parsed key-value pairs","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/#properties","text":"content var content: Map String , Any The parsed key-value pairs","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/#inherited-properties","text":"children val children: List Node The node's child nodes","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/-init-/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode / DeserializedLayoutNode / init init DeserializedLayoutNode(content: Map String , Any ) Initializes the node with parsed key-value pairs Parameters content - The parsed key-value pairs Constructor Initializes the node with parsed key-value pairs","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/-init-/#init","text":"DeserializedLayoutNode(content: Map String , Any ) Initializes the node with parsed key-value pairs","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/-init-/#parameters","text":"content - The parsed key-value pairs Constructor Initializes the node with parsed key-value pairs","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/content/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode / DeserializedLayoutNode / content content var content: Map String , Any Overrides Node.content The parsed key-value pairs","title":"Content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-layout-node/content/#content","text":"var content: Map String , Any Overrides Node.content The parsed key-value pairs","title":"content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode / DeserializedNode DeserializedNode class DeserializedNode : Node Is a collection of parsed key-value pairs. This node doesn't do any parsing, it just holds already parsed values. Constructors init DeserializedNode(content: Map String , Any ) Initializes the node with the parsed key-value pairs Properties content var content: Map String , Any The parsed key-value pairs","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/#deserializednode","text":"class DeserializedNode : Node Is a collection of parsed key-value pairs. This node doesn't do any parsing, it just holds already parsed values.","title":"DeserializedNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/#constructors","text":"init DeserializedNode(content: Map String , Any ) Initializes the node with the parsed key-value pairs","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/#properties","text":"content var content: Map String , Any The parsed key-value pairs","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/-init-/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode / DeserializedNode / init init DeserializedNode(content: Map String , Any ) Initializes the node with the parsed key-value pairs Parameters content - The parsed key-value pairs Constructor Initializes the node with the parsed key-value pairs","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/-init-/#init","text":"DeserializedNode(content: Map String , Any ) Initializes the node with the parsed key-value pairs","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/-init-/#parameters","text":"content - The parsed key-value pairs Constructor Initializes the node with the parsed key-value pairs","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/content/","text":"View-common / view.core.loaders.viewTree.nodes.deserializedNode / DeserializedNode / content content var content: Map String , Any Overrides Node.content The parsed key-value pairs","title":"Content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.deserialized-node/-deserialized-node/content/#content","text":"var content: Map String , Any Overrides Node.content The parsed key-value pairs","title":"content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode Package view.core.loaders.viewTree.nodes.jsonNode Types JsonLayoutNode class JsonLayoutNode : LayoutNode A node that parses key-value pairs from a Json layout view serialization. JsonNode class JsonNode : Node A node that parses key-value pairs from a Json view serialization.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/#package-viewcoreloadersviewtreenodesjsonnode","text":"","title":"Package view.core.loaders.viewTree.nodes.jsonNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/#types","text":"JsonLayoutNode class JsonLayoutNode : LayoutNode A node that parses key-value pairs from a Json layout view serialization. JsonNode class JsonNode : Node A node that parses key-value pairs from a Json view serialization.","title":"Types"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode / JsonLayoutNode JsonLayoutNode class JsonLayoutNode : LayoutNode A node that parses key-value pairs from a Json layout view serialization. Constructors init JsonLayoutNode(jsonString: String ) Initializes the node with a JSON string Properties content var content: Map String , Any The key-value pairs parsed Inherited Properties children val children: List Node The node's child nodes","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/#jsonlayoutnode","text":"class JsonLayoutNode : LayoutNode A node that parses key-value pairs from a Json layout view serialization.","title":"JsonLayoutNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/#constructors","text":"init JsonLayoutNode(jsonString: String ) Initializes the node with a JSON string","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/#properties","text":"content var content: Map String , Any The key-value pairs parsed","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/#inherited-properties","text":"children val children: List Node The node's child nodes","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/-init-/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode / JsonLayoutNode / init init JsonLayoutNode(jsonString: String ) Initializes the node with a JSON string Parameters jsonString - The serialized layout in a JSON format Constructor Initializes the node with a JSON string","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/-init-/#init","text":"JsonLayoutNode(jsonString: String ) Initializes the node with a JSON string","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/-init-/#parameters","text":"jsonString - The serialized layout in a JSON format Constructor Initializes the node with a JSON string","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/content/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode / JsonLayoutNode / content content var content: Map String , Any Overrides Node.content The key-value pairs parsed","title":"Content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-layout-node/content/#content","text":"var content: Map String , Any Overrides Node.content The key-value pairs parsed","title":"content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode / JsonNode JsonNode class JsonNode : Node A node that parses key-value pairs from a Json view serialization. Constructors init JsonNode(jsonString: String ) Initializes the node with a JSON string Properties content var content: Map String , Any The key-value pairs parsed","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/#jsonnode","text":"class JsonNode : Node A node that parses key-value pairs from a Json view serialization.","title":"JsonNode"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/#constructors","text":"init JsonNode(jsonString: String ) Initializes the node with a JSON string","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/#properties","text":"content var content: Map String , Any The key-value pairs parsed","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/-init-/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode / JsonNode / init init JsonNode(jsonString: String ) Initializes the node with a JSON string Parameters jsonString - The serialized view in JSON format Constructor Initializes the node with a JSON string","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/-init-/#init","text":"JsonNode(jsonString: String ) Initializes the node with a JSON string","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/-init-/#parameters","text":"jsonString - The serialized view in JSON format Constructor Initializes the node with a JSON string","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/content/","text":"View-common / view.core.loaders.viewTree.nodes.jsonNode / JsonNode / content content var content: Map String , Any Overrides Node.content The key-value pairs parsed","title":"Content"},{"location":"Documentation/View/view.core.loaders.view-tree.nodes.json-node/-json-node/content/#content","text":"var content: Map String , Any Overrides Node.content The key-value pairs parsed","title":"content"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/","text":"View-common / view.core.loaders.viewTree.treeLoaders Package view.core.loaders.viewTree.treeLoaders Types JsonTreeLoader class JsonTreeLoader : SerializedViewTreeLoader A tree loader that loads view trees from JSON. SerializedViewTreeLoader open class SerializedViewTreeLoader : ViewTreeLoader Base class for tree loaders that load view trees from serialized formats. ViewTreeLoader interface ViewTreeLoader Defines an interface for view tree loaders","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/#package-viewcoreloadersviewtreetreeloaders","text":"","title":"Package view.core.loaders.viewTree.treeLoaders"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/#types","text":"JsonTreeLoader class JsonTreeLoader : SerializedViewTreeLoader A tree loader that loads view trees from JSON. SerializedViewTreeLoader open class SerializedViewTreeLoader : ViewTreeLoader Base class for tree loaders that load view trees from serialized formats. ViewTreeLoader interface ViewTreeLoader Defines an interface for view tree loaders","title":"Types"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/","text":"View-common / view.core.loaders.viewTree.treeLoaders / JsonTreeLoader JsonTreeLoader class JsonTreeLoader : SerializedViewTreeLoader A tree loader that loads view trees from JSON. Constructors init JsonTreeLoader(jsonString: String ) Initializes the loader with a JSON string Inherited Properties rootNode val rootNode: LayoutNode The root of the view tree Inherited Functions loadViewTree open fun loadViewTree(): Layout Loads the view tree","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/#jsontreeloader","text":"class JsonTreeLoader : SerializedViewTreeLoader A tree loader that loads view trees from JSON.","title":"JsonTreeLoader"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/#constructors","text":"init JsonTreeLoader(jsonString: String ) Initializes the loader with a JSON string","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/#inherited-properties","text":"rootNode val rootNode: LayoutNode The root of the view tree","title":"Inherited Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/#inherited-functions","text":"loadViewTree open fun loadViewTree(): Layout Loads the view tree","title":"Inherited Functions"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/-init-/","text":"View-common / view.core.loaders.viewTree.treeLoaders / JsonTreeLoader / init init JsonTreeLoader(jsonString: String ) Initializes the loader with a JSON string Parameters jsonString - The view tree JSON string Constructor Initializes the loader with a JSON string","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/-init-/#init","text":"JsonTreeLoader(jsonString: String ) Initializes the loader with a JSON string","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-json-tree-loader/-init-/#parameters","text":"jsonString - The view tree JSON string Constructor Initializes the loader with a JSON string","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/","text":"View-common / view.core.loaders.viewTree.treeLoaders / SerializedViewTreeLoader SerializedViewTreeLoader open class SerializedViewTreeLoader : ViewTreeLoader Base class for tree loaders that load view trees from serialized formats. Constructors init SerializedViewTreeLoader(rootNode: LayoutNode ) Initializes the object with a root node Properties rootNode val rootNode: LayoutNode The root of the view tree Functions loadViewTree open fun loadViewTree(): Layout Loads the view tree Inheritors JsonTreeLoader class JsonTreeLoader : SerializedViewTreeLoader A tree loader that loads view trees from JSON.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/#serializedviewtreeloader","text":"open class SerializedViewTreeLoader : ViewTreeLoader Base class for tree loaders that load view trees from serialized formats.","title":"SerializedViewTreeLoader"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/#constructors","text":"init SerializedViewTreeLoader(rootNode: LayoutNode ) Initializes the object with a root node","title":"Constructors"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/#properties","text":"rootNode val rootNode: LayoutNode The root of the view tree","title":"Properties"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/#functions","text":"loadViewTree open fun loadViewTree(): Layout Loads the view tree","title":"Functions"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/#inheritors","text":"JsonTreeLoader class JsonTreeLoader : SerializedViewTreeLoader A tree loader that loads view trees from JSON.","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/-init-/","text":"View-common / view.core.loaders.viewTree.treeLoaders / SerializedViewTreeLoader / init init SerializedViewTreeLoader(rootNode: LayoutNode ) Initializes the object with a root node Parameters rootNode - The root of the view tree Constructor Initializes the object with a root node","title":" init "},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/-init-/#init","text":"SerializedViewTreeLoader(rootNode: LayoutNode ) Initializes the object with a root node","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/-init-/#parameters","text":"rootNode - The root of the view tree Constructor Initializes the object with a root node","title":"Parameters"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/load-view-tree/","text":"View-common / view.core.loaders.viewTree.treeLoaders / SerializedViewTreeLoader / loadViewTree loadViewTree open fun loadViewTree(): Layout Overrides ViewTreeLoader.loadViewTree Loads the view tree Return The root of the loaded view tree","title":"Load view tree"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/load-view-tree/#loadviewtree","text":"open fun loadViewTree(): Layout Overrides ViewTreeLoader.loadViewTree Loads the view tree Return The root of the loaded view tree","title":"loadViewTree"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/root-node/","text":"View-common / view.core.loaders.viewTree.treeLoaders / SerializedViewTreeLoader / rootNode rootNode protected val rootNode: LayoutNode The root of the view tree","title":"Root node"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-serialized-view-tree-loader/root-node/#rootnode","text":"protected val rootNode: LayoutNode The root of the view tree","title":"rootNode"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-view-tree-loader/","text":"View-common / view.core.loaders.viewTree.treeLoaders / ViewTreeLoader ViewTreeLoader interface ViewTreeLoader Defines an interface for view tree loaders Functions loadViewTree abstract fun loadViewTree(): Layout Loads the view tree Inheritors DslViewTreeLoader class DslViewTreeLoader : ViewTreeLoader SerializedViewTreeLoader open class SerializedViewTreeLoader : ViewTreeLoader Base class for tree loaders that load view trees from serialized formats.","title":"Index"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-view-tree-loader/#viewtreeloader","text":"interface ViewTreeLoader Defines an interface for view tree loaders","title":"ViewTreeLoader"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-view-tree-loader/#functions","text":"loadViewTree abstract fun loadViewTree(): Layout Loads the view tree","title":"Functions"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-view-tree-loader/#inheritors","text":"DslViewTreeLoader class DslViewTreeLoader : ViewTreeLoader SerializedViewTreeLoader open class SerializedViewTreeLoader : ViewTreeLoader Base class for tree loaders that load view trees from serialized formats.","title":"Inheritors"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-view-tree-loader/load-view-tree/","text":"View-common / view.core.loaders.viewTree.treeLoaders / ViewTreeLoader / loadViewTree loadViewTree abstract fun loadViewTree(): Layout Loads the view tree Return The root of the loaded view tree","title":"Load view tree"},{"location":"Documentation/View/view.core.loaders.view-tree.tree-loaders/-view-tree-loader/load-view-tree/#loadviewtree","text":"abstract fun loadViewTree(): Layout Loads the view tree Return The root of the loaded view tree","title":"loadViewTree"},{"location":"Documentation/View/view.core.renderers/","text":"View-common / view.core.renderers Package view.core.renderers Types ViewTreeRenderer interface ViewTreeRenderer Defines an interface for view tree renderers.","title":"Index"},{"location":"Documentation/View/view.core.renderers/#package-viewcorerenderers","text":"","title":"Package view.core.renderers"},{"location":"Documentation/View/view.core.renderers/#types","text":"ViewTreeRenderer interface ViewTreeRenderer Defines an interface for view tree renderers.","title":"Types"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/","text":"View-common / view.core.renderers / ViewTreeRenderer ViewTreeRenderer interface ViewTreeRenderer Defines an interface for view tree renderers. Functions invalidate abstract fun invalidate(view: View ): Unit Re-renders the passed view. setRoot abstract fun setRoot(layout: Layout ): Unit Sets a layout as the root of the view tree.","title":"Index"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/#viewtreerenderer","text":"interface ViewTreeRenderer Defines an interface for view tree renderers.","title":"ViewTreeRenderer"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/#functions","text":"invalidate abstract fun invalidate(view: View ): Unit Re-renders the passed view. setRoot abstract fun setRoot(layout: Layout ): Unit Sets a layout as the root of the view tree.","title":"Functions"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/invalidate/","text":"View-common / view.core.renderers / ViewTreeRenderer / invalidate invalidate abstract fun invalidate(view: View ): Unit Re-renders the passed view. Parameters view - The view to re-render","title":"Invalidate"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/invalidate/#invalidate","text":"abstract fun invalidate(view: View ): Unit Re-renders the passed view.","title":"invalidate"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/invalidate/#parameters","text":"view - The view to re-render","title":"Parameters"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/set-root/","text":"View-common / view.core.renderers / ViewTreeRenderer / setRoot setRoot abstract fun setRoot(layout: Layout ): Unit Sets a layout as the root of the view tree. Parameters layout - The root of the view tree","title":"Set root"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/set-root/#setroot","text":"abstract fun setRoot(layout: Layout ): Unit Sets a layout as the root of the view tree.","title":"setRoot"},{"location":"Documentation/View/view.core.renderers/-view-tree-renderer/set-root/#parameters","text":"layout - The root of the view tree","title":"Parameters"},{"location":"Documentation/View/view.core.views/","text":"View-common / view.core.views Package view.core.views This package contains all necessary classes needed to define the layout of the UI. The key components of this package are: View Classes: Which define UI components View Property Delegates: Contain the logic for validating property values and updating the renderer whenever a view is updated Animations: Animate views Themes: Which speicifies the appearance of views Types Dimension object Dimension The Dimension object contains utility methods for classifying values that represent dimensions such as a view's width, height and margins. Theme open class Theme A theme specifies the appearance of View s. View abstract class View This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. Type Aliases PreProcessor typealias PreProcessor = ( Any ) - Unit A preprocessor is a function that edits specific views before rendering.","title":"Index"},{"location":"Documentation/View/view.core.views/#package-viewcoreviews","text":"This package contains all necessary classes needed to define the layout of the UI. The key components of this package are: View Classes: Which define UI components View Property Delegates: Contain the logic for validating property values and updating the renderer whenever a view is updated Animations: Animate views Themes: Which speicifies the appearance of views","title":"Package view.core.views"},{"location":"Documentation/View/view.core.views/#types","text":"Dimension object Dimension The Dimension object contains utility methods for classifying values that represent dimensions such as a view's width, height and margins. Theme open class Theme A theme specifies the appearance of View s. View abstract class View This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views.","title":"Types"},{"location":"Documentation/View/view.core.views/#type-aliases","text":"PreProcessor typealias PreProcessor = ( Any ) - Unit A preprocessor is a function that edits specific views before rendering.","title":"Type Aliases"},{"location":"Documentation/View/view.core.views/-pre-processor/","text":"View-common / view.core.views / PreProcessor PreProcessor typealias PreProcessor = ( Any ) - Unit A preprocessor is a function that edits specific views before rendering.","title":" pre processor"},{"location":"Documentation/View/view.core.views/-pre-processor/#preprocessor","text":"typealias PreProcessor = ( Any ) - Unit A preprocessor is a function that edits specific views before rendering.","title":"PreProcessor"},{"location":"Documentation/View/view.core.views/-dimension/","text":"View-common / view.core.views / Dimension Dimension object Dimension The Dimension object contains utility methods for classifying values that represent dimensions such as a view's width, height and margins. Each dimension value is mapped to a dimension type that specifies how the ViewTreeRenderer should interpret the value. For more information on available dimension types, please see Dimension.Type . See Also Dimension.Type Types Type enum class Type Represents the type of the dimension value. Functions type fun type(value: Double ): Type Returns the type that corresponds to the dimension value. value fun value(type: Type , value: Double ? = null): Double Validates that the passed value corresponds to the passed dimension type.","title":"Index"},{"location":"Documentation/View/view.core.views/-dimension/#dimension","text":"object Dimension The Dimension object contains utility methods for classifying values that represent dimensions such as a view's width, height and margins. Each dimension value is mapped to a dimension type that specifies how the ViewTreeRenderer should interpret the value. For more information on available dimension types, please see Dimension.Type . See Also Dimension.Type","title":"Dimension"},{"location":"Documentation/View/view.core.views/-dimension/#types","text":"Type enum class Type Represents the type of the dimension value.","title":"Types"},{"location":"Documentation/View/view.core.views/-dimension/#functions","text":"type fun type(value: Double ): Type Returns the type that corresponds to the dimension value. value fun value(type: Type , value: Double ? = null): Double Validates that the passed value corresponds to the passed dimension type.","title":"Functions"},{"location":"Documentation/View/view.core.views/-dimension/type/","text":"View-common / view.core.views / Dimension / type type fun type(value: Double ): Type Returns the type that corresponds to the dimension value. Parameters value - The dimension value Exceptions IllegalArgumentException - If the value does not correspond to any dimension type Return The dimension type that corresponds to the value.","title":"Type"},{"location":"Documentation/View/view.core.views/-dimension/type/#type","text":"fun type(value: Double ): Type Returns the type that corresponds to the dimension value.","title":"type"},{"location":"Documentation/View/view.core.views/-dimension/type/#parameters","text":"value - The dimension value","title":"Parameters"},{"location":"Documentation/View/view.core.views/-dimension/type/#exceptions","text":"IllegalArgumentException - If the value does not correspond to any dimension type Return The dimension type that corresponds to the value.","title":"Exceptions"},{"location":"Documentation/View/view.core.views/-dimension/value/","text":"View-common / view.core.views / Dimension / value value fun value(type: Type , value: Double ? = null): Double Validates that the passed value corresponds to the passed dimension type. Parameters type - The dimension type that the value should belong to. value - The value to be checked. Exceptions IllegalArgumentException - If the passed value doesn't correspond to the passed dimension type. Return The passed value or -1.0 if Dimension.Type.WRAP_CONTENT was passed.","title":"Value"},{"location":"Documentation/View/view.core.views/-dimension/value/#value","text":"fun value(type: Type , value: Double ? = null): Double Validates that the passed value corresponds to the passed dimension type.","title":"value"},{"location":"Documentation/View/view.core.views/-dimension/value/#parameters","text":"type - The dimension type that the value should belong to. value - The value to be checked.","title":"Parameters"},{"location":"Documentation/View/view.core.views/-dimension/value/#exceptions","text":"IllegalArgumentException - If the passed value doesn't correspond to the passed dimension type. Return The passed value or -1.0 if Dimension.Type.WRAP_CONTENT was passed.","title":"Exceptions"},{"location":"Documentation/View/view.core.views/-dimension/-type/","text":"View-common / view.core.views / Dimension / Type Type enum class Type Represents the type of the dimension value. Enum Values WRAP_CONTENT Forces the view's width/height to expand just enough to fit the width/height of it's content. RELATIVE Sets the dimension as a percentage of the view's parent dimension. EXPLICIT Sets the value of the dimension explicitly as is.","title":"Index"},{"location":"Documentation/View/view.core.views/-dimension/-type/#type","text":"enum class Type Represents the type of the dimension value.","title":"Type"},{"location":"Documentation/View/view.core.views/-dimension/-type/#enum-values","text":"WRAP_CONTENT Forces the view's width/height to expand just enough to fit the width/height of it's content. RELATIVE Sets the dimension as a percentage of the view's parent dimension. EXPLICIT Sets the value of the dimension explicitly as is.","title":"Enum Values"},{"location":"Documentation/View/view.core.views/-dimension/-type/-e-x-p-l-i-c-i-t/","text":"View-common / view.core.views / Dimension / Type / EXPLICIT EXPLICIT EXPLICIT Sets the value of the dimension explicitly as is. The value for this dimension should be greater than one. Note that this value is unit-less, it is up to the ViewTreeRenderer to specify a unit.","title":" e x p l i c i t"},{"location":"Documentation/View/view.core.views/-dimension/-type/-e-x-p-l-i-c-i-t/#explicit","text":"EXPLICIT Sets the value of the dimension explicitly as is. The value for this dimension should be greater than one. Note that this value is unit-less, it is up to the ViewTreeRenderer to specify a unit.","title":"EXPLICIT"},{"location":"Documentation/View/view.core.views/-dimension/-type/-r-e-l-a-t-i-v-e/","text":"View-common / view.core.views / Dimension / Type / RELATIVE RELATIVE RELATIVE Sets the dimension as a percentage of the view's parent dimension. The value for this dimension should be in the range 0,1 . For example, a view having a value of 0.5 for it's width property will have a width half as wide as its parent.","title":" r e l a t i v e"},{"location":"Documentation/View/view.core.views/-dimension/-type/-r-e-l-a-t-i-v-e/#relative","text":"RELATIVE Sets the dimension as a percentage of the view's parent dimension. The value for this dimension should be in the range 0,1 . For example, a view having a value of 0.5 for it's width property will have a width half as wide as its parent.","title":"RELATIVE"},{"location":"Documentation/View/view.core.views/-dimension/-type/-w-r-a-p_-c-o-n-t-e-n-t/","text":"View-common / view.core.views / Dimension / Type / WRAP_CONTENT WRAP_CONTENT WRAP_CONTENT Forces the view's width/height to expand just enough to fit the width/height of it's content. The value for this dimension should be -1.0.","title":" w r a p  c o n t e n t"},{"location":"Documentation/View/view.core.views/-dimension/-type/-w-r-a-p_-c-o-n-t-e-n-t/#wrap_content","text":"WRAP_CONTENT Forces the view's width/height to expand just enough to fit the width/height of it's content. The value for this dimension should be -1.0.","title":"WRAP_CONTENT"},{"location":"Documentation/View/view.core.views/-theme/","text":"View-common / view.core.views / Theme Theme open class Theme A theme specifies the appearance of View s. A theme is just a collection of PreProcessor s that get applied to a View before it gets rendered. Constructors init Theme() A theme specifies the appearance of View s. Functions applyTo fun applyTo(obj: Any ): Unit Applies the theme to a View . register fun register(klass: KClass * , preProcessor: PreProcessor ): Unit Adds a preprocessor to the theme.","title":"Index"},{"location":"Documentation/View/view.core.views/-theme/#theme","text":"open class Theme A theme specifies the appearance of View s. A theme is just a collection of PreProcessor s that get applied to a View before it gets rendered.","title":"Theme"},{"location":"Documentation/View/view.core.views/-theme/#constructors","text":"init Theme() A theme specifies the appearance of View s.","title":"Constructors"},{"location":"Documentation/View/view.core.views/-theme/#functions","text":"applyTo fun applyTo(obj: Any ): Unit Applies the theme to a View . register fun register(klass: KClass * , preProcessor: PreProcessor ): Unit Adds a preprocessor to the theme.","title":"Functions"},{"location":"Documentation/View/view.core.views/-theme/-init-/","text":"View-common / view.core.views / Theme / init init Theme() A theme specifies the appearance of View s. A theme is just a collection of PreProcessor s that get applied to a View before it gets rendered.","title":" init "},{"location":"Documentation/View/view.core.views/-theme/-init-/#init","text":"Theme() A theme specifies the appearance of View s. A theme is just a collection of PreProcessor s that get applied to a View before it gets rendered.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views/-theme/apply-to/","text":"View-common / view.core.views / Theme / applyTo applyTo fun applyTo(obj: Any ): Unit Applies the theme to a View . Parameters obj - The object (a subtype of View ) to apply the theme to.","title":"Apply to"},{"location":"Documentation/View/view.core.views/-theme/apply-to/#applyto","text":"fun applyTo(obj: Any ): Unit Applies the theme to a View .","title":"applyTo"},{"location":"Documentation/View/view.core.views/-theme/apply-to/#parameters","text":"obj - The object (a subtype of View ) to apply the theme to.","title":"Parameters"},{"location":"Documentation/View/view.core.views/-theme/register/","text":"View-common / view.core.views / Theme / register register protected fun register(klass: KClass * , preProcessor: PreProcessor ): Unit Adds a preprocessor to the theme.","title":"Register"},{"location":"Documentation/View/view.core.views/-theme/register/#register","text":"protected fun register(klass: KClass * , preProcessor: PreProcessor ): Unit Adds a preprocessor to the theme.","title":"register"},{"location":"Documentation/View/view.core.views/-view/","text":"View-common / view.core.views / View View abstract class View This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. A View can be created using code, specified using the View DSL or loaded from aserialized format . All Views to be rendered are arranged in a tree-like hierarchy where each non-leaf node is a subclass of Layout . Once a View Tree is created, it can be rendered using a platform specific ViewTreeRenderer . Most view properties are implemented using custom property delegates that take care of validation and updating the ViewTreeRenderer . See Also view.core.views.propertyDelegates view.utils.validators Types Visibility enum class Visibility This enum describes the view's visibility status. Constructors init View() This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Inheritors BinaryStateInput abstract class BinaryStateInput : View This is the base class for views that represent input UI components with an on/off state. Button open class Button : View Represents a button. EditText open class EditText : View Represents an editable text field. ImageView open class ImageView : View This view displays an image on the UI. Layout abstract class Layout : View This is the base class for layout views, which are views that contain other views. TextView open class TextView : View Represents a block of text on the UI.","title":"Index"},{"location":"Documentation/View/view.core.views/-view/#view","text":"abstract class View This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. A View can be created using code, specified using the View DSL or loaded from aserialized format . All Views to be rendered are arranged in a tree-like hierarchy where each non-leaf node is a subclass of Layout . Once a View Tree is created, it can be rendered using a platform specific ViewTreeRenderer . Most view properties are implemented using custom property delegates that take care of validation and updating the ViewTreeRenderer . See Also view.core.views.propertyDelegates view.utils.validators","title":"View"},{"location":"Documentation/View/view.core.views/-view/#types","text":"Visibility enum class Visibility This enum describes the view's visibility status.","title":"Types"},{"location":"Documentation/View/view.core.views/-view/#constructors","text":"init View() This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views.","title":"Constructors"},{"location":"Documentation/View/view.core.views/-view/#properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Properties"},{"location":"Documentation/View/view.core.views/-view/#inheritors","text":"BinaryStateInput abstract class BinaryStateInput : View This is the base class for views that represent input UI components with an on/off state. Button open class Button : View Represents a button. EditText open class EditText : View Represents an editable text field. ImageView open class ImageView : View This view displays an image on the UI. Layout abstract class Layout : View This is the base class for layout views, which are views that contain other views. TextView open class TextView : View Represents a block of text on the UI.","title":"Inheritors"},{"location":"Documentation/View/view.core.views/-view/-init-/","text":"View-common / view.core.views / View / init init View() This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. A View can be created using code, specified using the View DSL or loaded from aserialized format . All Views to be rendered are arranged in a tree-like hierarchy where each non-leaf node is a subclass of Layout . Once a View Tree is created, it can be rendered using a platform specific ViewTreeRenderer . Most view properties are implemented using custom property delegates that take care of validation and updating the ViewTreeRenderer . See Also view.core.views.propertyDelegates view.utils.validators","title":" init "},{"location":"Documentation/View/view.core.views/-view/-init-/#init","text":"View() This class represents a user interface component and acts as a base class for all other Views. It contains some basic properties common to all Views. A View can be created using code, specified using the View DSL or loaded from aserialized format . All Views to be rendered are arranged in a tree-like hierarchy where each non-leaf node is a subclass of Layout . Once a View Tree is created, it can be rendered using a platform specific ViewTreeRenderer . Most view properties are implemented using custom property delegates that take care of validation and updating the ViewTreeRenderer . See Also view.core.views.propertyDelegates view.utils.validators","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views/-view/android-extras/","text":"View-common / view.core.views / View / androidExtras androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer .","title":"Android extras"},{"location":"Documentation/View/view.core.views/-view/android-extras/#androidextras","text":"var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer .","title":"androidExtras"},{"location":"Documentation/View/view.core.views/-view/background-color/","text":"View-common / view.core.views / View / backgroundColor backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. Getter Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. Setter Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color.","title":"Background color"},{"location":"Documentation/View/view.core.views/-view/background-color/#backgroundcolor","text":"var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. Getter Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. Setter Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color.","title":"backgroundColor"},{"location":"Documentation/View/view.core.views/-view/disabled/","text":"View-common / view.core.views / View / disabled disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. Getter Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. Setter Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events.","title":"Disabled"},{"location":"Documentation/View/view.core.views/-view/disabled/#disabled","text":"var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. Getter Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. Setter Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events.","title":"disabled"},{"location":"Documentation/View/view.core.views/-view/height/","text":"View-common / view.core.views / View / height height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. See Also Dimension.Type Getter Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Getter See Also Dimension.Type Setter Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Setter See Also Dimension.Type","title":"Height"},{"location":"Documentation/View/view.core.views/-view/height/#height","text":"var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. See Also Dimension.Type Getter Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Getter See Also Dimension.Type Setter Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Setter See Also Dimension.Type","title":"height"},{"location":"Documentation/View/view.core.views/-view/id/","text":"View-common / view.core.views / View / id id var id: Int A unique integer value that identifies a view instance. Getter A unique integer value that identifies a view instance. Setter A unique integer value that identifies a view instance.","title":"Id"},{"location":"Documentation/View/view.core.views/-view/id/#id","text":"var id: Int A unique integer value that identifies a view instance. Getter A unique integer value that identifies a view instance. Setter A unique integer value that identifies a view instance.","title":"id"},{"location":"Documentation/View/view.core.views/-view/ios-extras/","text":"View-common / view.core.views / View / iosExtras iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer .","title":"Ios extras"},{"location":"Documentation/View/view.core.views/-view/ios-extras/#iosextras","text":"var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer .","title":"iosExtras"},{"location":"Documentation/View/view.core.views/-view/margin-bottom/","text":"View-common / view.core.views / View / marginBottom marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. Getter Specifies the value of the bottom margin of the view. Setter Specifies the value of the bottom margin of the view.","title":"Margin bottom"},{"location":"Documentation/View/view.core.views/-view/margin-bottom/#marginbottom","text":"var marginBottom: Double ? Specifies the value of the bottom margin of the view. Getter Specifies the value of the bottom margin of the view. Setter Specifies the value of the bottom margin of the view.","title":"marginBottom"},{"location":"Documentation/View/view.core.views/-view/margin-end/","text":"View-common / view.core.views / View / marginEnd marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. Getter Specifies the values of the margin at the end of the view. Setter Specifies the values of the margin at the end of the view.","title":"Margin end"},{"location":"Documentation/View/view.core.views/-view/margin-end/#marginend","text":"var marginEnd: Double ? Specifies the values of the margin at the end of the view. Getter Specifies the values of the margin at the end of the view. Setter Specifies the values of the margin at the end of the view.","title":"marginEnd"},{"location":"Documentation/View/view.core.views/-view/margin-start/","text":"View-common / view.core.views / View / marginStart marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. Getter Specifies the values of the margin ath the beginning of the view. Setter Specifies the values of the margin ath the beginning of the view.","title":"Margin start"},{"location":"Documentation/View/view.core.views/-view/margin-start/#marginstart","text":"var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. Getter Specifies the values of the margin ath the beginning of the view. Setter Specifies the values of the margin ath the beginning of the view.","title":"marginStart"},{"location":"Documentation/View/view.core.views/-view/margin-top/","text":"View-common / view.core.views / View / marginTop marginTop var marginTop: Double ? Specifies the value of the top margin of the view. Getter Specifies the value of the top margin of the view. Setter Specifies the value of the top margin of the view.","title":"Margin top"},{"location":"Documentation/View/view.core.views/-view/margin-top/#margintop","text":"var marginTop: Double ? Specifies the value of the top margin of the view. Getter Specifies the value of the top margin of the view. Setter Specifies the value of the top margin of the view.","title":"marginTop"},{"location":"Documentation/View/view.core.views/-view/name/","text":"View-common / view.core.views / View / name name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class.","title":"Name"},{"location":"Documentation/View/view.core.views/-view/name/#name","text":"val name: String A name associated with a UI element. Usually it is the class name of the view sub-class.","title":"name"},{"location":"Documentation/View/view.core.views/-view/on-click-listener/","text":"View-common / view.core.views / View / onClickListener onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. Getter A listener to be invoked whenever a the UI element corresponding to this view is clicked. Setter A listener to be invoked whenever a the UI element corresponding to this view is clicked.","title":"On click listener"},{"location":"Documentation/View/view.core.views/-view/on-click-listener/#onclicklistener","text":"var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. Getter A listener to be invoked whenever a the UI element corresponding to this view is clicked. Setter A listener to be invoked whenever a the UI element corresponding to this view is clicked.","title":"onClickListener"},{"location":"Documentation/View/view.core.views/-view/on-long-click-listener/","text":"View-common / view.core.views / View / onLongClickListener onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. Getter A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. Setter A listener to be invoked whenever a the UI element corresponding to this view is clicked and held.","title":"On long click listener"},{"location":"Documentation/View/view.core.views/-view/on-long-click-listener/#onlongclicklistener","text":"var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. Getter A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. Setter A listener to be invoked whenever a the UI element corresponding to this view is clicked and held.","title":"onLongClickListener"},{"location":"Documentation/View/view.core.views/-view/on-resize/","text":"View-common / view.core.views / View / onResize onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. Getter A listener to b invoked whenever the UI element corresponding to this view is resized. Setter A listener to b invoked whenever the UI element corresponding to this view is resized.","title":"On resize"},{"location":"Documentation/View/view.core.views/-view/on-resize/#onresize","text":"var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. Getter A listener to b invoked whenever the UI element corresponding to this view is resized. Setter A listener to b invoked whenever the UI element corresponding to this view is resized.","title":"onResize"},{"location":"Documentation/View/view.core.views/-view/padding-bottom/","text":"View-common / view.core.views / View / paddingBottom paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. Getter Specifies the value of the bottom padding of the view. Setter Specifies the value of the bottom padding of the view.","title":"Padding bottom"},{"location":"Documentation/View/view.core.views/-view/padding-bottom/#paddingbottom","text":"var paddingBottom: Double ? Specifies the value of the bottom padding of the view. Getter Specifies the value of the bottom padding of the view. Setter Specifies the value of the bottom padding of the view.","title":"paddingBottom"},{"location":"Documentation/View/view.core.views/-view/padding-end/","text":"View-common / view.core.views / View / paddingEnd paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. Getter Specifies the values of the padding at the end of the view. Setter Specifies the values of the padding at the end of the view.","title":"Padding end"},{"location":"Documentation/View/view.core.views/-view/padding-end/#paddingend","text":"var paddingEnd: Double ? Specifies the values of the padding at the end of the view. Getter Specifies the values of the padding at the end of the view. Setter Specifies the values of the padding at the end of the view.","title":"paddingEnd"},{"location":"Documentation/View/view.core.views/-view/padding-start/","text":"View-common / view.core.views / View / paddingStart paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. Getter Specifies the values of the padding a the beginning of the view. Setter Specifies the values of the padding a the beginning of the view.","title":"Padding start"},{"location":"Documentation/View/view.core.views/-view/padding-start/#paddingstart","text":"var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. Getter Specifies the values of the padding a the beginning of the view. Setter Specifies the values of the padding a the beginning of the view.","title":"paddingStart"},{"location":"Documentation/View/view.core.views/-view/padding-top/","text":"View-common / view.core.views / View / paddingTop paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. Getter Specifies the value of the top padding of the view. Setter Specifies the value of the top padding of the view.","title":"Padding top"},{"location":"Documentation/View/view.core.views/-view/padding-top/#paddingtop","text":"var paddingTop: Double ? Specifies the value of the top padding of the view. Getter Specifies the value of the top padding of the view. Setter Specifies the value of the top padding of the view.","title":"paddingTop"},{"location":"Documentation/View/view.core.views/-view/parent/","text":"View-common / view.core.views / View / parent parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree.","title":"Parent"},{"location":"Documentation/View/view.core.views/-view/parent/#parent","text":"var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree.","title":"parent"},{"location":"Documentation/View/view.core.views/-view/theme/","text":"View-common / view.core.views / View / theme theme var theme: String ? The Theme to be applied to this view instance. Getter The Theme to be applied to this view instance. Setter The Theme to be applied to this view instance.","title":"Theme"},{"location":"Documentation/View/view.core.views/-view/theme/#theme","text":"var theme: String ? The Theme to be applied to this view instance. Getter The Theme to be applied to this view instance. Setter The Theme to be applied to this view instance.","title":"theme"},{"location":"Documentation/View/view.core.views/-view/visibility/","text":"View-common / view.core.views / View / visibility visibility var visibility: Visibility Indicates the visibility status of the view. See Also Visibility Getter Indicates the visibility status of the view. Getter See Also Visibility Setter Indicates the visibility status of the view. Setter See Also Visibility","title":"Visibility"},{"location":"Documentation/View/view.core.views/-view/visibility/#visibility","text":"var visibility: Visibility Indicates the visibility status of the view. See Also Visibility Getter Indicates the visibility status of the view. Getter See Also Visibility Setter Indicates the visibility status of the view. Setter See Also Visibility","title":"visibility"},{"location":"Documentation/View/view.core.views/-view/web-extras/","text":"View-common / view.core.views / View / webExtras webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer .","title":"Web extras"},{"location":"Documentation/View/view.core.views/-view/web-extras/#webextras","text":"var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer .","title":"webExtras"},{"location":"Documentation/View/view.core.views/-view/width/","text":"View-common / view.core.views / View / width width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. See Also Dimension.Type Getter Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Getter See Also Dimension.Type Setter Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Setter See Also Dimension.Type","title":"Width"},{"location":"Documentation/View/view.core.views/-view/width/#width","text":"var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. See Also Dimension.Type Getter Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Getter See Also Dimension.Type Setter Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Setter See Also Dimension.Type","title":"width"},{"location":"Documentation/View/view.core.views/-view/-visibility/","text":"View-common / view.core.views / View / Visibility Visibility enum class Visibility This enum describes the view's visibility status. Enum Values VISIBLE The view is visible. INVISIBLE The view is not visible but its position and dimensions are still present on the UI. GONE The UI will be displayed as if this the view doesn't exist.","title":"Index"},{"location":"Documentation/View/view.core.views/-view/-visibility/#visibility","text":"enum class Visibility This enum describes the view's visibility status.","title":"Visibility"},{"location":"Documentation/View/view.core.views/-view/-visibility/#enum-values","text":"VISIBLE The view is visible. INVISIBLE The view is not visible but its position and dimensions are still present on the UI. GONE The UI will be displayed as if this the view doesn't exist.","title":"Enum Values"},{"location":"Documentation/View/view.core.views/-view/-visibility/-g-o-n-e/","text":"View-common / view.core.views / View / Visibility / GONE GONE GONE The UI will be displayed as if this the view doesn't exist.","title":" g o n e"},{"location":"Documentation/View/view.core.views/-view/-visibility/-g-o-n-e/#gone","text":"GONE The UI will be displayed as if this the view doesn't exist.","title":"GONE"},{"location":"Documentation/View/view.core.views/-view/-visibility/-i-n-v-i-s-i-b-l-e/","text":"View-common / view.core.views / View / Visibility / INVISIBLE INVISIBLE INVISIBLE The view is not visible but its position and dimensions are still present on the UI.","title":" i n v i s i b l e"},{"location":"Documentation/View/view.core.views/-view/-visibility/-i-n-v-i-s-i-b-l-e/#invisible","text":"INVISIBLE The view is not visible but its position and dimensions are still present on the UI.","title":"INVISIBLE"},{"location":"Documentation/View/view.core.views/-view/-visibility/-v-i-s-i-b-l-e/","text":"View-common / view.core.views / View / Visibility / VISIBLE VISIBLE VISIBLE The view is visible.","title":" v i s i b l e"},{"location":"Documentation/View/view.core.views/-view/-visibility/-v-i-s-i-b-l-e/#visible","text":"VISIBLE The view is visible.","title":"VISIBLE"},{"location":"Documentation/View/view.core.views.animations/","text":"View-common / view.core.views.animations Package view.core.views.animations Types Animation abstract class Animation This class is a base class for all animations. AnimationSet class AnimationSet : Animation Represents a group of animations to played. SingleAnimation open class SingleAnimation : Animation A single animation. Timer interface Timer Defines an interface for classes that execute a function every interval of time.","title":"Index"},{"location":"Documentation/View/view.core.views.animations/#package-viewcoreviewsanimations","text":"","title":"Package view.core.views.animations"},{"location":"Documentation/View/view.core.views.animations/#types","text":"Animation abstract class Animation This class is a base class for all animations. AnimationSet class AnimationSet : Animation Represents a group of animations to played. SingleAnimation open class SingleAnimation : Animation A single animation. Timer interface Timer Defines an interface for classes that execute a function every interval of time.","title":"Types"},{"location":"Documentation/View/view.core.views.animations/-animation/","text":"View-common / view.core.views.animations / Animation Animation abstract class Animation This class is a base class for all animations. An animation is just a series of modifications of the view's state that get applied successively over a duration of time. Constructors init Animation() This class is a base class for all animations. Properties duration var duration: Double The total duration of the animation. interval var interval: Int The time interval between the successive modifications of the view's state. onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts. onStart var onStart: () - Unit A listener that gets invoked when the animation starts. timer val timer: ERROR CLASS Functions start abstract fun start(): Unit Starts the animation. stop open fun stop(): Unit Stops the animation. Companion Object Properties DEFAULT_INTERVAL const val DEFAULT_INTERVAL: Int The default time interval for the animation. Inheritors AnimationSet class AnimationSet : Animation Represents a group of animations to played. SingleAnimation open class SingleAnimation : Animation A single animation.","title":"Index"},{"location":"Documentation/View/view.core.views.animations/-animation/#animation","text":"abstract class Animation This class is a base class for all animations. An animation is just a series of modifications of the view's state that get applied successively over a duration of time.","title":"Animation"},{"location":"Documentation/View/view.core.views.animations/-animation/#constructors","text":"init Animation() This class is a base class for all animations.","title":"Constructors"},{"location":"Documentation/View/view.core.views.animations/-animation/#properties","text":"duration var duration: Double The total duration of the animation. interval var interval: Int The time interval between the successive modifications of the view's state. onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts. onStart var onStart: () - Unit A listener that gets invoked when the animation starts. timer val timer: ERROR CLASS","title":"Properties"},{"location":"Documentation/View/view.core.views.animations/-animation/#functions","text":"start abstract fun start(): Unit Starts the animation. stop open fun stop(): Unit Stops the animation.","title":"Functions"},{"location":"Documentation/View/view.core.views.animations/-animation/#companion-object-properties","text":"DEFAULT_INTERVAL const val DEFAULT_INTERVAL: Int The default time interval for the animation.","title":"Companion Object Properties"},{"location":"Documentation/View/view.core.views.animations/-animation/#inheritors","text":"AnimationSet class AnimationSet : Animation Represents a group of animations to played. SingleAnimation open class SingleAnimation : Animation A single animation.","title":"Inheritors"},{"location":"Documentation/View/view.core.views.animations/-animation/-d-e-f-a-u-l-t_-i-n-t-e-r-v-a-l/","text":"View-common / view.core.views.animations / Animation / DEFAULT_INTERVAL DEFAULT_INTERVAL const val DEFAULT_INTERVAL: Int The default time interval for the animation.","title":" d e f a u l t  i n t e r v a l"},{"location":"Documentation/View/view.core.views.animations/-animation/-d-e-f-a-u-l-t_-i-n-t-e-r-v-a-l/#default_interval","text":"const val DEFAULT_INTERVAL: Int The default time interval for the animation.","title":"DEFAULT_INTERVAL"},{"location":"Documentation/View/view.core.views.animations/-animation/-init-/","text":"View-common / view.core.views.animations / Animation / init init Animation() This class is a base class for all animations. An animation is just a series of modifications of the view's state that get applied successively over a duration of time.","title":" init "},{"location":"Documentation/View/view.core.views.animations/-animation/-init-/#init","text":"Animation() This class is a base class for all animations. An animation is just a series of modifications of the view's state that get applied successively over a duration of time.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.animations/-animation/duration/","text":"View-common / view.core.views.animations / Animation / duration duration var duration: Double The total duration of the animation. A negative value makes the animation run for ever. Getter The total duration of the animation. A negative value makes the animation run for ever. Setter The total duration of the animation. A negative value makes the animation run for ever.","title":"Duration"},{"location":"Documentation/View/view.core.views.animations/-animation/duration/#duration","text":"var duration: Double The total duration of the animation. A negative value makes the animation run for ever. Getter The total duration of the animation. A negative value makes the animation run for ever. Setter The total duration of the animation. A negative value makes the animation run for ever.","title":"duration"},{"location":"Documentation/View/view.core.views.animations/-animation/interval/","text":"View-common / view.core.views.animations / Animation / interval interval var interval: Int The time interval between the successive modifications of the view's state.","title":"Interval"},{"location":"Documentation/View/view.core.views.animations/-animation/interval/#interval","text":"var interval: Int The time interval between the successive modifications of the view's state.","title":"interval"},{"location":"Documentation/View/view.core.views.animations/-animation/on-end/","text":"View-common / view.core.views.animations / Animation / onEnd onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts.","title":"On end"},{"location":"Documentation/View/view.core.views.animations/-animation/on-end/#onend","text":"var onEnd: () - Unit A listener that gets invoked when the animation starts.","title":"onEnd"},{"location":"Documentation/View/view.core.views.animations/-animation/on-start/","text":"View-common / view.core.views.animations / Animation / onStart onStart var onStart: () - Unit A listener that gets invoked when the animation starts.","title":"On start"},{"location":"Documentation/View/view.core.views.animations/-animation/on-start/#onstart","text":"var onStart: () - Unit A listener that gets invoked when the animation starts.","title":"onStart"},{"location":"Documentation/View/view.core.views.animations/-animation/start/","text":"View-common / view.core.views.animations / Animation / start start abstract fun start(): Unit Starts the animation.","title":"Start"},{"location":"Documentation/View/view.core.views.animations/-animation/start/#start","text":"abstract fun start(): Unit Starts the animation.","title":"start"},{"location":"Documentation/View/view.core.views.animations/-animation/stop/","text":"View-common / view.core.views.animations / Animation / stop stop open fun stop(): Unit Stops the animation.","title":"Stop"},{"location":"Documentation/View/view.core.views.animations/-animation/stop/#stop","text":"open fun stop(): Unit Stops the animation.","title":"stop"},{"location":"Documentation/View/view.core.views.animations/-animation/timer/","text":"View-common / view.core.views.animations / Animation / timer timer protected val timer: ERROR CLASS","title":"Timer"},{"location":"Documentation/View/view.core.views.animations/-animation/timer/#timer","text":"protected val timer: ERROR CLASS","title":"timer"},{"location":"Documentation/View/view.core.views.animations/-animation-set/","text":"View-common / view.core.views.animations / AnimationSet AnimationSet class AnimationSet : Animation Represents a group of animations to played. Types SetType enum class SetType Represents the kind of the animation set. Constructors init AnimationSet() Represents a group of animations to played. Properties animations val animations: MutableList Animation The list of animations to play. setType var setType: SetType Determines the animation set type. Inherited Properties duration var duration: Double The total duration of the animation. interval var interval: Int The time interval between the successive modifications of the view's state. onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts. onStart var onStart: () - Unit A listener that gets invoked when the animation starts. timer val timer: ERROR CLASS Functions start fun start(): Unit Starts the animation. Inherited Functions stop open fun stop(): Unit Stops the animation.","title":"Index"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#animationset","text":"class AnimationSet : Animation Represents a group of animations to played.","title":"AnimationSet"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#types","text":"SetType enum class SetType Represents the kind of the animation set.","title":"Types"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#constructors","text":"init AnimationSet() Represents a group of animations to played.","title":"Constructors"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#properties","text":"animations val animations: MutableList Animation The list of animations to play. setType var setType: SetType Determines the animation set type.","title":"Properties"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#inherited-properties","text":"duration var duration: Double The total duration of the animation. interval var interval: Int The time interval between the successive modifications of the view's state. onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts. onStart var onStart: () - Unit A listener that gets invoked when the animation starts. timer val timer: ERROR CLASS","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#functions","text":"start fun start(): Unit Starts the animation.","title":"Functions"},{"location":"Documentation/View/view.core.views.animations/-animation-set/#inherited-functions","text":"stop open fun stop(): Unit Stops the animation.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-init-/","text":"View-common / view.core.views.animations / AnimationSet / init init AnimationSet() Represents a group of animations to played.","title":" init "},{"location":"Documentation/View/view.core.views.animations/-animation-set/-init-/#init","text":"AnimationSet() Represents a group of animations to played.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.animations/-animation-set/animations/","text":"View-common / view.core.views.animations / AnimationSet / animations animations val animations: MutableList Animation The list of animations to play.","title":"Animations"},{"location":"Documentation/View/view.core.views.animations/-animation-set/animations/#animations","text":"val animations: MutableList Animation The list of animations to play.","title":"animations"},{"location":"Documentation/View/view.core.views.animations/-animation-set/set-type/","text":"View-common / view.core.views.animations / AnimationSet / setType setType var setType: SetType Determines the animation set type. Getter Determines the animation set type. Setter Determines the animation set type.","title":"Set type"},{"location":"Documentation/View/view.core.views.animations/-animation-set/set-type/#settype","text":"var setType: SetType Determines the animation set type. Getter Determines the animation set type. Setter Determines the animation set type.","title":"setType"},{"location":"Documentation/View/view.core.views.animations/-animation-set/start/","text":"View-common / view.core.views.animations / AnimationSet / start start fun start(): Unit Overrides Animation.start Starts the animation.","title":"Start"},{"location":"Documentation/View/view.core.views.animations/-animation-set/start/#start","text":"fun start(): Unit Overrides Animation.start Starts the animation.","title":"start"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/","text":"View-common / view.core.views.animations / AnimationSet / SetType SetType enum class SetType Represents the kind of the animation set. Enum Values CONCURRENT The animations are played concurrently. They all start at the same time. SEQUENTIAL The animations are played sequentially. The i-th animation only starts when the (i-1)-th animation ends.","title":"Index"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/#settype","text":"enum class SetType Represents the kind of the animation set.","title":"SetType"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/#enum-values","text":"CONCURRENT The animations are played concurrently. They all start at the same time. SEQUENTIAL The animations are played sequentially. The i-th animation only starts when the (i-1)-th animation ends.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/-c-o-n-c-u-r-r-e-n-t/","text":"View-common / view.core.views.animations / AnimationSet / SetType / CONCURRENT CONCURRENT CONCURRENT The animations are played concurrently. They all start at the same time.","title":" c o n c u r r e n t"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/-c-o-n-c-u-r-r-e-n-t/#concurrent","text":"CONCURRENT The animations are played concurrently. They all start at the same time.","title":"CONCURRENT"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/-s-e-q-u-e-n-t-i-a-l/","text":"View-common / view.core.views.animations / AnimationSet / SetType / SEQUENTIAL SEQUENTIAL SEQUENTIAL The animations are played sequentially. The i-th animation only starts when the (i-1)-th animation ends.","title":" s e q u e n t i a l"},{"location":"Documentation/View/view.core.views.animations/-animation-set/-set-type/-s-e-q-u-e-n-t-i-a-l/#sequential","text":"SEQUENTIAL The animations are played sequentially. The i-th animation only starts when the (i-1)-th animation ends.","title":"SEQUENTIAL"},{"location":"Documentation/View/view.core.views.animations/-single-animation/","text":"View-common / view.core.views.animations / SingleAnimation SingleAnimation open class SingleAnimation : Animation A single animation. Constructors init SingleAnimation() A single animation. Properties applyInterpolatedValue open var applyInterpolatedValue: ( Double ) - Unit A function that modifies the view's state. interpolator var interpolator: ( Double ) - Double A function that defines the rate of change of the animation. onRepeat var onRepeat: (iterCount: Int ) - Unit A listener that gets invoked whenever the animation repeats. Inherited Properties duration var duration: Double The total duration of the animation. interval var interval: Int The time interval between the successive modifications of the view's state. onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts. onStart var onStart: () - Unit A listener that gets invoked when the animation starts. timer val timer: ERROR CLASS Functions start open fun start(): Unit Starts the animation. Inherited Functions stop open fun stop(): Unit Stops the animation.","title":"Index"},{"location":"Documentation/View/view.core.views.animations/-single-animation/#singleanimation","text":"open class SingleAnimation : Animation A single animation.","title":"SingleAnimation"},{"location":"Documentation/View/view.core.views.animations/-single-animation/#constructors","text":"init SingleAnimation() A single animation.","title":"Constructors"},{"location":"Documentation/View/view.core.views.animations/-single-animation/#properties","text":"applyInterpolatedValue open var applyInterpolatedValue: ( Double ) - Unit A function that modifies the view's state. interpolator var interpolator: ( Double ) - Double A function that defines the rate of change of the animation. onRepeat var onRepeat: (iterCount: Int ) - Unit A listener that gets invoked whenever the animation repeats.","title":"Properties"},{"location":"Documentation/View/view.core.views.animations/-single-animation/#inherited-properties","text":"duration var duration: Double The total duration of the animation. interval var interval: Int The time interval between the successive modifications of the view's state. onEnd var onEnd: () - Unit A listener that gets invoked when the animation starts. onStart var onStart: () - Unit A listener that gets invoked when the animation starts. timer val timer: ERROR CLASS","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.animations/-single-animation/#functions","text":"start open fun start(): Unit Starts the animation.","title":"Functions"},{"location":"Documentation/View/view.core.views.animations/-single-animation/#inherited-functions","text":"stop open fun stop(): Unit Stops the animation.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.animations/-single-animation/-init-/","text":"View-common / view.core.views.animations / SingleAnimation / init init SingleAnimation() A single animation.","title":" init "},{"location":"Documentation/View/view.core.views.animations/-single-animation/-init-/#init","text":"SingleAnimation() A single animation.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.animations/-single-animation/apply-interpolated-value/","text":"View-common / view.core.views.animations / SingleAnimation / applyInterpolatedValue applyInterpolatedValue open var applyInterpolatedValue: ( Double ) - Unit A function that modifies the view's state. This function takes the interpolated value of the current time step as an input. Getter A function that modifies the view's state. This function takes the interpolated value of the current time step as an input. Setter A function that modifies the view's state. This function takes the interpolated value of the current time step as an input.","title":"Apply interpolated value"},{"location":"Documentation/View/view.core.views.animations/-single-animation/apply-interpolated-value/#applyinterpolatedvalue","text":"open var applyInterpolatedValue: ( Double ) - Unit A function that modifies the view's state. This function takes the interpolated value of the current time step as an input. Getter A function that modifies the view's state. This function takes the interpolated value of the current time step as an input. Setter A function that modifies the view's state. This function takes the interpolated value of the current time step as an input.","title":"applyInterpolatedValue"},{"location":"Documentation/View/view.core.views.animations/-single-animation/interpolator/","text":"View-common / view.core.views.animations / SingleAnimation / interpolator interpolator var interpolator: ( Double ) - Double A function that defines the rate of change of the animation. The function takes the time step as an input. Getter A function that defines the rate of change of the animation. The function takes the time step as an input. Setter A function that defines the rate of change of the animation. The function takes the time step as an input.","title":"Interpolator"},{"location":"Documentation/View/view.core.views.animations/-single-animation/interpolator/#interpolator","text":"var interpolator: ( Double ) - Double A function that defines the rate of change of the animation. The function takes the time step as an input. Getter A function that defines the rate of change of the animation. The function takes the time step as an input. Setter A function that defines the rate of change of the animation. The function takes the time step as an input.","title":"interpolator"},{"location":"Documentation/View/view.core.views.animations/-single-animation/on-repeat/","text":"View-common / view.core.views.animations / SingleAnimation / onRepeat onRepeat var onRepeat: (iterCount: Int ) - Unit A listener that gets invoked whenever the animation repeats.","title":"On repeat"},{"location":"Documentation/View/view.core.views.animations/-single-animation/on-repeat/#onrepeat","text":"var onRepeat: (iterCount: Int ) - Unit A listener that gets invoked whenever the animation repeats.","title":"onRepeat"},{"location":"Documentation/View/view.core.views.animations/-single-animation/start/","text":"View-common / view.core.views.animations / SingleAnimation / start start open fun start(): Unit Overrides Animation.start Starts the animation.","title":"Start"},{"location":"Documentation/View/view.core.views.animations/-single-animation/start/#start","text":"open fun start(): Unit Overrides Animation.start Starts the animation.","title":"start"},{"location":"Documentation/View/view.core.views.animations/-timer/","text":"View-common / view.core.views.animations / Timer Timer interface Timer Defines an interface for classes that execute a function every interval of time. Functions repeat abstract fun repeat(interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time indefinitely. abstract fun repeat(count: Int , interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time a given number of times. stop abstract fun stop(): Unit Cancels any future executions of passed functions.","title":"Index"},{"location":"Documentation/View/view.core.views.animations/-timer/#timer","text":"interface Timer Defines an interface for classes that execute a function every interval of time.","title":"Timer"},{"location":"Documentation/View/view.core.views.animations/-timer/#functions","text":"repeat abstract fun repeat(interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time indefinitely. abstract fun repeat(count: Int , interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time a given number of times. stop abstract fun stop(): Unit Cancels any future executions of passed functions.","title":"Functions"},{"location":"Documentation/View/view.core.views.animations/-timer/repeat/","text":"View-common / view.core.views.animations / Timer / repeat repeat abstract fun repeat(interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time indefinitely. Parameters interval - The time interval's length in milliseconds func - The function to be executed. abstract fun repeat(count: Int , interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time a given number of times. Parameters count - Determines the number of times the function will be called interval - The time interval's length in milliseconds func - The function to be executed.","title":"Repeat"},{"location":"Documentation/View/view.core.views.animations/-timer/repeat/#repeat","text":"abstract fun repeat(interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time indefinitely.","title":"repeat"},{"location":"Documentation/View/view.core.views.animations/-timer/repeat/#parameters","text":"interval - The time interval's length in milliseconds func - The function to be executed. abstract fun repeat(count: Int , interval: Int , func: ( Int ) - Unit ): Unit Executes the passed function every interval of time a given number of times.","title":"Parameters"},{"location":"Documentation/View/view.core.views.animations/-timer/repeat/#parameters_1","text":"count - Determines the number of times the function will be called interval - The time interval's length in milliseconds func - The function to be executed.","title":"Parameters"},{"location":"Documentation/View/view.core.views.animations/-timer/stop/","text":"View-common / view.core.views.animations / Timer / stop stop abstract fun stop(): Unit Cancels any future executions of passed functions.","title":"Stop"},{"location":"Documentation/View/view.core.views.animations/-timer/stop/#stop","text":"abstract fun stop(): Unit Cancels any future executions of passed functions.","title":"stop"},{"location":"Documentation/View/view.core.views.display/","text":"View-common / view.core.views.display Package view.core.views.display Types ImageView open class ImageView : View This view displays an image on the UI. TextView open class TextView : View Represents a block of text on the UI.","title":"Index"},{"location":"Documentation/View/view.core.views.display/#package-viewcoreviewsdisplay","text":"","title":"Package view.core.views.display"},{"location":"Documentation/View/view.core.views.display/#types","text":"ImageView open class ImageView : View This view displays an image on the UI. TextView open class TextView : View Represents a block of text on the UI.","title":"Types"},{"location":"Documentation/View/view.core.views.display/-image-view/","text":"View-common / view.core.views.display / ImageView ImageView open class ImageView : View This view displays an image on the UI. Types ScaleType enum class ScaleType Represents the scaling strategy of the image in the view. Constructors init ImageView() This view displays an image on the UI. Properties imageResource var imageResource: String Represents an image resource identifier. scaleType var scaleType: ScaleType Specifies the image's scale type. Inherited Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Index"},{"location":"Documentation/View/view.core.views.display/-image-view/#imageview","text":"open class ImageView : View This view displays an image on the UI.","title":"ImageView"},{"location":"Documentation/View/view.core.views.display/-image-view/#types","text":"ScaleType enum class ScaleType Represents the scaling strategy of the image in the view.","title":"Types"},{"location":"Documentation/View/view.core.views.display/-image-view/#constructors","text":"init ImageView() This view displays an image on the UI.","title":"Constructors"},{"location":"Documentation/View/view.core.views.display/-image-view/#properties","text":"imageResource var imageResource: String Represents an image resource identifier. scaleType var scaleType: ScaleType Specifies the image's scale type.","title":"Properties"},{"location":"Documentation/View/view.core.views.display/-image-view/#inherited-properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.display/-image-view/-init-/","text":"View-common / view.core.views.display / ImageView / init init ImageView() This view displays an image on the UI.","title":" init "},{"location":"Documentation/View/view.core.views.display/-image-view/-init-/#init","text":"ImageView() This view displays an image on the UI.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.display/-image-view/image-resource/","text":"View-common / view.core.views.display / ImageView / imageResource imageResource var imageResource: String Represents an image resource identifier. Getter Represents an image resource identifier. Setter Represents an image resource identifier.","title":"Image resource"},{"location":"Documentation/View/view.core.views.display/-image-view/image-resource/#imageresource","text":"var imageResource: String Represents an image resource identifier. Getter Represents an image resource identifier. Setter Represents an image resource identifier.","title":"imageResource"},{"location":"Documentation/View/view.core.views.display/-image-view/scale-type/","text":"View-common / view.core.views.display / ImageView / scaleType scaleType var scaleType: ScaleType Specifies the image's scale type. Getter Specifies the image's scale type. Setter Specifies the image's scale type.","title":"Scale type"},{"location":"Documentation/View/view.core.views.display/-image-view/scale-type/#scaletype","text":"var scaleType: ScaleType Specifies the image's scale type. Getter Specifies the image's scale type. Setter Specifies the image's scale type.","title":"scaleType"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/","text":"View-common / view.core.views.display / ImageView / ScaleType ScaleType enum class ScaleType Represents the scaling strategy of the image in the view. Enum Values CENTER Centers the image in the view without scaling. CENTER_CROP Scales the image while maintaining the aspect ratio until the image is equal in size or bigger than the view. CENTER_INSIDE Scales the image while maintaining the aspect ratio until the image is equal in size or smaller than the view. FIT Scales the image to the view's dimensions without respecting its aspect ratio.","title":"Index"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/#scaletype","text":"enum class ScaleType Represents the scaling strategy of the image in the view.","title":"ScaleType"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/#enum-values","text":"CENTER Centers the image in the view without scaling. CENTER_CROP Scales the image while maintaining the aspect ratio until the image is equal in size or bigger than the view. CENTER_INSIDE Scales the image while maintaining the aspect ratio until the image is equal in size or smaller than the view. FIT Scales the image to the view's dimensions without respecting its aspect ratio.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-c-e-n-t-e-r/","text":"View-common / view.core.views.display / ImageView / ScaleType / CENTER CENTER CENTER Centers the image in the view without scaling.","title":" c e n t e r"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-c-e-n-t-e-r/#center","text":"CENTER Centers the image in the view without scaling.","title":"CENTER"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-c-e-n-t-e-r_-c-r-o-p/","text":"View-common / view.core.views.display / ImageView / ScaleType / CENTER_CROP CENTER_CROP CENTER_CROP Scales the image while maintaining the aspect ratio until the image is equal in size or bigger than the view.","title":" c e n t e r  c r o p"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-c-e-n-t-e-r_-c-r-o-p/#center_crop","text":"CENTER_CROP Scales the image while maintaining the aspect ratio until the image is equal in size or bigger than the view.","title":"CENTER_CROP"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-c-e-n-t-e-r_-i-n-s-i-d-e/","text":"View-common / view.core.views.display / ImageView / ScaleType / CENTER_INSIDE CENTER_INSIDE CENTER_INSIDE Scales the image while maintaining the aspect ratio until the image is equal in size or smaller than the view.","title":" c e n t e r  i n s i d e"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-c-e-n-t-e-r_-i-n-s-i-d-e/#center_inside","text":"CENTER_INSIDE Scales the image while maintaining the aspect ratio until the image is equal in size or smaller than the view.","title":"CENTER_INSIDE"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-f-i-t/","text":"View-common / view.core.views.display / ImageView / ScaleType / FIT FIT FIT Scales the image to the view's dimensions without respecting its aspect ratio.","title":" f i t"},{"location":"Documentation/View/view.core.views.display/-image-view/-scale-type/-f-i-t/#fit","text":"FIT Scales the image to the view's dimensions without respecting its aspect ratio.","title":"FIT"},{"location":"Documentation/View/view.core.views.display/-text-view/","text":"View-common / view.core.views.display / TextView TextView open class TextView : View Represents a block of text on the UI. Types Align enum class Align Specifies how the text is aligned in the view. FontStyle enum class FontStyle The text's font style. Constructors init TextView() Represents a block of text on the UI. Properties align open var align: Align Specifies how the text is aligned in the view. font open var font: String ? Specifies the text's font. fontColor open var fontColor: Long ? Specifies the text's font color. fontSize open var fontSize: Double ? Specifies the text's font size. fontStyle open var fontStyle: Set FontStyle Specifies the text's font style. text open var text: String ? The text to be displayed. Inherited Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Index"},{"location":"Documentation/View/view.core.views.display/-text-view/#textview","text":"open class TextView : View Represents a block of text on the UI.","title":"TextView"},{"location":"Documentation/View/view.core.views.display/-text-view/#types","text":"Align enum class Align Specifies how the text is aligned in the view. FontStyle enum class FontStyle The text's font style.","title":"Types"},{"location":"Documentation/View/view.core.views.display/-text-view/#constructors","text":"init TextView() Represents a block of text on the UI.","title":"Constructors"},{"location":"Documentation/View/view.core.views.display/-text-view/#properties","text":"align open var align: Align Specifies how the text is aligned in the view. font open var font: String ? Specifies the text's font. fontColor open var fontColor: Long ? Specifies the text's font color. fontSize open var fontSize: Double ? Specifies the text's font size. fontStyle open var fontStyle: Set FontStyle Specifies the text's font style. text open var text: String ? The text to be displayed.","title":"Properties"},{"location":"Documentation/View/view.core.views.display/-text-view/#inherited-properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.display/-text-view/-init-/","text":"View-common / view.core.views.display / TextView / init init TextView() Represents a block of text on the UI.","title":" init "},{"location":"Documentation/View/view.core.views.display/-text-view/-init-/#init","text":"TextView() Represents a block of text on the UI.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.display/-text-view/align/","text":"View-common / view.core.views.display / TextView / align align open var align: Align Specifies how the text is aligned in the view. The default value of this property is Align.LEFT Getter Specifies how the text is aligned in the view. The default value of this property is Align.LEFT Setter Specifies how the text is aligned in the view. The default value of this property is Align.LEFT","title":"Align"},{"location":"Documentation/View/view.core.views.display/-text-view/align/#align","text":"open var align: Align Specifies how the text is aligned in the view. The default value of this property is Align.LEFT Getter Specifies how the text is aligned in the view. The default value of this property is Align.LEFT Setter Specifies how the text is aligned in the view. The default value of this property is Align.LEFT","title":"align"},{"location":"Documentation/View/view.core.views.display/-text-view/font-color/","text":"View-common / view.core.views.display / TextView / fontColor fontColor open var fontColor: Long ? Specifies the text's font color. Getter Specifies the text's font color. Setter Specifies the text's font color.","title":"Font color"},{"location":"Documentation/View/view.core.views.display/-text-view/font-color/#fontcolor","text":"open var fontColor: Long ? Specifies the text's font color. Getter Specifies the text's font color. Setter Specifies the text's font color.","title":"fontColor"},{"location":"Documentation/View/view.core.views.display/-text-view/font-size/","text":"View-common / view.core.views.display / TextView / fontSize fontSize open var fontSize: Double ? Specifies the text's font size. Getter Specifies the text's font size. Setter Specifies the text's font size.","title":"Font size"},{"location":"Documentation/View/view.core.views.display/-text-view/font-size/#fontsize","text":"open var fontSize: Double ? Specifies the text's font size. Getter Specifies the text's font size. Setter Specifies the text's font size.","title":"fontSize"},{"location":"Documentation/View/view.core.views.display/-text-view/font-style/","text":"View-common / view.core.views.display / TextView / fontStyle fontStyle open var fontStyle: Set FontStyle Specifies the text's font style. The default value of this property is FontStyle.NORMAL Getter Specifies the text's font style. The default value of this property is FontStyle.NORMAL Setter Specifies the text's font style. The default value of this property is FontStyle.NORMAL","title":"Font style"},{"location":"Documentation/View/view.core.views.display/-text-view/font-style/#fontstyle","text":"open var fontStyle: Set FontStyle Specifies the text's font style. The default value of this property is FontStyle.NORMAL Getter Specifies the text's font style. The default value of this property is FontStyle.NORMAL Setter Specifies the text's font style. The default value of this property is FontStyle.NORMAL","title":"fontStyle"},{"location":"Documentation/View/view.core.views.display/-text-view/font/","text":"View-common / view.core.views.display / TextView / font font open var font: String ? Specifies the text's font. Getter Specifies the text's font. Setter Specifies the text's font.","title":"Font"},{"location":"Documentation/View/view.core.views.display/-text-view/font/#font","text":"open var font: String ? Specifies the text's font. Getter Specifies the text's font. Setter Specifies the text's font.","title":"font"},{"location":"Documentation/View/view.core.views.display/-text-view/text/","text":"View-common / view.core.views.display / TextView / text text open var text: String ? The text to be displayed. Getter The text to be displayed. Setter The text to be displayed.","title":"Text"},{"location":"Documentation/View/view.core.views.display/-text-view/text/#text","text":"open var text: String ? The text to be displayed. Getter The text to be displayed. Setter The text to be displayed.","title":"text"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/","text":"View-common / view.core.views.display / TextView / Align Align enum class Align Specifies how the text is aligned in the view. Enum Values LEFT RIGHT CENTER JUSTIFY","title":"Index"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/#align","text":"enum class Align Specifies how the text is aligned in the view.","title":"Align"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/#enum-values","text":"LEFT RIGHT CENTER JUSTIFY","title":"Enum Values"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-c-e-n-t-e-r/","text":"View-common / view.core.views.display / TextView / Align / CENTER CENTER CENTER","title":" c e n t e r"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-c-e-n-t-e-r/#center","text":"CENTER","title":"CENTER"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-j-u-s-t-i-f-y/","text":"View-common / view.core.views.display / TextView / Align / JUSTIFY JUSTIFY JUSTIFY","title":" j u s t i f y"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-j-u-s-t-i-f-y/#justify","text":"JUSTIFY","title":"JUSTIFY"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-l-e-f-t/","text":"View-common / view.core.views.display / TextView / Align / LEFT LEFT LEFT","title":" l e f t"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-l-e-f-t/#left","text":"LEFT","title":"LEFT"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-r-i-g-h-t/","text":"View-common / view.core.views.display / TextView / Align / RIGHT RIGHT RIGHT","title":" r i g h t"},{"location":"Documentation/View/view.core.views.display/-text-view/-align/-r-i-g-h-t/#right","text":"RIGHT","title":"RIGHT"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/","text":"View-common / view.core.views.display / TextView / FontStyle FontStyle enum class FontStyle The text's font style. Enum Values NORMAL ITALIC BOLD","title":"Index"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/#fontstyle","text":"enum class FontStyle The text's font style.","title":"FontStyle"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/#enum-values","text":"NORMAL ITALIC BOLD","title":"Enum Values"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/-b-o-l-d/","text":"View-common / view.core.views.display / TextView / FontStyle / BOLD BOLD BOLD","title":" b o l d"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/-b-o-l-d/#bold","text":"BOLD","title":"BOLD"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/-i-t-a-l-i-c/","text":"View-common / view.core.views.display / TextView / FontStyle / ITALIC ITALIC ITALIC","title":" i t a l i c"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/-i-t-a-l-i-c/#italic","text":"ITALIC","title":"ITALIC"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/-n-o-r-m-a-l/","text":"View-common / view.core.views.display / TextView / FontStyle / NORMAL NORMAL NORMAL","title":" n o r m a l"},{"location":"Documentation/View/view.core.views.display/-text-view/-font-style/-n-o-r-m-a-l/#normal","text":"NORMAL","title":"NORMAL"},{"location":"Documentation/View/view.core.views.input/","text":"View-common / view.core.views.input Package view.core.views.input Contains view classes the define UI components. Types Button open class Button : View Represents a button.","title":"Index"},{"location":"Documentation/View/view.core.views.input/#package-viewcoreviewsinput","text":"Contains view classes the define UI components.","title":"Package view.core.views.input"},{"location":"Documentation/View/view.core.views.input/#types","text":"Button open class Button : View Represents a button.","title":"Types"},{"location":"Documentation/View/view.core.views.input/-button/","text":"View-common / view.core.views.input / Button Button open class Button : View Represents a button. Types TYPE enum class TYPE Represents a button type. Constructors init Button() Represents a button. Properties text var text: String ? Specifies the button's label. type var type: TYPE Specifies the button type. Inherited Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Index"},{"location":"Documentation/View/view.core.views.input/-button/#button","text":"open class Button : View Represents a button.","title":"Button"},{"location":"Documentation/View/view.core.views.input/-button/#types","text":"TYPE enum class TYPE Represents a button type.","title":"Types"},{"location":"Documentation/View/view.core.views.input/-button/#constructors","text":"init Button() Represents a button.","title":"Constructors"},{"location":"Documentation/View/view.core.views.input/-button/#properties","text":"text var text: String ? Specifies the button's label. type var type: TYPE Specifies the button type.","title":"Properties"},{"location":"Documentation/View/view.core.views.input/-button/#inherited-properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.input/-button/-init-/","text":"View-common / view.core.views.input / Button / init init Button() Represents a button.","title":" init "},{"location":"Documentation/View/view.core.views.input/-button/-init-/#init","text":"Button() Represents a button.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.input/-button/text/","text":"View-common / view.core.views.input / Button / text text var text: String ? Specifies the button's label. Getter Specifies the button's label. Setter Specifies the button's label.","title":"Text"},{"location":"Documentation/View/view.core.views.input/-button/text/#text","text":"var text: String ? Specifies the button's label. Getter Specifies the button's label. Setter Specifies the button's label.","title":"text"},{"location":"Documentation/View/view.core.views.input/-button/type/","text":"View-common / view.core.views.input / Button / type type var type: TYPE Specifies the button type. The value of this property is Button.TYPE.NORMAL by default. Getter Specifies the button type. The value of this property is Button.TYPE.NORMAL by default. Setter Specifies the button type. The value of this property is Button.TYPE.NORMAL by default.","title":"Type"},{"location":"Documentation/View/view.core.views.input/-button/type/#type","text":"var type: TYPE Specifies the button type. The value of this property is Button.TYPE.NORMAL by default. Getter Specifies the button type. The value of this property is Button.TYPE.NORMAL by default. Setter Specifies the button type. The value of this property is Button.TYPE.NORMAL by default.","title":"type"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/","text":"View-common / view.core.views.input / Button / TYPE TYPE enum class TYPE Represents a button type. Enum Values NORMAL It is the responsibility of the ViewTreeRenderer to define what a 'Normal' button should look like. ICON Defines an icon button. PLATFORM_SPECIFIC Defines a button type that is specific to a certain platform.","title":"Index"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/#type","text":"enum class TYPE Represents a button type.","title":"TYPE"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/#enum-values","text":"NORMAL It is the responsibility of the ViewTreeRenderer to define what a 'Normal' button should look like. ICON Defines an icon button. PLATFORM_SPECIFIC Defines a button type that is specific to a certain platform.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/-i-c-o-n/","text":"View-common / view.core.views.input / Button / TYPE / ICON ICON ICON Defines an icon button.","title":" i c o n"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/-i-c-o-n/#icon","text":"ICON Defines an icon button.","title":"ICON"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/-n-o-r-m-a-l/","text":"View-common / view.core.views.input / Button / TYPE / NORMAL NORMAL NORMAL It is the responsibility of the ViewTreeRenderer to define what a 'Normal' button should look like.","title":" n o r m a l"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/-n-o-r-m-a-l/#normal","text":"NORMAL It is the responsibility of the ViewTreeRenderer to define what a 'Normal' button should look like.","title":"NORMAL"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/-p-l-a-t-f-o-r-m_-s-p-e-c-i-f-i-c/","text":"View-common / view.core.views.input / Button / TYPE / PLATFORM_SPECIFIC PLATFORM_SPECIFIC PLATFORM_SPECIFIC Defines a button type that is specific to a certain platform. Further information on the button type can be passed ViewTreeRenderer using view extras. See Also View.webExtras View.androidExtras View.iosExtras","title":" p l a t f o r m  s p e c i f i c"},{"location":"Documentation/View/view.core.views.input/-button/-t-y-p-e/-p-l-a-t-f-o-r-m_-s-p-e-c-i-f-i-c/#platform_specific","text":"PLATFORM_SPECIFIC Defines a button type that is specific to a certain platform. Further information on the button type can be passed ViewTreeRenderer using view extras. See Also View.webExtras View.androidExtras View.iosExtras","title":"PLATFORM_SPECIFIC"},{"location":"Documentation/View/view.core.views.input.binary-state-input/","text":"View-common / view.core.views.input.binaryStateInput Package view.core.views.input.binaryStateInput Types BinaryStateInput abstract class BinaryStateInput : View This is the base class for views that represent input UI components with an on/off state. CheckBox open class CheckBox : BinaryStateInput Represents a Check Box. RadioButton open class RadioButton : BinaryStateInput Represents a Radio Button. Switch open class Switch : BinaryStateInput Represents a switch.","title":"Index"},{"location":"Documentation/View/view.core.views.input.binary-state-input/#package-viewcoreviewsinputbinarystateinput","text":"","title":"Package view.core.views.input.binaryStateInput"},{"location":"Documentation/View/view.core.views.input.binary-state-input/#types","text":"BinaryStateInput abstract class BinaryStateInput : View This is the base class for views that represent input UI components with an on/off state. CheckBox open class CheckBox : BinaryStateInput Represents a Check Box. RadioButton open class RadioButton : BinaryStateInput Represents a Radio Button. Switch open class Switch : BinaryStateInput Represents a switch.","title":"Types"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/","text":"View-common / view.core.views.input.binaryStateInput / BinaryStateInput BinaryStateInput abstract class BinaryStateInput : View This is the base class for views that represent input UI components with an on/off state. Constructors init BinaryStateInput() This is the base class for views that represent input UI components with an on/off state. Properties isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed. Inherited Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Inheritors CheckBox open class CheckBox : BinaryStateInput Represents a Check Box. RadioButton open class RadioButton : BinaryStateInput Represents a Radio Button. Switch open class Switch : BinaryStateInput Represents a switch.","title":"Index"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/#binarystateinput","text":"abstract class BinaryStateInput : View This is the base class for views that represent input UI components with an on/off state.","title":"BinaryStateInput"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/#constructors","text":"init BinaryStateInput() This is the base class for views that represent input UI components with an on/off state.","title":"Constructors"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/#properties","text":"isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Properties"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/#inherited-properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/#inheritors","text":"CheckBox open class CheckBox : BinaryStateInput Represents a Check Box. RadioButton open class RadioButton : BinaryStateInput Represents a Radio Button. Switch open class Switch : BinaryStateInput Represents a switch.","title":"Inheritors"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/-init-/","text":"View-common / view.core.views.input.binaryStateInput / BinaryStateInput / init init BinaryStateInput() This is the base class for views that represent input UI components with an on/off state.","title":" init "},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/-init-/#init","text":"BinaryStateInput() This is the base class for views that represent input UI components with an on/off state.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/is-on/","text":"View-common / view.core.views.input.binaryStateInput / BinaryStateInput / isOn isOn var isOn: Boolean Specifies whether the view in on or off. The value of this property is false by default. Getter Specifies whether the view in on or off. The value of this property is false by default. Setter Specifies whether the view in on or off. The value of this property is false by default.","title":"Is on"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/is-on/#ison","text":"var isOn: Boolean Specifies whether the view in on or off. The value of this property is false by default. Getter Specifies whether the view in on or off. The value of this property is false by default. Setter Specifies whether the view in on or off. The value of this property is false by default.","title":"isOn"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/on-state-changed-listener/","text":"View-common / view.core.views.input.binaryStateInput / BinaryStateInput / onStateChangedListener onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed. Getter A listener that gets invoked whenever the on/off state if the view is changed. Setter A listener that gets invoked whenever the on/off state if the view is changed.","title":"On state changed listener"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-binary-state-input/on-state-changed-listener/#onstatechangedlistener","text":"var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed. Getter A listener that gets invoked whenever the on/off state if the view is changed. Setter A listener that gets invoked whenever the on/off state if the view is changed.","title":"onStateChangedListener"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-check-box/","text":"View-common / view.core.views.input.binaryStateInput / CheckBox CheckBox open class CheckBox : BinaryStateInput Represents a Check Box. Constructors init CheckBox() Represents a Check Box. Inherited Properties isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Index"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-check-box/#checkbox","text":"open class CheckBox : BinaryStateInput Represents a Check Box.","title":"CheckBox"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-check-box/#constructors","text":"init CheckBox() Represents a Check Box.","title":"Constructors"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-check-box/#inherited-properties","text":"isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-check-box/-init-/","text":"View-common / view.core.views.input.binaryStateInput / CheckBox / init init CheckBox() Represents a Check Box.","title":" init "},{"location":"Documentation/View/view.core.views.input.binary-state-input/-check-box/-init-/#init","text":"CheckBox() Represents a Check Box.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-radio-button/","text":"View-common / view.core.views.input.binaryStateInput / RadioButton RadioButton open class RadioButton : BinaryStateInput Represents a Radio Button. Constructors init RadioButton() Represents a Radio Button. Inherited Properties isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Index"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-radio-button/#radiobutton","text":"open class RadioButton : BinaryStateInput Represents a Radio Button.","title":"RadioButton"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-radio-button/#constructors","text":"init RadioButton() Represents a Radio Button.","title":"Constructors"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-radio-button/#inherited-properties","text":"isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-radio-button/-init-/","text":"View-common / view.core.views.input.binaryStateInput / RadioButton / init init RadioButton() Represents a Radio Button.","title":" init "},{"location":"Documentation/View/view.core.views.input.binary-state-input/-radio-button/-init-/#init","text":"RadioButton() Represents a Radio Button.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-switch/","text":"View-common / view.core.views.input.binaryStateInput / Switch Switch open class Switch : BinaryStateInput Represents a switch. Constructors init Switch() Represents a switch. Inherited Properties isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Index"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-switch/#switch","text":"open class Switch : BinaryStateInput Represents a switch.","title":"Switch"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-switch/#constructors","text":"init Switch() Represents a switch.","title":"Constructors"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-switch/#inherited-properties","text":"isOn var isOn: Boolean Specifies whether the view in on or off. onStateChangedListener var onStateChangedListener: ( BinaryStateInput ) - Unit A listener that gets invoked whenever the on/off state if the view is changed.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.input.binary-state-input/-switch/-init-/","text":"View-common / view.core.views.input.binaryStateInput / Switch / init init Switch() Represents a switch.","title":" init "},{"location":"Documentation/View/view.core.views.input.binary-state-input/-switch/-init-/#init","text":"Switch() Represents a switch.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.input.text-input/","text":"View-common / view.core.views.input.textInput Package view.core.views.input.textInput Types EditText open class EditText : View Represents an editable text field.","title":"Index"},{"location":"Documentation/View/view.core.views.input.text-input/#package-viewcoreviewsinputtextinput","text":"","title":"Package view.core.views.input.textInput"},{"location":"Documentation/View/view.core.views.input.text-input/#types","text":"EditText open class EditText : View Represents an editable text field.","title":"Types"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/","text":"View-common / view.core.views.input.textInput / EditText EditText open class EditText : View Represents an editable text field. Constructors init EditText() Represents an editable text field. Properties fontColor var fontColor: Long ? Specifies the color of the text. fontSize var fontSize: Int ? Specifies the font size of the text. onTextChanged var onTextChanged: ( EditText ) - Unit A listener that gets invoked whenever the text changes. text var text: String ? The text currently in the text field. Inherited Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Index"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/#edittext","text":"open class EditText : View Represents an editable text field.","title":"EditText"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/#constructors","text":"init EditText() Represents an editable text field.","title":"Constructors"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/#properties","text":"fontColor var fontColor: Long ? Specifies the color of the text. fontSize var fontSize: Int ? Specifies the font size of the text. onTextChanged var onTextChanged: ( EditText ) - Unit A listener that gets invoked whenever the text changes. text var text: String ? The text currently in the text field.","title":"Properties"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/#inherited-properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/-init-/","text":"View-common / view.core.views.input.textInput / EditText / init init EditText() Represents an editable text field.","title":" init "},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/-init-/#init","text":"EditText() Represents an editable text field.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/font-color/","text":"View-common / view.core.views.input.textInput / EditText / fontColor fontColor var fontColor: Long ? Specifies the color of the text. Getter Specifies the color of the text. Setter Specifies the color of the text.","title":"Font color"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/font-color/#fontcolor","text":"var fontColor: Long ? Specifies the color of the text. Getter Specifies the color of the text. Setter Specifies the color of the text.","title":"fontColor"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/font-size/","text":"View-common / view.core.views.input.textInput / EditText / fontSize fontSize var fontSize: Int ? Specifies the font size of the text. Getter Specifies the font size of the text. Setter Specifies the font size of the text.","title":"Font size"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/font-size/#fontsize","text":"var fontSize: Int ? Specifies the font size of the text. Getter Specifies the font size of the text. Setter Specifies the font size of the text.","title":"fontSize"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/on-text-changed/","text":"View-common / view.core.views.input.textInput / EditText / onTextChanged onTextChanged var onTextChanged: ( EditText ) - Unit A listener that gets invoked whenever the text changes. Getter A listener that gets invoked whenever the text changes. Setter A listener that gets invoked whenever the text changes.","title":"On text changed"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/on-text-changed/#ontextchanged","text":"var onTextChanged: ( EditText ) - Unit A listener that gets invoked whenever the text changes. Getter A listener that gets invoked whenever the text changes. Setter A listener that gets invoked whenever the text changes.","title":"onTextChanged"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/text/","text":"View-common / view.core.views.input.textInput / EditText / text text var text: String ? The text currently in the text field. Getter The text currently in the text field. Setter The text currently in the text field.","title":"Text"},{"location":"Documentation/View/view.core.views.input.text-input/-edit-text/text/#text","text":"var text: String ? The text currently in the text field. Getter The text currently in the text field. Setter The text currently in the text field.","title":"text"},{"location":"Documentation/View/view.core.views.layouts/","text":"View-common / view.core.views.layouts Package view.core.views.layouts This package contains Layout views, which are views that contain other views. Types GridLayout open class GridLayout : Layout A layout where child views are positioned in a rectangular grid. Layout abstract class Layout : View This is the base class for layout views, which are views that contain other views. LinearLayout open class LinearLayout : Layout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. RelativeLayout open class RelativeLayout : Layout A layout where child views are positioned relative to each other and to the layout itself.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/#package-viewcoreviewslayouts","text":"This package contains Layout views, which are views that contain other views.","title":"Package view.core.views.layouts"},{"location":"Documentation/View/view.core.views.layouts/#types","text":"GridLayout open class GridLayout : Layout A layout where child views are positioned in a rectangular grid. Layout abstract class Layout : View This is the base class for layout views, which are views that contain other views. LinearLayout open class LinearLayout : Layout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. RelativeLayout open class RelativeLayout : Layout A layout where child views are positioned relative to each other and to the layout itself.","title":"Types"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/","text":"View-common / view.core.views.layouts / GridLayout GridLayout open class GridLayout : Layout A layout where child views are positioned in a rectangular grid. A grid is divided into rows and columns. Views are placed inside a Cell where a cell can occupy more than one row or column. Types Cell class Cell Represents a container for a child view. Constructors init GridLayout() A layout where child views are positioned in a rectangular grid. Properties cells val cells: ERROR CLASS Contains the cells in a grid. columnCount var columnCount: Int The number of columns in the grid. horizontalSpace var horizontalSpace: Double The space between the grid rows. rowCount var rowCount: Int The numbers of rows in the grid. verticalSpace var verticalSpace: Double The space between the grid columns. Inherited Properties childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically. Functions addChild open fun addChild(child: View ): Boolean fun addChild(child: View , cell: Cell ): Boolean Adds a view to the layout. Inherited Functions children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#gridlayout","text":"open class GridLayout : Layout A layout where child views are positioned in a rectangular grid. A grid is divided into rows and columns. Views are placed inside a Cell where a cell can occupy more than one row or column.","title":"GridLayout"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#types","text":"Cell class Cell Represents a container for a child view.","title":"Types"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#constructors","text":"init GridLayout() A layout where child views are positioned in a rectangular grid.","title":"Constructors"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#properties","text":"cells val cells: ERROR CLASS Contains the cells in a grid. columnCount var columnCount: Int The number of columns in the grid. horizontalSpace var horizontalSpace: Double The space between the grid rows. rowCount var rowCount: Int The numbers of rows in the grid. verticalSpace var verticalSpace: Double The space between the grid columns.","title":"Properties"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#inherited-properties","text":"childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#functions","text":"addChild open fun addChild(child: View ): Boolean fun addChild(child: View , cell: Cell ): Boolean Adds a view to the layout.","title":"Functions"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/#inherited-functions","text":"children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-init-/","text":"View-common / view.core.views.layouts / GridLayout / init init GridLayout() A layout where child views are positioned in a rectangular grid. A grid is divided into rows and columns. Views are placed inside a Cell where a cell can occupy more than one row or column.","title":" init "},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-init-/#init","text":"GridLayout() A layout where child views are positioned in a rectangular grid. A grid is divided into rows and columns. Views are placed inside a Cell where a cell can occupy more than one row or column.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/add-child/","text":"View-common / view.core.views.layouts / GridLayout / addChild addChild open fun addChild(child: View ): Boolean Overrides Layout.addChild Adds a view to the layout. When a view is added using this method, it would be placed in cell occupying a single row and column. Parameters child - The view to be added. Exceptions IllegalStateException - If the grid is full. Return True if the child was added, false otherwise. fun addChild(child: View , cell: Cell ): Boolean Adds a view to the layout. Parameters child - The view to be added. cell - The cell to contain the view. Exceptions IndexOutOfBoundsException - If the cell lies outside of the grid bounds. IllegalStateException - If there is no space for the cell in the grid. Return True if the child was added, false otherwise.","title":"Add child"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/add-child/#addchild","text":"open fun addChild(child: View ): Boolean Overrides Layout.addChild Adds a view to the layout. When a view is added using this method, it would be placed in cell occupying a single row and column.","title":"addChild"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/add-child/#parameters","text":"child - The view to be added.","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/add-child/#exceptions","text":"IllegalStateException - If the grid is full. Return True if the child was added, false otherwise. fun addChild(child: View , cell: Cell ): Boolean Adds a view to the layout.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/add-child/#parameters_1","text":"child - The view to be added. cell - The cell to contain the view.","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/add-child/#exceptions_1","text":"IndexOutOfBoundsException - If the cell lies outside of the grid bounds. IllegalStateException - If there is no space for the cell in the grid. Return True if the child was added, false otherwise.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/cells/","text":"View-common / view.core.views.layouts / GridLayout / cells cells val cells: ERROR CLASS Contains the cells in a grid. When this the layout is rendered, the i-th child view will reside in the i-th cell.","title":"Cells"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/cells/#cells","text":"val cells: ERROR CLASS Contains the cells in a grid. When this the layout is rendered, the i-th child view will reside in the i-th cell.","title":"cells"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/column-count/","text":"View-common / view.core.views.layouts / GridLayout / columnCount columnCount var columnCount: Int The number of columns in the grid. Getter The number of columns in the grid. Setter The number of columns in the grid.","title":"Column count"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/column-count/#columncount","text":"var columnCount: Int The number of columns in the grid. Getter The number of columns in the grid. Setter The number of columns in the grid.","title":"columnCount"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/horizontal-space/","text":"View-common / view.core.views.layouts / GridLayout / horizontalSpace horizontalSpace var horizontalSpace: Double The space between the grid rows. Getter The space between the grid rows. Setter The space between the grid rows.","title":"Horizontal space"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/horizontal-space/#horizontalspace","text":"var horizontalSpace: Double The space between the grid rows. Getter The space between the grid rows. Setter The space between the grid rows.","title":"horizontalSpace"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/row-count/","text":"View-common / view.core.views.layouts / GridLayout / rowCount rowCount var rowCount: Int The numbers of rows in the grid. Getter The numbers of rows in the grid. Setter The numbers of rows in the grid.","title":"Row count"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/row-count/#rowcount","text":"var rowCount: Int The numbers of rows in the grid. Getter The numbers of rows in the grid. Setter The numbers of rows in the grid.","title":"rowCount"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/vertical-space/","text":"View-common / view.core.views.layouts / GridLayout / verticalSpace verticalSpace var verticalSpace: Double The space between the grid columns. Getter The space between the grid columns. Setter The space between the grid columns.","title":"Vertical space"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/vertical-space/#verticalspace","text":"var verticalSpace: Double The space between the grid columns. Getter The space between the grid columns. Setter The space between the grid columns.","title":"verticalSpace"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/","text":"View-common / view.core.views.layouts / GridLayout / Cell Cell class Cell Represents a container for a child view. A grid cell can occupy more than one row and column. In addition to that, it determines how the view is positioned inside the cell. Types HorizontalAlignment enum class HorizontalAlignment Represents the view's horizontal alignment inside the cell. VerticalAlignment enum class VerticalAlignment Represents the view's vertical alignment inside the cell. Constructors init Cell() Represents a container for a child view. Properties column var column: Int The index of the starting columns of the cell. columnSpan var columnSpan: Int The number of columns the cell occupies. horizontalAlignment var horizontalAlignment: HorizontalAlignment The horizontal alignment of the view inside the cell. row var row: Int The index of the starting row the cell. rowSpan var rowSpan: Int The number of rows the cell occupies. verticalAlignment var verticalAlignment: VerticalAlignment The vertical alignment of the view inside the cell.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/#cell","text":"class Cell Represents a container for a child view. A grid cell can occupy more than one row and column. In addition to that, it determines how the view is positioned inside the cell.","title":"Cell"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/#types","text":"HorizontalAlignment enum class HorizontalAlignment Represents the view's horizontal alignment inside the cell. VerticalAlignment enum class VerticalAlignment Represents the view's vertical alignment inside the cell.","title":"Types"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/#constructors","text":"init Cell() Represents a container for a child view.","title":"Constructors"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/#properties","text":"column var column: Int The index of the starting columns of the cell. columnSpan var columnSpan: Int The number of columns the cell occupies. horizontalAlignment var horizontalAlignment: HorizontalAlignment The horizontal alignment of the view inside the cell. row var row: Int The index of the starting row the cell. rowSpan var rowSpan: Int The number of rows the cell occupies. verticalAlignment var verticalAlignment: VerticalAlignment The vertical alignment of the view inside the cell.","title":"Properties"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-init-/","text":"View-common / view.core.views.layouts / GridLayout / Cell / init init Cell() Represents a container for a child view. A grid cell can occupy more than one row and column. In addition to that, it determines how the view is positioned inside the cell.","title":" init "},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-init-/#init","text":"Cell() Represents a container for a child view. A grid cell can occupy more than one row and column. In addition to that, it determines how the view is positioned inside the cell.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/column-span/","text":"View-common / view.core.views.layouts / GridLayout / Cell / columnSpan columnSpan var columnSpan: Int The number of columns the cell occupies.","title":"Column span"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/column-span/#columnspan","text":"var columnSpan: Int The number of columns the cell occupies.","title":"columnSpan"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/column/","text":"View-common / view.core.views.layouts / GridLayout / Cell / column column var column: Int The index of the starting columns of the cell.","title":"Column"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/column/#column","text":"var column: Int The index of the starting columns of the cell.","title":"column"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/horizontal-alignment/","text":"View-common / view.core.views.layouts / GridLayout / Cell / horizontalAlignment horizontalAlignment var horizontalAlignment: HorizontalAlignment The horizontal alignment of the view inside the cell.","title":"Horizontal alignment"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/horizontal-alignment/#horizontalalignment","text":"var horizontalAlignment: HorizontalAlignment The horizontal alignment of the view inside the cell.","title":"horizontalAlignment"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/row-span/","text":"View-common / view.core.views.layouts / GridLayout / Cell / rowSpan rowSpan var rowSpan: Int The number of rows the cell occupies.","title":"Row span"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/row-span/#rowspan","text":"var rowSpan: Int The number of rows the cell occupies.","title":"rowSpan"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/row/","text":"View-common / view.core.views.layouts / GridLayout / Cell / row row var row: Int The index of the starting row the cell.","title":"Row"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/row/#row","text":"var row: Int The index of the starting row the cell.","title":"row"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/vertical-alignment/","text":"View-common / view.core.views.layouts / GridLayout / Cell / verticalAlignment verticalAlignment var verticalAlignment: VerticalAlignment The vertical alignment of the view inside the cell.","title":"Vertical alignment"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/vertical-alignment/#verticalalignment","text":"var verticalAlignment: VerticalAlignment The vertical alignment of the view inside the cell.","title":"verticalAlignment"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/","text":"View-common / view.core.views.layouts / GridLayout / Cell / HorizontalAlignment HorizontalAlignment enum class HorizontalAlignment Represents the view's horizontal alignment inside the cell. Enum Values START Aligns the view to the start edge of the cell. END Aligns the view to the end edge of the cell. CENTER Centers the view horizontally in the cell.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/#horizontalalignment","text":"enum class HorizontalAlignment Represents the view's horizontal alignment inside the cell.","title":"HorizontalAlignment"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/#enum-values","text":"START Aligns the view to the start edge of the cell. END Aligns the view to the end edge of the cell. CENTER Centers the view horizontally in the cell.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/-c-e-n-t-e-r/","text":"View-common / view.core.views.layouts / GridLayout / Cell / HorizontalAlignment / CENTER CENTER CENTER Centers the view horizontally in the cell.","title":" c e n t e r"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/-c-e-n-t-e-r/#center","text":"CENTER Centers the view horizontally in the cell.","title":"CENTER"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/-e-n-d/","text":"View-common / view.core.views.layouts / GridLayout / Cell / HorizontalAlignment / END END END Aligns the view to the end edge of the cell.","title":" e n d"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/-e-n-d/#end","text":"END Aligns the view to the end edge of the cell.","title":"END"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/-s-t-a-r-t/","text":"View-common / view.core.views.layouts / GridLayout / Cell / HorizontalAlignment / START START START Aligns the view to the start edge of the cell.","title":" s t a r t"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-horizontal-alignment/-s-t-a-r-t/#start","text":"START Aligns the view to the start edge of the cell.","title":"START"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/","text":"View-common / view.core.views.layouts / GridLayout / Cell / VerticalAlignment VerticalAlignment enum class VerticalAlignment Represents the view's vertical alignment inside the cell. Enum Values TOP Aligns the view to the top edge of the cell. BOTTOM Aligns the view to the bottom edge of the cell. CENTER Centers the view vertically in the cell.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/#verticalalignment","text":"enum class VerticalAlignment Represents the view's vertical alignment inside the cell.","title":"VerticalAlignment"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/#enum-values","text":"TOP Aligns the view to the top edge of the cell. BOTTOM Aligns the view to the bottom edge of the cell. CENTER Centers the view vertically in the cell.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/-b-o-t-t-o-m/","text":"View-common / view.core.views.layouts / GridLayout / Cell / VerticalAlignment / BOTTOM BOTTOM BOTTOM Aligns the view to the bottom edge of the cell.","title":" b o t t o m"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/-b-o-t-t-o-m/#bottom","text":"BOTTOM Aligns the view to the bottom edge of the cell.","title":"BOTTOM"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/-c-e-n-t-e-r/","text":"View-common / view.core.views.layouts / GridLayout / Cell / VerticalAlignment / CENTER CENTER CENTER Centers the view vertically in the cell.","title":" c e n t e r"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/-c-e-n-t-e-r/#center","text":"CENTER Centers the view vertically in the cell.","title":"CENTER"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/-t-o-p/","text":"View-common / view.core.views.layouts / GridLayout / Cell / VerticalAlignment / TOP TOP TOP Aligns the view to the top edge of the cell.","title":" t o p"},{"location":"Documentation/View/view.core.views.layouts/-grid-layout/-cell/-vertical-alignment/-t-o-p/#top","text":"TOP Aligns the view to the top edge of the cell.","title":"TOP"},{"location":"Documentation/View/view.core.views.layouts/-layout/","text":"View-common / view.core.views.layouts / Layout Layout abstract class Layout : View This is the base class for layout views, which are views that contain other views. All non-leaf nodes of a view tree should be an instance of a subclass of the Layout class. This class implements only basic operations common to all layouts which are adding and removing child views, the logic needed for positioning child views is to be implemented by subclasses. Constructors init Layout() This is the base class for layout views, which are views that contain other views. Properties childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically. Inherited Properties androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. Functions addChild open fun addChild(child: View ): Boolean Adds a child view to the layout. children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout. Inheritors GridLayout open class GridLayout : Layout A layout where child views are positioned in a rectangular grid. LinearLayout open class LinearLayout : Layout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. RelativeLayout open class RelativeLayout : Layout A layout where child views are positioned relative to each other and to the layout itself.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-layout/#layout","text":"abstract class Layout : View This is the base class for layout views, which are views that contain other views. All non-leaf nodes of a view tree should be an instance of a subclass of the Layout class. This class implements only basic operations common to all layouts which are adding and removing child views, the logic needed for positioning child views is to be implemented by subclasses.","title":"Layout"},{"location":"Documentation/View/view.core.views.layouts/-layout/#constructors","text":"init Layout() This is the base class for layout views, which are views that contain other views.","title":"Constructors"},{"location":"Documentation/View/view.core.views.layouts/-layout/#properties","text":"childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically.","title":"Properties"},{"location":"Documentation/View/view.core.views.layouts/-layout/#inherited-properties","text":"androidExtras var androidExtras: HasKeys ? Key-Value pairs to be interpreted by an Android specific ViewTreeRenderer . backgroundColor var backgroundColor: Long ? Specifies the background color of a value. This value is to be interpreted as a hexadecimal RGBA representation of the color. disabled var disabled: Boolean Indicates whether a view is disabled or not. Although the behaviour of a disabled view varies from one UI element to another; common behaviour exists for all UI elements such as being unresponsive to click events. height var height: Double Describes the view's width. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions. id var id: Int A unique integer value that identifies a view instance. iosExtras var iosExtras: HasKeys ? Key-Value pairs to be interpreted by an iOs specific ViewTreeRenderer . marginBottom var marginBottom: Double ? Specifies the value of the bottom margin of the view. marginEnd var marginEnd: Double ? Specifies the values of the margin at the end of the view. marginStart var marginStart: Double ? Specifies the values of the margin ath the beginning of the view. marginTop var marginTop: Double ? Specifies the value of the top margin of the view. name val name: String A name associated with a UI element. Usually it is the class name of the view sub-class. onClickListener var onClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked. onLongClickListener var onLongClickListener: ( View ) - Unit A listener to be invoked whenever a the UI element corresponding to this view is clicked and held. onResize var onResize: ( View ) - Unit A listener to b invoked whenever the UI element corresponding to this view is resized. paddingBottom var paddingBottom: Double ? Specifies the value of the bottom padding of the view. paddingEnd var paddingEnd: Double ? Specifies the values of the padding at the end of the view. paddingStart var paddingStart: Double ? Specifies the values of the padding a the beginning of the view. paddingTop var paddingTop: Double ? Specifies the value of the top padding of the view. parent var parent: Layout ? A reference to the view's parent. Semantically, if this value is null then that implies the view is either unattached to a View Tree or it is the root of a View Tree. theme var theme: String ? The Theme to be applied to this view instance. visibility var visibility: Visibility Indicates the visibility status of the view. webExtras var webExtras: HasKeys ? Key-Value pairs to be interpreted by a Web specific ViewTreeRenderer . width var width: Double Describes the view's height. Values between 0,1 represent relative dimensions while values greater than 1 represent absolute dimensions.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.layouts/-layout/#functions","text":"addChild open fun addChild(child: View ): Boolean Adds a child view to the layout. children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout.","title":"Functions"},{"location":"Documentation/View/view.core.views.layouts/-layout/#inheritors","text":"GridLayout open class GridLayout : Layout A layout where child views are positioned in a rectangular grid. LinearLayout open class LinearLayout : Layout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. RelativeLayout open class RelativeLayout : Layout A layout where child views are positioned relative to each other and to the layout itself.","title":"Inheritors"},{"location":"Documentation/View/view.core.views.layouts/-layout/-init-/","text":"View-common / view.core.views.layouts / Layout / init init Layout() This is the base class for layout views, which are views that contain other views. All non-leaf nodes of a view tree should be an instance of a subclass of the Layout class. This class implements only basic operations common to all layouts which are adding and removing child views, the logic needed for positioning child views is to be implemented by subclasses.","title":" init "},{"location":"Documentation/View/view.core.views.layouts/-layout/-init-/#init","text":"Layout() This is the base class for layout views, which are views that contain other views. All non-leaf nodes of a view tree should be an instance of a subclass of the Layout class. This class implements only basic operations common to all layouts which are adding and removing child views, the logic needed for positioning child views is to be implemented by subclasses.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.layouts/-layout/add-child/","text":"View-common / view.core.views.layouts / Layout / addChild addChild open fun addChild(child: View ): Boolean Adds a child view to the layout. When the child is added, the layout would be re-rendered. Parameters child - The view to be added. Return True if the child was added","title":"Add child"},{"location":"Documentation/View/view.core.views.layouts/-layout/add-child/#addchild","text":"open fun addChild(child: View ): Boolean Adds a child view to the layout. When the child is added, the layout would be re-rendered.","title":"addChild"},{"location":"Documentation/View/view.core.views.layouts/-layout/add-child/#parameters","text":"child - The view to be added. Return True if the child was added","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-layout/child-views/","text":"View-common / view.core.views.layouts / Layout / childViews childViews protected val childViews: MutableCollection View A mutable collection containing the child views. It is implemented using the ObservableCollection property delegate which notifies the ViewTreeRenderer whenever a child is added or removed.","title":"Child views"},{"location":"Documentation/View/view.core.views.layouts/-layout/child-views/#childviews","text":"protected val childViews: MutableCollection View A mutable collection containing the child views. It is implemented using the ObservableCollection property delegate which notifies the ViewTreeRenderer whenever a child is added or removed.","title":"childViews"},{"location":"Documentation/View/view.core.views.layouts/-layout/children/","text":"View-common / view.core.views.layouts / Layout / children children fun children(): ERROR CLASS Exposes the child views. Return List containing the child views.","title":"Children"},{"location":"Documentation/View/view.core.views.layouts/-layout/children/#children","text":"fun children(): ERROR CLASS Exposes the child views. Return List containing the child views.","title":"children"},{"location":"Documentation/View/view.core.views.layouts/-layout/find/","text":"View-common / view.core.views.layouts / Layout / find find fun find(id: String ): View Returns the direct or indirect child view having the specified ID. The String representation of the ID is mapped to the view's ID using the String.toID extension method. Internally, this method searches for the child view using the Breadth-First Search algorithm. Parameters id - String representation of the ID Exceptions NoSuchElementException - If no child view was found with the specified ID. Return The direct or indirect child having the specified ID. fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. Internally, this method searches for the child view using the Breadth-First Search algorithm. Parameters id - The view's ID Exceptions NoSuchElementException - If no child view was found with the specified ID. Return The direct or indirect child having the specified ID.","title":"Find"},{"location":"Documentation/View/view.core.views.layouts/-layout/find/#find","text":"fun find(id: String ): View Returns the direct or indirect child view having the specified ID. The String representation of the ID is mapped to the view's ID using the String.toID extension method. Internally, this method searches for the child view using the Breadth-First Search algorithm.","title":"find"},{"location":"Documentation/View/view.core.views.layouts/-layout/find/#parameters","text":"id - String representation of the ID","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-layout/find/#exceptions","text":"NoSuchElementException - If no child view was found with the specified ID. Return The direct or indirect child having the specified ID. fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. Internally, this method searches for the child view using the Breadth-First Search algorithm.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.layouts/-layout/find/#parameters_1","text":"id - The view's ID","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-layout/find/#exceptions_1","text":"NoSuchElementException - If no child view was found with the specified ID. Return The direct or indirect child having the specified ID.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.layouts/-layout/remove-child/","text":"View-common / view.core.views.layouts / Layout / removeChild removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout. When the child is removed, the layout would be re-renderd. Parameters child - The child view to be removed Return True if the child was removed","title":"Remove child"},{"location":"Documentation/View/view.core.views.layouts/-layout/remove-child/#removechild","text":"open fun removeChild(child: View ): Boolean Removes a child from the layout. When the child is removed, the layout would be re-renderd.","title":"removeChild"},{"location":"Documentation/View/view.core.views.layouts/-layout/remove-child/#parameters","text":"child - The child view to be removed Return True if the child was removed","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-layout/scroll-x/","text":"View-common / view.core.views.layouts / Layout / scrollX scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. Getter Determines if the layout can be scrolled horizontally. Setter Determines if the layout can be scrolled horizontally.","title":"Scroll x"},{"location":"Documentation/View/view.core.views.layouts/-layout/scroll-x/#scrollx","text":"var scrollX: Boolean Determines if the layout can be scrolled horizontally. Getter Determines if the layout can be scrolled horizontally. Setter Determines if the layout can be scrolled horizontally.","title":"scrollX"},{"location":"Documentation/View/view.core.views.layouts/-layout/scroll-y/","text":"View-common / view.core.views.layouts / Layout / scrollY scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically. Getter Determines if the layout can be scrolled vertically. Setter Determines if the layout can be scrolled vertically.","title":"Scroll y"},{"location":"Documentation/View/view.core.views.layouts/-layout/scroll-y/#scrolly","text":"var scrollY: Boolean Determines if the layout can be scrolled vertically. Getter Determines if the layout can be scrolled vertically. Setter Determines if the layout can be scrolled vertically.","title":"scrollY"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/","text":"View-common / view.core.views.layouts / LinearLayout LinearLayout open class LinearLayout : Layout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. Types Direction enum class Direction Represents a direction, horizontal or vertical, that the child views will be arranged in. Constructors init LinearLayout() This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically. Properties direction var direction: Direction ? Specifies the direction, horizontal or vertical, that the child views will be arranged in. Inherited Properties childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically. Inherited Functions addChild open fun addChild(child: View ): Boolean Adds a child view to the layout. children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/#linearlayout","text":"open class LinearLayout : Layout This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically.","title":"LinearLayout"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/#types","text":"Direction enum class Direction Represents a direction, horizontal or vertical, that the child views will be arranged in.","title":"Types"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/#constructors","text":"init LinearLayout() This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically.","title":"Constructors"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/#properties","text":"direction var direction: Direction ? Specifies the direction, horizontal or vertical, that the child views will be arranged in.","title":"Properties"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/#inherited-properties","text":"childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/#inherited-functions","text":"addChild open fun addChild(child: View ): Boolean Adds a child view to the layout. children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID. removeChild open fun removeChild(child: View ): Boolean Removes a child from the layout.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-init-/","text":"View-common / view.core.views.layouts / LinearLayout / init init LinearLayout() This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically.","title":" init "},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-init-/#init","text":"LinearLayout() This class represents a layout that arranges its elements in a linear manner, either horizontally or vertically.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/direction/","text":"View-common / view.core.views.layouts / LinearLayout / direction direction var direction: Direction ? Specifies the direction, horizontal or vertical, that the child views will be arranged in. Getter Specifies the direction, horizontal or vertical, that the child views will be arranged in. Setter Specifies the direction, horizontal or vertical, that the child views will be arranged in.","title":"Direction"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/direction/#direction","text":"var direction: Direction ? Specifies the direction, horizontal or vertical, that the child views will be arranged in. Getter Specifies the direction, horizontal or vertical, that the child views will be arranged in. Setter Specifies the direction, horizontal or vertical, that the child views will be arranged in.","title":"direction"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/","text":"View-common / view.core.views.layouts / LinearLayout / Direction Direction enum class Direction Represents a direction, horizontal or vertical, that the child views will be arranged in. Enum Values VERTICAL Arrange child views vertically. HORIZONTAL Arrange child views horizontally.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/#direction","text":"enum class Direction Represents a direction, horizontal or vertical, that the child views will be arranged in.","title":"Direction"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/#enum-values","text":"VERTICAL Arrange child views vertically. HORIZONTAL Arrange child views horizontally.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/-h-o-r-i-z-o-n-t-a-l/","text":"View-common / view.core.views.layouts / LinearLayout / Direction / HORIZONTAL HORIZONTAL HORIZONTAL Arrange child views horizontally.","title":" h o r i z o n t a l"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/-h-o-r-i-z-o-n-t-a-l/#horizontal","text":"HORIZONTAL Arrange child views horizontally.","title":"HORIZONTAL"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/-v-e-r-t-i-c-a-l/","text":"View-common / view.core.views.layouts / LinearLayout / Direction / VERTICAL VERTICAL VERTICAL Arrange child views vertically.","title":" v e r t i c a l"},{"location":"Documentation/View/view.core.views.layouts/-linear-layout/-direction/-v-e-r-t-i-c-a-l/#vertical","text":"VERTICAL Arrange child views vertically.","title":"VERTICAL"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/","text":"View-common / view.core.views.layouts / RelativeLayout RelativeLayout open class RelativeLayout : Layout A layout where child views are positioned relative to each other and to the layout itself. The way child views are positioned is determined by a set of rules defined in RelativeLayout.Positioning . Note that to achieve a correct behaviour, there should be no conflicting rules or circular dependencies between the position of the child views or between the size of the layout and the position of the child views. Types Positioning enum class Positioning Contains rules that determine a child view's position inside a RelativeLayout . Constructors init RelativeLayout() A layout where child views are positioned relative to each other and to the layout itself. Properties conflictingPositionings val conflictingPositionings: ERROR CLASS Contains sets of conflicting rules. positions val positions: MutableList List ERROR CLASS Positioning , Int Contains the position rules of child views. Inherited Properties childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically. Functions addChild fun addChild(child: View , positionings: List ERROR CLASS Positioning , Int ): Boolean open fun addChild(child: View ): Boolean Adds a view to the layout. removeChild open fun removeChild(child: View ): Boolean Removes a child view. Inherited Functions children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#relativelayout","text":"open class RelativeLayout : Layout A layout where child views are positioned relative to each other and to the layout itself. The way child views are positioned is determined by a set of rules defined in RelativeLayout.Positioning . Note that to achieve a correct behaviour, there should be no conflicting rules or circular dependencies between the position of the child views or between the size of the layout and the position of the child views.","title":"RelativeLayout"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#types","text":"Positioning enum class Positioning Contains rules that determine a child view's position inside a RelativeLayout .","title":"Types"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#constructors","text":"init RelativeLayout() A layout where child views are positioned relative to each other and to the layout itself.","title":"Constructors"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#properties","text":"conflictingPositionings val conflictingPositionings: ERROR CLASS Contains sets of conflicting rules. positions val positions: MutableList List ERROR CLASS Positioning , Int Contains the position rules of child views.","title":"Properties"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#inherited-properties","text":"childViews val childViews: MutableCollection View A mutable collection containing the child views. scrollX var scrollX: Boolean Determines if the layout can be scrolled horizontally. scrollY var scrollY: Boolean Determines if the layout can be scrolled vertically.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#functions","text":"addChild fun addChild(child: View , positionings: List ERROR CLASS Positioning , Int ): Boolean open fun addChild(child: View ): Boolean Adds a view to the layout. removeChild open fun removeChild(child: View ): Boolean Removes a child view.","title":"Functions"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/#inherited-functions","text":"children fun children(): ERROR CLASS Exposes the child views. find fun find(id: String ): View fun find(id: Int ): View Returns the direct or indirect child view having the specified ID.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-init-/","text":"View-common / view.core.views.layouts / RelativeLayout / init init RelativeLayout() A layout where child views are positioned relative to each other and to the layout itself. The way child views are positioned is determined by a set of rules defined in RelativeLayout.Positioning . Note that to achieve a correct behaviour, there should be no conflicting rules or circular dependencies between the position of the child views or between the size of the layout and the position of the child views.","title":" init "},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-init-/#init","text":"RelativeLayout() A layout where child views are positioned relative to each other and to the layout itself. The way child views are positioned is determined by a set of rules defined in RelativeLayout.Positioning . Note that to achieve a correct behaviour, there should be no conflicting rules or circular dependencies between the position of the child views or between the size of the layout and the position of the child views.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/add-child/","text":"View-common / view.core.views.layouts / RelativeLayout / addChild addChild fun addChild(child: View , positionings: List ERROR CLASS Positioning , Int ): Boolean Adds a view to the layout. Parameters child - The view to add. positionings - List of pairs containing the position rule and the ID of the view is positioned relative to. Exceptions IllegalArgumentException - If the positioning list contains conflicting rules. Return True if the child was added, false otherwise open fun addChild(child: View ): Boolean Overrides Layout.addChild Adds a view to the layout. Views added using this method would have the Positioning.ALIGN_PARENT_TOP rule by default. Parameters child - The view to be added Return True if the child was added, false otherwise.","title":"Add child"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/add-child/#addchild","text":"fun addChild(child: View , positionings: List ERROR CLASS Positioning , Int ): Boolean Adds a view to the layout.","title":"addChild"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/add-child/#parameters","text":"child - The view to add. positionings - List of pairs containing the position rule and the ID of the view is positioned relative to.","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/add-child/#exceptions","text":"IllegalArgumentException - If the positioning list contains conflicting rules. Return True if the child was added, false otherwise open fun addChild(child: View ): Boolean Overrides Layout.addChild Adds a view to the layout. Views added using this method would have the Positioning.ALIGN_PARENT_TOP rule by default.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/add-child/#parameters_1","text":"child - The view to be added Return True if the child was added, false otherwise.","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/conflicting-positionings/","text":"View-common / view.core.views.layouts / RelativeLayout / conflictingPositionings conflictingPositionings val conflictingPositionings: ERROR CLASS Contains sets of conflicting rules. Generally, rules of the same category, horizontal or vertical, conflict with each other.","title":"Conflicting positionings"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/conflicting-positionings/#conflictingpositionings","text":"val conflictingPositionings: ERROR CLASS Contains sets of conflicting rules. Generally, rules of the same category, horizontal or vertical, conflict with each other.","title":"conflictingPositionings"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/positions/","text":"View-common / view.core.views.layouts / RelativeLayout / positions positions val positions: MutableList List ERROR CLASS Positioning , Int Contains the position rules of child views. The list of rules at index i correspond to the rules of the i-th child view.","title":"Positions"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/positions/#positions","text":"val positions: MutableList List ERROR CLASS Positioning , Int Contains the position rules of child views. The list of rules at index i correspond to the rules of the i-th child view.","title":"positions"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/remove-child/","text":"View-common / view.core.views.layouts / RelativeLayout / removeChild removeChild open fun removeChild(child: View ): Boolean Overrides Layout.removeChild Removes a child view. Parameters child - The view to be removed. Return True if the child was removed, false otherwise.","title":"Remove child"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/remove-child/#removechild","text":"open fun removeChild(child: View ): Boolean Overrides Layout.removeChild Removes a child view.","title":"removeChild"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/remove-child/#parameters","text":"child - The view to be removed. Return True if the child was removed, false otherwise.","title":"Parameters"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning Positioning enum class Positioning Contains rules that determine a child view's position inside a RelativeLayout . Rules are divided into two types, rules that determine the child's horizontal and vertical position. Note that you are not allowed to have multiple rules that belong to the same category. Enum Values ALIGN_PARENT_TOP Aligns the child view to its parent's top edge. ALIGN_PARENT_BOTTOM Aligns the child view to its parent's bottom edge. ALIGN_PARENT_START Aligns the child view to its parent's start. ALIGN_PARENT_END Aligns the child view to it's parent end. CENTER_VERTICAL Centers the child vertically in its parent. CENTER_HORIZONTAL Centers the child horizontally in its parent TOP_OF Aligns the bottom edge of the view to the top edge of another child view. BOTTOM_OF Aligns the top edge of the view to the bottom edge of another child view. START_OF Aligns the end edge of the view to the start edge of another child view. END_OF Aligns the start edge of the view to the end edge of another child view. ALIGN_TOP Aligns the top edge of the view to the top edge of another child view. ALIGN_BOTTOM Aligns the bottom edge of the view to the bottom edge of another child view. ALIGN_START Aligns the start edge of the view to the start edge of another child view. ALIGN_END Aligns the end edge of the view to the end edge of another child view.","title":"Index"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/#positioning","text":"enum class Positioning Contains rules that determine a child view's position inside a RelativeLayout . Rules are divided into two types, rules that determine the child's horizontal and vertical position. Note that you are not allowed to have multiple rules that belong to the same category.","title":"Positioning"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/#enum-values","text":"ALIGN_PARENT_TOP Aligns the child view to its parent's top edge. ALIGN_PARENT_BOTTOM Aligns the child view to its parent's bottom edge. ALIGN_PARENT_START Aligns the child view to its parent's start. ALIGN_PARENT_END Aligns the child view to it's parent end. CENTER_VERTICAL Centers the child vertically in its parent. CENTER_HORIZONTAL Centers the child horizontally in its parent TOP_OF Aligns the bottom edge of the view to the top edge of another child view. BOTTOM_OF Aligns the top edge of the view to the bottom edge of another child view. START_OF Aligns the end edge of the view to the start edge of another child view. END_OF Aligns the start edge of the view to the end edge of another child view. ALIGN_TOP Aligns the top edge of the view to the top edge of another child view. ALIGN_BOTTOM Aligns the bottom edge of the view to the bottom edge of another child view. ALIGN_START Aligns the start edge of the view to the start edge of another child view. ALIGN_END Aligns the end edge of the view to the end edge of another child view.","title":"Enum Values"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-b-o-t-t-o-m/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_BOTTOM ALIGN_BOTTOM ALIGN_BOTTOM Aligns the bottom edge of the view to the bottom edge of another child view.","title":" a l i g n  b o t t o m"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-b-o-t-t-o-m/#align_bottom","text":"ALIGN_BOTTOM Aligns the bottom edge of the view to the bottom edge of another child view.","title":"ALIGN_BOTTOM"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-e-n-d/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_END ALIGN_END ALIGN_END Aligns the end edge of the view to the end edge of another child view.","title":" a l i g n  e n d"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-e-n-d/#align_end","text":"ALIGN_END Aligns the end edge of the view to the end edge of another child view.","title":"ALIGN_END"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-b-o-t-t-o-m/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_PARENT_BOTTOM ALIGN_PARENT_BOTTOM ALIGN_PARENT_BOTTOM Aligns the child view to its parent's bottom edge.","title":" a l i g n  p a r e n t  b o t t o m"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-b-o-t-t-o-m/#align_parent_bottom","text":"ALIGN_PARENT_BOTTOM Aligns the child view to its parent's bottom edge.","title":"ALIGN_PARENT_BOTTOM"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-e-n-d/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_PARENT_END ALIGN_PARENT_END ALIGN_PARENT_END Aligns the child view to it's parent end.","title":" a l i g n  p a r e n t  e n d"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-e-n-d/#align_parent_end","text":"ALIGN_PARENT_END Aligns the child view to it's parent end.","title":"ALIGN_PARENT_END"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-s-t-a-r-t/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_PARENT_START ALIGN_PARENT_START ALIGN_PARENT_START Aligns the child view to its parent's start.","title":" a l i g n  p a r e n t  s t a r t"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-s-t-a-r-t/#align_parent_start","text":"ALIGN_PARENT_START Aligns the child view to its parent's start.","title":"ALIGN_PARENT_START"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-t-o-p/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_PARENT_TOP ALIGN_PARENT_TOP ALIGN_PARENT_TOP Aligns the child view to its parent's top edge.","title":" a l i g n  p a r e n t  t o p"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-p-a-r-e-n-t_-t-o-p/#align_parent_top","text":"ALIGN_PARENT_TOP Aligns the child view to its parent's top edge.","title":"ALIGN_PARENT_TOP"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-s-t-a-r-t/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_START ALIGN_START ALIGN_START Aligns the start edge of the view to the start edge of another child view.","title":" a l i g n  s t a r t"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-s-t-a-r-t/#align_start","text":"ALIGN_START Aligns the start edge of the view to the start edge of another child view.","title":"ALIGN_START"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-t-o-p/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / ALIGN_TOP ALIGN_TOP ALIGN_TOP Aligns the top edge of the view to the top edge of another child view.","title":" a l i g n  t o p"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-a-l-i-g-n_-t-o-p/#align_top","text":"ALIGN_TOP Aligns the top edge of the view to the top edge of another child view.","title":"ALIGN_TOP"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-b-o-t-t-o-m_-o-f/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / BOTTOM_OF BOTTOM_OF BOTTOM_OF Aligns the top edge of the view to the bottom edge of another child view.","title":" b o t t o m  o f"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-b-o-t-t-o-m_-o-f/#bottom_of","text":"BOTTOM_OF Aligns the top edge of the view to the bottom edge of another child view.","title":"BOTTOM_OF"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-c-e-n-t-e-r_-h-o-r-i-z-o-n-t-a-l/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / CENTER_HORIZONTAL CENTER_HORIZONTAL CENTER_HORIZONTAL Centers the child horizontally in its parent","title":" c e n t e r  h o r i z o n t a l"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-c-e-n-t-e-r_-h-o-r-i-z-o-n-t-a-l/#center_horizontal","text":"CENTER_HORIZONTAL Centers the child horizontally in its parent","title":"CENTER_HORIZONTAL"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-c-e-n-t-e-r_-v-e-r-t-i-c-a-l/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / CENTER_VERTICAL CENTER_VERTICAL CENTER_VERTICAL Centers the child vertically in its parent.","title":" c e n t e r  v e r t i c a l"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-c-e-n-t-e-r_-v-e-r-t-i-c-a-l/#center_vertical","text":"CENTER_VERTICAL Centers the child vertically in its parent.","title":"CENTER_VERTICAL"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-e-n-d_-o-f/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / END_OF END_OF END_OF Aligns the start edge of the view to the end edge of another child view.","title":" e n d  o f"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-e-n-d_-o-f/#end_of","text":"END_OF Aligns the start edge of the view to the end edge of another child view.","title":"END_OF"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-s-t-a-r-t_-o-f/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / START_OF START_OF START_OF Aligns the end edge of the view to the start edge of another child view.","title":" s t a r t  o f"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-s-t-a-r-t_-o-f/#start_of","text":"START_OF Aligns the end edge of the view to the start edge of another child view.","title":"START_OF"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-t-o-p_-o-f/","text":"View-common / view.core.views.layouts / RelativeLayout / Positioning / TOP_OF TOP_OF TOP_OF Aligns the bottom edge of the view to the top edge of another child view.","title":" t o p  o f"},{"location":"Documentation/View/view.core.views.layouts/-relative-layout/-positioning/-t-o-p_-o-f/#top_of","text":"TOP_OF Aligns the bottom edge of the view to the top edge of another child view.","title":"TOP_OF"},{"location":"Documentation/View/view.core.views.property-delegates/","text":"View-common / view.core.views.propertyDelegates Package view.core.views.propertyDelegates This package contains property delegates for View properties. Typically, view property delegates serve two purposes, the first is to notify the ViewTreeRenderer about any change in the property's value while the second purpose is to ensure using Validators that the value of the property meets certain conditions. Types AbstractViewProperty abstract class AbstractViewProperty T This is the base class for view mutable property delegates. LateInitVal open class LateInitVal T Allows an immutable property to be initialized later in the class' lifetime. NullableViewProperty open class NullableViewProperty T : Any : AbstractViewProperty T ? Represents a nullable and mutable view property. ViewProperty open class ViewProperty T : Any : AbstractViewProperty T Represents a non-nullable and mutable view property.","title":"Index"},{"location":"Documentation/View/view.core.views.property-delegates/#package-viewcoreviewspropertydelegates","text":"This package contains property delegates for View properties. Typically, view property delegates serve two purposes, the first is to notify the ViewTreeRenderer about any change in the property's value while the second purpose is to ensure using Validators that the value of the property meets certain conditions.","title":"Package view.core.views.propertyDelegates"},{"location":"Documentation/View/view.core.views.property-delegates/#types","text":"AbstractViewProperty abstract class AbstractViewProperty T This is the base class for view mutable property delegates. LateInitVal open class LateInitVal T Allows an immutable property to be initialized later in the class' lifetime. NullableViewProperty open class NullableViewProperty T : Any : AbstractViewProperty T ? Represents a nullable and mutable view property. ViewProperty open class ViewProperty T : Any : AbstractViewProperty T Represents a non-nullable and mutable view property.","title":"Types"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/","text":"View-common / view.core.views.propertyDelegates / AbstractViewProperty AbstractViewProperty abstract class AbstractViewProperty T This is the base class for view mutable property delegates. When a value is set, the subclass delegate should notify the ViewTreeRenderer of the change in the view's property. Constructors init AbstractViewProperty(value: T ) Creates the delegate with an initial value Properties renderer val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. value var value: T The initial value of the property. Functions getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value. Inheritors NullableViewProperty open class NullableViewProperty T : Any : AbstractViewProperty T ? Represents a nullable and mutable view property. ViewProperty open class ViewProperty T : Any : AbstractViewProperty T Represents a non-nullable and mutable view property.","title":"Index"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/#abstractviewproperty","text":"abstract class AbstractViewProperty T This is the base class for view mutable property delegates. When a value is set, the subclass delegate should notify the ViewTreeRenderer of the change in the view's property.","title":"AbstractViewProperty"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/#constructors","text":"init AbstractViewProperty(value: T ) Creates the delegate with an initial value","title":"Constructors"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/#properties","text":"renderer val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. value var value: T The initial value of the property.","title":"Properties"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/#functions","text":"getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"Functions"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/#inheritors","text":"NullableViewProperty open class NullableViewProperty T : Any : AbstractViewProperty T ? Represents a nullable and mutable view property. ViewProperty open class ViewProperty T : Any : AbstractViewProperty T Represents a non-nullable and mutable view property.","title":"Inheritors"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/-init-/","text":"View-common / view.core.views.propertyDelegates / AbstractViewProperty / init init AbstractViewProperty(value: T ) Creates the delegate with an initial value Constructor Creates the delegate with an initial value","title":" init "},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/-init-/#init","text":"AbstractViewProperty(value: T ) Creates the delegate with an initial value Constructor Creates the delegate with an initial value","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/get-value/","text":"View-common / view.core.views.propertyDelegates / AbstractViewProperty / getValue getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"Get value"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/get-value/#getvalue","text":"open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"getValue"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/renderer/","text":"View-common / view.core.views.propertyDelegates / AbstractViewProperty / renderer renderer protected val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. Getter The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of.","title":"Renderer"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/renderer/#renderer","text":"protected val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. Getter The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of.","title":"renderer"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/value/","text":"View-common / view.core.views.propertyDelegates / AbstractViewProperty / value value protected var value: T The initial value of the property. Property value - The initial value of the property.","title":"Value"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/value/#value","text":"protected var value: T The initial value of the property.","title":"value"},{"location":"Documentation/View/view.core.views.property-delegates/-abstract-view-property/value/#property","text":"value - The initial value of the property.","title":"Property"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/","text":"View-common / view.core.views.propertyDelegates / LateInitVal LateInitVal open class LateInitVal T Allows an immutable property to be initialized later in the class' lifetime. The purpose of this delegate is to overcome the limitations of the builtin 'lateinit' modifier which cannot be applied to properties of primitive types and immutable properties. Constructors init LateInitVal() Allows an immutable property to be initialized later in the class' lifetime. Functions getValue open fun getValue(thisRef: Any , property: KProperty * ): T Returns the property value. setValue open fun setValue(thisRef: Any , property: KProperty * , value: T ): Unit Sets the property value.","title":"Index"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/#lateinitval","text":"open class LateInitVal T Allows an immutable property to be initialized later in the class' lifetime. The purpose of this delegate is to overcome the limitations of the builtin 'lateinit' modifier which cannot be applied to properties of primitive types and immutable properties.","title":"LateInitVal"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/#constructors","text":"init LateInitVal() Allows an immutable property to be initialized later in the class' lifetime.","title":"Constructors"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/#functions","text":"getValue open fun getValue(thisRef: Any , property: KProperty * ): T Returns the property value. setValue open fun setValue(thisRef: Any , property: KProperty * , value: T ): Unit Sets the property value.","title":"Functions"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/-init-/","text":"View-common / view.core.views.propertyDelegates / LateInitVal / init init LateInitVal() Allows an immutable property to be initialized later in the class' lifetime. The purpose of this delegate is to overcome the limitations of the builtin 'lateinit' modifier which cannot be applied to properties of primitive types and immutable properties.","title":" init "},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/-init-/#init","text":"LateInitVal() Allows an immutable property to be initialized later in the class' lifetime. The purpose of this delegate is to overcome the limitations of the builtin 'lateinit' modifier which cannot be applied to properties of primitive types and immutable properties.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/get-value/","text":"View-common / view.core.views.propertyDelegates / LateInitVal / getValue getValue open fun getValue(thisRef: Any , property: KProperty * ): T Returns the property value. Exceptions IllegalStateException - If the property isn't initialized.","title":"Get value"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/get-value/#getvalue","text":"open fun getValue(thisRef: Any , property: KProperty * ): T Returns the property value.","title":"getValue"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/get-value/#exceptions","text":"IllegalStateException - If the property isn't initialized.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/set-value/","text":"View-common / view.core.views.propertyDelegates / LateInitVal / setValue setValue open fun setValue(thisRef: Any , property: KProperty * , value: T ): Unit Sets the property value. Exceptions IllegalStateException - If the property is already initialized.","title":"Set value"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/set-value/#setvalue","text":"open fun setValue(thisRef: Any , property: KProperty * , value: T ): Unit Sets the property value.","title":"setValue"},{"location":"Documentation/View/view.core.views.property-delegates/-late-init-val/set-value/#exceptions","text":"IllegalStateException - If the property is already initialized.","title":"Exceptions"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/","text":"View-common / view.core.views.propertyDelegates / NullableViewProperty NullableViewProperty open class NullableViewProperty T : Any : AbstractViewProperty T ? Represents a nullable and mutable view property. Constructors init NullableViewProperty(validator: Validator T ?) Initialized the property with a null value. NullableViewProperty(value: T ? = null, validator: Validator T ? = null) Creates the delegate with an initial value Inherited Properties renderer val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. value var value: T The initial value of the property. Functions setValue open fun setValue(thisRef: View , property: KProperty * , value: T ?): Unit Sets the property value. Inherited Functions getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"Index"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/#nullableviewproperty","text":"open class NullableViewProperty T : Any : AbstractViewProperty T ? Represents a nullable and mutable view property.","title":"NullableViewProperty"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/#constructors","text":"init NullableViewProperty(validator: Validator T ?) Initialized the property with a null value. NullableViewProperty(value: T ? = null, validator: Validator T ? = null) Creates the delegate with an initial value","title":"Constructors"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/#inherited-properties","text":"renderer val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. value var value: T The initial value of the property.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/#functions","text":"setValue open fun setValue(thisRef: View , property: KProperty * , value: T ?): Unit Sets the property value.","title":"Functions"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/#inherited-functions","text":"getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/-init-/","text":"View-common / view.core.views.propertyDelegates / NullableViewProperty / init init NullableViewProperty(validator: Validator T ?) Initialized the property with a null value. Parameters validator - The validator that validates the property value. NullableViewProperty(value: T ? = null, validator: Validator T ? = null) Creates the delegate with an initial value Constructor Creates the delegate with an initial value","title":" init "},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/-init-/#init","text":"NullableViewProperty(validator: Validator T ?) Initialized the property with a null value.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/-init-/#parameters","text":"validator - The validator that validates the property value. NullableViewProperty(value: T ? = null, validator: Validator T ? = null) Creates the delegate with an initial value Constructor Creates the delegate with an initial value","title":"Parameters"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/set-value/","text":"View-common / view.core.views.propertyDelegates / NullableViewProperty / setValue setValue open fun setValue(thisRef: View , property: KProperty * , value: T ?): Unit Sets the property value. This method validates the value first before setting the value. Once the value is set, the ViewTreeRenderer is notified about the change in value.","title":"Set value"},{"location":"Documentation/View/view.core.views.property-delegates/-nullable-view-property/set-value/#setvalue","text":"open fun setValue(thisRef: View , property: KProperty * , value: T ?): Unit Sets the property value. This method validates the value first before setting the value. Once the value is set, the ViewTreeRenderer is notified about the change in value.","title":"setValue"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/","text":"View-common / view.core.views.propertyDelegates / ViewProperty ViewProperty open class ViewProperty T : Any : AbstractViewProperty T Represents a non-nullable and mutable view property. Constructors init ViewProperty(value: T , validator: Validator T ? = null) Creates the delegate with an initial value Inherited Properties renderer val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. value var value: T The initial value of the property. Functions setValue open operator fun setValue(thisRef: View , property: KProperty * , value: T ): Unit Sets the property value. Inherited Functions getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"Index"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/#viewproperty","text":"open class ViewProperty T : Any : AbstractViewProperty T Represents a non-nullable and mutable view property.","title":"ViewProperty"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/#constructors","text":"init ViewProperty(value: T , validator: Validator T ? = null) Creates the delegate with an initial value","title":"Constructors"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/#inherited-properties","text":"renderer val renderer: ERROR CLASS The ViewTreeRenderer that is responsible for rendering the view that this delegate is part of. value var value: T The initial value of the property.","title":"Inherited Properties"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/#functions","text":"setValue open operator fun setValue(thisRef: View , property: KProperty * , value: T ): Unit Sets the property value.","title":"Functions"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/#inherited-functions","text":"getValue open fun getValue(thisRef: View , property: KProperty * ): T Returns the property value.","title":"Inherited Functions"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/-init-/","text":"View-common / view.core.views.propertyDelegates / ViewProperty / init init ViewProperty(value: T , validator: Validator T ? = null) Creates the delegate with an initial value Constructor Creates the delegate with an initial value","title":" init "},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/-init-/#init","text":"ViewProperty(value: T , validator: Validator T ? = null) Creates the delegate with an initial value Constructor Creates the delegate with an initial value","title":"&lt;init&gt;"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/set-value/","text":"View-common / view.core.views.propertyDelegates / ViewProperty / setValue setValue open operator fun setValue(thisRef: View , property: KProperty * , value: T ): Unit Sets the property value. This method validates the value first before setting the value. Once the value is set, the ViewTreeRenderer is notified about the change in value.","title":"Set value"},{"location":"Documentation/View/view.core.views.property-delegates/-view-property/set-value/#setvalue","text":"open operator fun setValue(thisRef: View , property: KProperty * , value: T ): Unit Sets the property value. This method validates the value first before setting the value. Once the value is set, the ViewTreeRenderer is notified about the change in value.","title":"setValue"},{"location":"Documentation/View/view.di/","text":"View-common / view.di Package view.di Sets up the dependency injection used by the View library. Types DelegateProvider class DelegateProvider T : Any KodeinContainer object KodeinContainer Contains the bindings for DI. Functions inject fun T : Any inject(tag: String ? = null): DelegateProvider T fun T : Any , A : Any inject(tag: String ? = null, arg: A ): DelegateProvider T fun T : Any , A0 : Any , A1 : Any inject(tag: String ? = null, arg0: A0 , arg1: A1 ): DelegateProvider T","title":"Index"},{"location":"Documentation/View/view.di/#package-viewdi","text":"Sets up the dependency injection used by the View library.","title":"Package view.di"},{"location":"Documentation/View/view.di/#types","text":"DelegateProvider class DelegateProvider T : Any KodeinContainer object KodeinContainer Contains the bindings for DI.","title":"Types"},{"location":"Documentation/View/view.di/#functions","text":"inject fun T : Any inject(tag: String ? = null): DelegateProvider T fun T : Any , A : Any inject(tag: String ? = null, arg: A ): DelegateProvider T fun T : Any , A0 : Any , A1 : Any inject(tag: String ? = null, arg0: A0 , arg1: A1 ): DelegateProvider T","title":"Functions"},{"location":"Documentation/View/view.di/inject/","text":"View-common / view.di / inject inject inline fun reified T : Any inject(tag: String ? = null): DelegateProvider T inline fun reified T : Any , reified A : Any inject(tag: String ? = null, arg: A ): DelegateProvider T inline fun reified T : Any , reified A0 : Any , reified A1 : Any inject(tag: String ? = null, arg0: A0 , arg1: A1 ): DelegateProvider T","title":"Inject"},{"location":"Documentation/View/view.di/inject/#inject","text":"inline fun reified T : Any inject(tag: String ? = null): DelegateProvider T inline fun reified T : Any , reified A : Any inject(tag: String ? = null, arg: A ): DelegateProvider T inline fun reified T : Any , reified A0 : Any , reified A1 : Any inject(tag: String ? = null, arg0: A0 , arg1: A1 ): DelegateProvider T","title":"inject"},{"location":"Documentation/View/view.di/-delegate-provider/","text":"View-common / view.di / DelegateProvider DelegateProvider class DelegateProvider T : Any Constructors init DelegateProvider(delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T ) Properties delegateFactory val delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T Functions provideDelegate operator fun provideDelegate(thisRef: Any ?, prop: KProperty * ): ERROR CLASS T","title":"Index"},{"location":"Documentation/View/view.di/-delegate-provider/#delegateprovider","text":"class DelegateProvider T : Any","title":"DelegateProvider"},{"location":"Documentation/View/view.di/-delegate-provider/#constructors","text":"init DelegateProvider(delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T )","title":"Constructors"},{"location":"Documentation/View/view.di/-delegate-provider/#properties","text":"delegateFactory val delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T","title":"Properties"},{"location":"Documentation/View/view.di/-delegate-provider/#functions","text":"provideDelegate operator fun provideDelegate(thisRef: Any ?, prop: KProperty * ): ERROR CLASS T","title":"Functions"},{"location":"Documentation/View/view.di/-delegate-provider/-init-/","text":"View-common / view.di / DelegateProvider / init init DelegateProvider(delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T )","title":" init "},{"location":"Documentation/View/view.di/-delegate-provider/-init-/#init","text":"DelegateProvider(delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.di/-delegate-provider/delegate-factory/","text":"View-common / view.di / DelegateProvider / delegateFactory delegateFactory val delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T","title":"Delegate factory"},{"location":"Documentation/View/view.di/-delegate-provider/delegate-factory/#delegatefactory","text":"val delegateFactory: (thisRef: Any ?, prop: KProperty Any ? ) - ERROR CLASS T","title":"delegateFactory"},{"location":"Documentation/View/view.di/-delegate-provider/provide-delegate/","text":"View-common / view.di / DelegateProvider / provideDelegate provideDelegate operator fun provideDelegate(thisRef: Any ?, prop: KProperty * ): ERROR CLASS T","title":"Provide delegate"},{"location":"Documentation/View/view.di/-delegate-provider/provide-delegate/#providedelegate","text":"operator fun provideDelegate(thisRef: Any ?, prop: KProperty * ): ERROR CLASS T","title":"provideDelegate"},{"location":"Documentation/View/view.di/-kodein-container/","text":"View-common / view.di / KodeinContainer KodeinContainer object KodeinContainer Contains the bindings for DI. Properties kodein val kodein: ERROR CLASS The kodein instance used by the library. Functions addConfig fun addConfig(kodein: ERROR CLASS , allowOverrides: Boolean = true): Unit Adds extra bindings to the container.","title":"Index"},{"location":"Documentation/View/view.di/-kodein-container/#kodeincontainer","text":"object KodeinContainer Contains the bindings for DI.","title":"KodeinContainer"},{"location":"Documentation/View/view.di/-kodein-container/#properties","text":"kodein val kodein: ERROR CLASS The kodein instance used by the library.","title":"Properties"},{"location":"Documentation/View/view.di/-kodein-container/#functions","text":"addConfig fun addConfig(kodein: ERROR CLASS , allowOverrides: Boolean = true): Unit Adds extra bindings to the container.","title":"Functions"},{"location":"Documentation/View/view.di/-kodein-container/add-config/","text":"View-common / view.di / KodeinContainer / addConfig addConfig fun addConfig(kodein: ERROR CLASS , allowOverrides: Boolean = true): Unit Adds extra bindings to the container. Note that this should be done before the first injection, failing to do so will result in an exception being thrown. Parameters kodein - The kodein instance containing the bindings allowOverrides - If true, any conflicts in binding will result in the old bindings being overridden by the new bindings.","title":"Add config"},{"location":"Documentation/View/view.di/-kodein-container/add-config/#addconfig","text":"fun addConfig(kodein: ERROR CLASS , allowOverrides: Boolean = true): Unit Adds extra bindings to the container. Note that this should be done before the first injection, failing to do so will result in an exception being thrown.","title":"addConfig"},{"location":"Documentation/View/view.di/-kodein-container/add-config/#parameters","text":"kodein - The kodein instance containing the bindings allowOverrides - If true, any conflicts in binding will result in the old bindings being overridden by the new bindings.","title":"Parameters"},{"location":"Documentation/View/view.di/-kodein-container/kodein/","text":"View-common / view.di / KodeinContainer / kodein kodein val kodein: ERROR CLASS The kodein instance used by the library.","title":"Kodein"},{"location":"Documentation/View/view.di/-kodein-container/kodein/#kodein","text":"val kodein: ERROR CLASS The kodein instance used by the library.","title":"kodein"},{"location":"Documentation/View/view.utils.extensions/","text":"","title":"Index"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/","text":"View-common / view.utils.extensions / kotlin.String","title":"Kotlin. string"},{"location":"Documentation/View/view.utils.extensions/non-null/","text":"View-common / view.utils.extensions / nonNull nonNull fun T T ?.nonNull(callBack: ( T ) - Unit ): Unit Executes the callback function if the object is not null. Parameters callBack - The function to call","title":"Non null"},{"location":"Documentation/View/view.utils.extensions/non-null/#nonnull","text":"fun T T ?.nonNull(callBack: ( T ) - Unit ): Unit Executes the callback function if the object is not null.","title":"nonNull"},{"location":"Documentation/View/view.utils.extensions/non-null/#parameters","text":"callBack - The function to call","title":"Parameters"},{"location":"Documentation/View/view.utils.extensions/representations/","text":"View-common / view.utils.extensions / representations representations fun E : Enum E E .representations(): ERROR CLASS Returns the enum value's string representation in multiple formats. For a list of formats, see CaseFormatConverter.Format . Return Enum value's string representation in multiple formats.","title":"Representations"},{"location":"Documentation/View/view.utils.extensions/representations/#representations","text":"fun E : Enum E E .representations(): ERROR CLASS Returns the enum value's string representation in multiple formats. For a list of formats, see CaseFormatConverter.Format . Return Enum value's string representation in multiple formats.","title":"representations"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/","text":"View-common / view.utils.extensions / kotlin.String Extensions for kotlin.String toEnum fun E : Enum E String .toEnum(values: Array E ): E Returns the enum value that matches the string representation. toID fun String .toID(): Int Returns the ID corresponding to this string","title":"Index"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/#extensions-for-kotlinstring","text":"toEnum fun E : Enum E String .toEnum(values: Array E ): E Returns the enum value that matches the string representation. toID fun String .toID(): Int Returns the ID corresponding to this string","title":"Extensions for kotlin.String"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/to-enum/","text":"View-common / view.utils.extensions / kotlin.String / toEnum toEnum fun E : Enum E String .toEnum(values: Array E ): E Returns the enum value that matches the string representation. Note that string representation should be in one of the following formats . Parameters values - The available enum values Return The enum value matching the string representation","title":"To enum"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/to-enum/#toenum","text":"fun E : Enum E String .toEnum(values: Array E ): E Returns the enum value that matches the string representation. Note that string representation should be in one of the following formats .","title":"toEnum"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/to-enum/#parameters","text":"values - The available enum values Return The enum value matching the string representation","title":"Parameters"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/to-i-d/","text":"View-common / view.utils.extensions / kotlin.String / toID toID fun String .toID(): Int Returns the ID corresponding to this string","title":"To i d"},{"location":"Documentation/View/view.utils.extensions/kotlin.-string/to-i-d/#toid","text":"fun String .toID(): Int Returns the ID corresponding to this string","title":"toID"},{"location":"Documentation/View/view.utils.map-based.keys/","text":"View-common / view.utils.mapBased.keys Package view.utils.mapBased.keys Contains delegates that define logic for property value retrieval from a map. The goal of this package is to provide property delegates that work in a similar way to delegation by a map object. However, unlike maps these delegates allow the user to set more complex strategies for setting/retrieving property values. For more information on how the delegates interact with the map, see MapInterface . Types HasKeys open class HasKeys A base class for classes whose properties are based on a map. MapInterface class MapInterface T Acts as layer between the property delegate and the map.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys/#package-viewutilsmapbasedkeys","text":"Contains delegates that define logic for property value retrieval from a map. The goal of this package is to provide property delegates that work in a similar way to delegation by a map object. However, unlike maps these delegates allow the user to set more complex strategies for setting/retrieving property values. For more information on how the delegates interact with the map, see MapInterface .","title":"Package view.utils.mapBased.keys"},{"location":"Documentation/View/view.utils.map-based.keys/#types","text":"HasKeys open class HasKeys A base class for classes whose properties are based on a map. MapInterface class MapInterface T Acts as layer between the property delegate and the map.","title":"Types"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/","text":"View-common / view.utils.mapBased.keys / HasKeys HasKeys open class HasKeys A base class for classes whose properties are based on a map. Constructors init HasKeys(keys: MutableMap String , Any ? ) Initializes the class using a mutable map HasKeys() A base class for classes whose properties are based on a map. Properties keys open lateinit var keys: MutableMap String , Any ? The map that contains the property values Inheritors ViewKeys abstract class ViewKeys : HasKeys Base class for classes containing view key-value pairs.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/#haskeys","text":"open class HasKeys A base class for classes whose properties are based on a map.","title":"HasKeys"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/#constructors","text":"init HasKeys(keys: MutableMap String , Any ? ) Initializes the class using a mutable map HasKeys() A base class for classes whose properties are based on a map.","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/#properties","text":"keys open lateinit var keys: MutableMap String , Any ? The map that contains the property values","title":"Properties"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/#inheritors","text":"ViewKeys abstract class ViewKeys : HasKeys Base class for classes containing view key-value pairs.","title":"Inheritors"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/-init-/","text":"View-common / view.utils.mapBased.keys / HasKeys / init init HasKeys(keys: MutableMap String , Any ? ) Initializes the class using a mutable map Parameters keys - The map that contains the property values HasKeys() A base class for classes whose properties are based on a map.","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/-init-/#init","text":"HasKeys(keys: MutableMap String , Any ? ) Initializes the class using a mutable map","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/-init-/#parameters","text":"keys - The map that contains the property values HasKeys() A base class for classes whose properties are based on a map.","title":"Parameters"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/keys/","text":"View-common / view.utils.mapBased.keys / HasKeys / keys keys open lateinit var keys: MutableMap String , Any ? The map that contains the property values","title":"Keys"},{"location":"Documentation/View/view.utils.map-based.keys/-has-keys/keys/#keys","text":"open lateinit var keys: MutableMap String , Any ? The map that contains the property values","title":"keys"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/","text":"View-common / view.utils.mapBased.keys / MapInterface MapInterface class MapInterface T Acts as layer between the property delegate and the map. This class allows to define strategies for setting and retrieving values from the map. See Also MapInterface.Strategy Types Strategy enum class Strategy Represents a strategy for setting and retrieving values from the map. Constructors init MapInterface(keys: MutableMap String , Any ? , getterStrategy: List Strategy , setterStrategy: Strategy = Strategy.CAST) Initializes the object with the map and getter/setter strategies. Properties fromString var fromString: ( String ) - T A function that returns an object instance from a given string. serialize var serialize: ( T ) - String A function that encodes the object to a string. Functions getValue fun getValue(key: String ): T ? Retrieves the property value with given name from the map. setValue fun setValue(key: String , value: T ): Unit Sets the property value.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/#mapinterface","text":"class MapInterface T Acts as layer between the property delegate and the map. This class allows to define strategies for setting and retrieving values from the map. See Also MapInterface.Strategy","title":"MapInterface"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/#types","text":"Strategy enum class Strategy Represents a strategy for setting and retrieving values from the map.","title":"Types"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/#constructors","text":"init MapInterface(keys: MutableMap String , Any ? , getterStrategy: List Strategy , setterStrategy: Strategy = Strategy.CAST) Initializes the object with the map and getter/setter strategies.","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/#properties","text":"fromString var fromString: ( String ) - T A function that returns an object instance from a given string. serialize var serialize: ( T ) - String A function that encodes the object to a string.","title":"Properties"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/#functions","text":"getValue fun getValue(key: String ): T ? Retrieves the property value with given name from the map. setValue fun setValue(key: String , value: T ): Unit Sets the property value.","title":"Functions"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-init-/","text":"View-common / view.utils.mapBased.keys / MapInterface / init init MapInterface(keys: MutableMap String , Any ? , getterStrategy: List Strategy , setterStrategy: Strategy = Strategy.CAST) Initializes the object with the map and getter/setter strategies. Parameters keys - The map that holds the values getterStrategy - Defines how values should be retrieved from the map setterStrategy - Defines how values should be set in the map Constructor Initializes the object with the map and getter/setter strategies.","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-init-/#init","text":"MapInterface(keys: MutableMap String , Any ? , getterStrategy: List Strategy , setterStrategy: Strategy = Strategy.CAST) Initializes the object with the map and getter/setter strategies.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-init-/#parameters","text":"keys - The map that holds the values getterStrategy - Defines how values should be retrieved from the map setterStrategy - Defines how values should be set in the map Constructor Initializes the object with the map and getter/setter strategies.","title":"Parameters"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/from-string/","text":"View-common / view.utils.mapBased.keys / MapInterface / fromString fromString var fromString: ( String ) - T A function that returns an object instance from a given string.","title":"From string"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/from-string/#fromstring","text":"var fromString: ( String ) - T A function that returns an object instance from a given string.","title":"fromString"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/get-value/","text":"View-common / view.utils.mapBased.keys / MapInterface / getValue getValue fun getValue(key: String ): T ? Retrieves the property value with given name from the map. The strategies present in getterStrategy are applied in the following order: Strategy.NON_NULL , Strategy.STRING_BASED , Strategy.CAST . Parameters key - The property's name Exceptions IllegalViewTreeException - If getterStrategy contains Strategy.NON_NULL and the property value is not present in the map. IllegalStateException - If getterStrategy contains Strategy.STRING_BASED and fromString is not set ClassCastException - If getterStrategy contains Strategy.CAST and the value if of different type. Return The property's value","title":"Get value"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/get-value/#getvalue","text":"fun getValue(key: String ): T ? Retrieves the property value with given name from the map. The strategies present in getterStrategy are applied in the following order: Strategy.NON_NULL , Strategy.STRING_BASED , Strategy.CAST .","title":"getValue"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/get-value/#parameters","text":"key - The property's name","title":"Parameters"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/get-value/#exceptions","text":"IllegalViewTreeException - If getterStrategy contains Strategy.NON_NULL and the property value is not present in the map. IllegalStateException - If getterStrategy contains Strategy.STRING_BASED and fromString is not set ClassCastException - If getterStrategy contains Strategy.CAST and the value if of different type. Return The property's value","title":"Exceptions"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/serialize/","text":"View-common / view.utils.mapBased.keys / MapInterface / serialize serialize var serialize: ( T ) - String A function that encodes the object to a string.","title":"Serialize"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/serialize/#serialize","text":"var serialize: ( T ) - String A function that encodes the object to a string.","title":"serialize"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/set-value/","text":"View-common / view.utils.mapBased.keys / MapInterface / setValue setValue fun setValue(key: String , value: T ): Unit Sets the property value. Parameters key - The property's name value - The property's value Exceptions IllegalViewTreeException - If the property name is not in camelCase NullPointerException - If setterStrategy is Strategy.STRING_BASED and serialize is null","title":"Set value"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/set-value/#setvalue","text":"fun setValue(key: String , value: T ): Unit Sets the property value.","title":"setValue"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/set-value/#parameters","text":"key - The property's name value - The property's value","title":"Parameters"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/set-value/#exceptions","text":"IllegalViewTreeException - If the property name is not in camelCase NullPointerException - If setterStrategy is Strategy.STRING_BASED and serialize is null","title":"Exceptions"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/","text":"View-common / view.utils.mapBased.keys / MapInterface / Strategy Strategy enum class Strategy Represents a strategy for setting and retrieving values from the map. Enum Values STRING_BASED Specifies that the object in the map is stored in a string. CAST The object instance exists in the map and should be cast to back to its original type when retrieved. NON_NULL The value of the object in the map cannot be null.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/#strategy","text":"enum class Strategy Represents a strategy for setting and retrieving values from the map.","title":"Strategy"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/#enum-values","text":"STRING_BASED Specifies that the object in the map is stored in a string. CAST The object instance exists in the map and should be cast to back to its original type when retrieved. NON_NULL The value of the object in the map cannot be null.","title":"Enum Values"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/-c-a-s-t/","text":"View-common / view.utils.mapBased.keys / MapInterface / Strategy / CAST CAST CAST The object instance exists in the map and should be cast to back to its original type when retrieved.","title":" c a s t"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/-c-a-s-t/#cast","text":"CAST The object instance exists in the map and should be cast to back to its original type when retrieved.","title":"CAST"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/-n-o-n_-n-u-l-l/","text":"View-common / view.utils.mapBased.keys / MapInterface / Strategy / NON_NULL NON_NULL NON_NULL The value of the object in the map cannot be null.","title":" n o n  n u l l"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/-n-o-n_-n-u-l-l/#non_null","text":"NON_NULL The value of the object in the map cannot be null.","title":"NON_NULL"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/-s-t-r-i-n-g_-b-a-s-e-d/","text":"View-common / view.utils.mapBased.keys / MapInterface / Strategy / STRING_BASED STRING_BASED STRING_BASED Specifies that the object in the map is stored in a string. When retrieving the object, the property fromString , which returns the object from the string, should be set. When setting the object the property serialize , which serializes the object, should be set.","title":" s t r i n g  b a s e d"},{"location":"Documentation/View/view.utils.map-based.keys/-map-interface/-strategy/-s-t-r-i-n-g_-b-a-s-e-d/#string_based","text":"STRING_BASED Specifies that the object in the map is stored in a string. When retrieving the object, the property fromString , which returns the object from the string, should be set. When setting the object the property serialize , which serializes the object, should be set.","title":"STRING_BASED"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/","text":"View-common / view.utils.mapBased.keys.delegates Package view.utils.mapBased.keys.delegates Types AbstractRWKey abstract class AbstractRWKey T A delegate for mutable properties that are based on maps.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/#package-viewutilsmapbasedkeysdelegates","text":"","title":"Package view.utils.mapBased.keys.delegates"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/#types","text":"AbstractRWKey abstract class AbstractRWKey T A delegate for mutable properties that are based on maps.","title":"Types"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates / AbstractRWKey AbstractRWKey abstract class AbstractRWKey T A delegate for mutable properties that are based on maps. Constructors init AbstractRWKey() A delegate for mutable properties that are based on maps. Properties getterStrategy abstract val getterStrategy: List Strategy Defines the value retrieval stategy of the property Functions mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map. setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit Inheritors CastingKey class CastingKey T : AbstractRWKey T ? Has the same behaviour as delegation by a map. NullableRWKey open class NullableRWKey T : AbstractRWKey T ? A delegate for mutable nullable properties that are based on maps. RequiredRWKey open class RequiredRWKey T : AbstractRWKey T A delegate for mutable non-nullable properties that are based on maps.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/#abstractrwkey","text":"abstract class AbstractRWKey T A delegate for mutable properties that are based on maps.","title":"AbstractRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/#constructors","text":"init AbstractRWKey() A delegate for mutable properties that are based on maps.","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/#properties","text":"getterStrategy abstract val getterStrategy: List Strategy Defines the value retrieval stategy of the property","title":"Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/#functions","text":"mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map. setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/#inheritors","text":"CastingKey class CastingKey T : AbstractRWKey T ? Has the same behaviour as delegation by a map. NullableRWKey open class NullableRWKey T : AbstractRWKey T ? A delegate for mutable nullable properties that are based on maps. RequiredRWKey open class RequiredRWKey T : AbstractRWKey T A delegate for mutable non-nullable properties that are based on maps.","title":"Inheritors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/-init-/","text":"View-common / view.utils.mapBased.keys.delegates / AbstractRWKey / init init AbstractRWKey() A delegate for mutable properties that are based on maps.","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/-init-/#init","text":"AbstractRWKey() A delegate for mutable properties that are based on maps.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/getter-strategy/","text":"View-common / view.utils.mapBased.keys.delegates / AbstractRWKey / getterStrategy getterStrategy protected abstract val getterStrategy: List Strategy Defines the value retrieval stategy of the property","title":"Getter strategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/getter-strategy/#getterstrategy","text":"protected abstract val getterStrategy: List Strategy Defines the value retrieval stategy of the property","title":"getterStrategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/map-interface/","text":"View-common / view.utils.mapBased.keys.delegates / AbstractRWKey / mapInterface mapInterface protected open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map. Parameters keys - The map that contains the values Return The MapInterface used to communicate with the map.","title":"Map interface"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/map-interface/#mapinterface","text":"protected open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"mapInterface"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/map-interface/#parameters","text":"keys - The map that contains the values Return The MapInterface used to communicate with the map.","title":"Parameters"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/set-value/","text":"View-common / view.utils.mapBased.keys.delegates / AbstractRWKey / setValue setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"Set value"},{"location":"Documentation/View/view.utils.map-based.keys.delegates/-abstract-r-w-key/set-value/#setvalue","text":"open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"setValue"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/","text":"View-common / view.utils.mapBased.keys.delegates.nullable Package view.utils.mapBased.keys.delegates.nullable Types BoolRWKey object BoolRWKey : NullableRWKey Boolean ColorRWKey object ColorRWKey : NullableRWKey Long A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. DoubleRWKey object DoubleRWKey : NullableRWKey Double EnumRWKey class EnumRWKey E : Enum E : NullableRWKey E IntRWKey object IntRWKey : NullableRWKey Int NullableRWKey open class NullableRWKey T : AbstractRWKey T ? A delegate for mutable nullable properties that are based on maps. StringRWKey object StringRWKey : NullableRWKey String","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/#package-viewutilsmapbasedkeysdelegatesnullable","text":"","title":"Package view.utils.mapBased.keys.delegates.nullable"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/#types","text":"BoolRWKey object BoolRWKey : NullableRWKey Boolean ColorRWKey object ColorRWKey : NullableRWKey Long A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. DoubleRWKey object DoubleRWKey : NullableRWKey Double EnumRWKey class EnumRWKey E : Enum E : NullableRWKey E IntRWKey object IntRWKey : NullableRWKey Int NullableRWKey open class NullableRWKey T : AbstractRWKey T ? A delegate for mutable nullable properties that are based on maps. StringRWKey object StringRWKey : NullableRWKey String","title":"Types"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-bool-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / BoolRWKey BoolRWKey object BoolRWKey : NullableRWKey Boolean Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":" bool r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-bool-r-w-key/#boolrwkey","text":"object BoolRWKey : NullableRWKey Boolean","title":"BoolRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-bool-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-bool-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-color-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / ColorRWKey ColorRWKey object ColorRWKey : NullableRWKey Long A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. The retrieval strategy is defined as follows: MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":" color r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-color-r-w-key/#colorrwkey","text":"object ColorRWKey : NullableRWKey Long A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. The retrieval strategy is defined as follows: MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":"ColorRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-color-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-color-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-double-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / DoubleRWKey DoubleRWKey object DoubleRWKey : NullableRWKey Double Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":" double r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-double-r-w-key/#doublerwkey","text":"object DoubleRWKey : NullableRWKey Double","title":"DoubleRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-double-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-double-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-int-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / IntRWKey IntRWKey object IntRWKey : NullableRWKey Int Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":" int r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-int-r-w-key/#intrwkey","text":"object IntRWKey : NullableRWKey Int","title":"IntRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-int-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-int-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-string-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / StringRWKey StringRWKey object StringRWKey : NullableRWKey String Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":" string r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-string-r-w-key/#stringrwkey","text":"object StringRWKey : NullableRWKey String","title":"StringRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-string-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-string-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / EnumRWKey EnumRWKey class EnumRWKey E : Enum E : NullableRWKey E Constructors init EnumRWKey(enumVals: Array E ) Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/#enumrwkey","text":"class EnumRWKey E : Enum E : NullableRWKey E","title":"EnumRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/#constructors","text":"init EnumRWKey(enumVals: Array E )","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/-init-/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / EnumRWKey / init init EnumRWKey(enumVals: Array E )","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-enum-r-w-key/-init-/#init","text":"EnumRWKey(enumVals: Array E )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / NullableRWKey NullableRWKey open class NullableRWKey T : AbstractRWKey T ? A delegate for mutable nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST Constructors init NullableRWKey(fromString: ( String ) - T ) A delegate for mutable nullable properties that are based on maps. Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map. Inherited Functions setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit Inheritors BoolRWKey object BoolRWKey : NullableRWKey Boolean ColorRWKey object ColorRWKey : NullableRWKey Long A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. DoubleRWKey object DoubleRWKey : NullableRWKey Double EnumRWKey class EnumRWKey E : Enum E : NullableRWKey E IntRWKey object IntRWKey : NullableRWKey Int StringRWKey object StringRWKey : NullableRWKey String","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/#nullablerwkey","text":"open class NullableRWKey T : AbstractRWKey T ? A delegate for mutable nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":"NullableRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/#constructors","text":"init NullableRWKey(fromString: ( String ) - T ) A delegate for mutable nullable properties that are based on maps.","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/#properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/#functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ? mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Returns the MapInterface used to communicate with the map.","title":"Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/#inherited-functions","text":"setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/#inheritors","text":"BoolRWKey object BoolRWKey : NullableRWKey Boolean ColorRWKey object ColorRWKey : NullableRWKey Long A delegate for mutable nullable properties that are based on maps and represent a RGB/RGBA color. DoubleRWKey object DoubleRWKey : NullableRWKey Double EnumRWKey class EnumRWKey E : Enum E : NullableRWKey E IntRWKey object IntRWKey : NullableRWKey Int StringRWKey object StringRWKey : NullableRWKey String","title":"Inheritors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/-init-/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / NullableRWKey / init init NullableRWKey(fromString: ( String ) - T ) A delegate for mutable nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/-init-/#init","text":"NullableRWKey(fromString: ( String ) - T ) A delegate for mutable nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/get-value/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / NullableRWKey / getValue getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T ?","title":"Get value"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/get-value/#getvalue","text":"open fun getValue(thisRef: HasKeys , property: KProperty * ): T ?","title":"getValue"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/getter-strategy/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / NullableRWKey / getterStrategy getterStrategy protected open val getterStrategy: ERROR CLASS Overrides AbstractRWKey.getterStrategy Defines the value retrieval stategy of the property","title":"Getter strategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/getter-strategy/#getterstrategy","text":"protected open val getterStrategy: ERROR CLASS Overrides AbstractRWKey.getterStrategy Defines the value retrieval stategy of the property","title":"getterStrategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/map-interface/","text":"View-common / view.utils.mapBased.keys.delegates.nullable / NullableRWKey / mapInterface mapInterface protected open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Overrides AbstractRWKey.mapInterface Returns the MapInterface used to communicate with the map. Parameters keys - The map that contains the values Return The MapInterface used to communicate with the map.","title":"Map interface"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/map-interface/#mapinterface","text":"protected open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T ? Overrides AbstractRWKey.mapInterface Returns the MapInterface used to communicate with the map.","title":"mapInterface"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.nullable/-nullable-r-w-key/map-interface/#parameters","text":"keys - The map that contains the values Return The MapInterface used to communicate with the map.","title":"Parameters"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/","text":"View-common / view.utils.mapBased.keys.delegates.readOnly.casts Package view.utils.mapBased.keys.delegates.readOnly.casts Types CastingKey class CastingKey T : AbstractRWKey T ? Has the same behaviour as delegation by a map.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/#package-viewutilsmapbasedkeysdelegatesreadonlycasts","text":"","title":"Package view.utils.mapBased.keys.delegates.readOnly.casts"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/#types","text":"CastingKey class CastingKey T : AbstractRWKey T ? Has the same behaviour as delegation by a map.","title":"Types"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/","text":"View-common / view.utils.mapBased.keys.delegates.readOnly.casts / CastingKey CastingKey class CastingKey T : AbstractRWKey T ? Has the same behaviour as delegation by a map. Constructors init CastingKey() Has the same behaviour as delegation by a map. Properties getterStrategy val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Functions getValue fun getValue(thisRef: HasKeys , property: KProperty * ): T ? Inherited Functions mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map. setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/#castingkey","text":"class CastingKey T : AbstractRWKey T ? Has the same behaviour as delegation by a map.","title":"CastingKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/#constructors","text":"init CastingKey() Has the same behaviour as delegation by a map.","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/#properties","text":"getterStrategy val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/#functions","text":"getValue fun getValue(thisRef: HasKeys , property: KProperty * ): T ?","title":"Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/#inherited-functions","text":"mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map. setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/-init-/","text":"View-common / view.utils.mapBased.keys.delegates.readOnly.casts / CastingKey / init init CastingKey() Has the same behaviour as delegation by a map.","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/-init-/#init","text":"CastingKey() Has the same behaviour as delegation by a map.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/get-value/","text":"View-common / view.utils.mapBased.keys.delegates.readOnly.casts / CastingKey / getValue getValue fun getValue(thisRef: HasKeys , property: KProperty * ): T ?","title":"Get value"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/get-value/#getvalue","text":"fun getValue(thisRef: HasKeys , property: KProperty * ): T ?","title":"getValue"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/getter-strategy/","text":"View-common / view.utils.mapBased.keys.delegates.readOnly.casts / CastingKey / getterStrategy getterStrategy protected val getterStrategy: ERROR CLASS Overrides AbstractRWKey.getterStrategy Defines the value retrieval stategy of the property","title":"Getter strategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.read-only.casts/-casting-key/getter-strategy/#getterstrategy","text":"protected val getterStrategy: ERROR CLASS Overrides AbstractRWKey.getterStrategy Defines the value retrieval stategy of the property","title":"getterStrategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/","text":"View-common / view.utils.mapBased.keys.delegates.required Package view.utils.mapBased.keys.delegates.required Types RequiredBoolRWKey object RequiredBoolRWKey : RequiredRWKey Boolean RequiredDoubleRWKey object RequiredDoubleRWKey : RequiredRWKey Double RequiredEnumRWKey class RequiredEnumRWKey E : Enum E : RequiredRWKey E RequiredIntRWKey object RequiredIntRWKey : RequiredRWKey Int RequiredRWKey open class RequiredRWKey T : AbstractRWKey T A delegate for mutable non-nullable properties that are based on maps. RequiredStringRWKey object RequiredStringRWKey : RequiredRWKey String","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/#package-viewutilsmapbasedkeysdelegatesrequired","text":"","title":"Package view.utils.mapBased.keys.delegates.required"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/#types","text":"RequiredBoolRWKey object RequiredBoolRWKey : RequiredRWKey Boolean RequiredDoubleRWKey object RequiredDoubleRWKey : RequiredRWKey Double RequiredEnumRWKey class RequiredEnumRWKey E : Enum E : RequiredRWKey E RequiredIntRWKey object RequiredIntRWKey : RequiredRWKey Int RequiredRWKey open class RequiredRWKey T : AbstractRWKey T A delegate for mutable non-nullable properties that are based on maps. RequiredStringRWKey object RequiredStringRWKey : RequiredRWKey String","title":"Types"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-bool-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredBoolRWKey RequiredBoolRWKey object RequiredBoolRWKey : RequiredRWKey Boolean Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":" required bool r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-bool-r-w-key/#requiredboolrwkey","text":"object RequiredBoolRWKey : RequiredRWKey Boolean","title":"RequiredBoolRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-bool-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-bool-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-double-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredDoubleRWKey RequiredDoubleRWKey object RequiredDoubleRWKey : RequiredRWKey Double Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":" required double r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-double-r-w-key/#requireddoublerwkey","text":"object RequiredDoubleRWKey : RequiredRWKey Double","title":"RequiredDoubleRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-double-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-double-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-int-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredIntRWKey RequiredIntRWKey object RequiredIntRWKey : RequiredRWKey Int Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":" required int r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-int-r-w-key/#requiredintrwkey","text":"object RequiredIntRWKey : RequiredRWKey Int","title":"RequiredIntRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-int-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-int-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-string-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredStringRWKey RequiredStringRWKey object RequiredStringRWKey : RequiredRWKey String Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":" required string r w key"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-string-r-w-key/#requiredstringrwkey","text":"object RequiredStringRWKey : RequiredRWKey String","title":"RequiredStringRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-string-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-string-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredEnumRWKey RequiredEnumRWKey class RequiredEnumRWKey E : Enum E : RequiredRWKey E Constructors init RequiredEnumRWKey(values: Array E ) Inherited Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Inherited Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/#requiredenumrwkey","text":"class RequiredEnumRWKey E : Enum E : RequiredRWKey E","title":"RequiredEnumRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/#constructors","text":"init RequiredEnumRWKey(values: Array E )","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/#inherited-properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Inherited Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/#inherited-functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/-init-/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredEnumRWKey / init init RequiredEnumRWKey(values: Array E )","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-enum-r-w-key/-init-/#init","text":"RequiredEnumRWKey(values: Array E )","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredRWKey RequiredRWKey open class RequiredRWKey T : AbstractRWKey T A delegate for mutable non-nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.NON_NULL , MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST Constructors init RequiredRWKey(fromString: ( String ) - T ) A delegate for mutable non-nullable properties that are based on maps. Properties getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property Functions getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map. Inherited Functions setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit Inheritors RequiredBoolRWKey object RequiredBoolRWKey : RequiredRWKey Boolean RequiredDoubleRWKey object RequiredDoubleRWKey : RequiredRWKey Double RequiredEnumRWKey class RequiredEnumRWKey E : Enum E : RequiredRWKey E RequiredIntRWKey object RequiredIntRWKey : RequiredRWKey Int RequiredStringRWKey object RequiredStringRWKey : RequiredRWKey String","title":"Index"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/#requiredrwkey","text":"open class RequiredRWKey T : AbstractRWKey T A delegate for mutable non-nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.NON_NULL , MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":"RequiredRWKey"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/#constructors","text":"init RequiredRWKey(fromString: ( String ) - T ) A delegate for mutable non-nullable properties that are based on maps.","title":"Constructors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/#properties","text":"getterStrategy open val getterStrategy: ERROR CLASS Defines the value retrieval stategy of the property","title":"Properties"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/#functions","text":"getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T mapInterface open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Returns the MapInterface used to communicate with the map.","title":"Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/#inherited-functions","text":"setValue open fun setValue(thisRef: HasKeys , property: KProperty * , value: T ): Unit","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/#inheritors","text":"RequiredBoolRWKey object RequiredBoolRWKey : RequiredRWKey Boolean RequiredDoubleRWKey object RequiredDoubleRWKey : RequiredRWKey Double RequiredEnumRWKey class RequiredEnumRWKey E : Enum E : RequiredRWKey E RequiredIntRWKey object RequiredIntRWKey : RequiredRWKey Int RequiredStringRWKey object RequiredStringRWKey : RequiredRWKey String","title":"Inheritors"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/-init-/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredRWKey / init init RequiredRWKey(fromString: ( String ) - T ) A delegate for mutable non-nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.NON_NULL , MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":" init "},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/-init-/#init","text":"RequiredRWKey(fromString: ( String ) - T ) A delegate for mutable non-nullable properties that are based on maps. The retrieval strategy is defined as follows: MapInterface.Strategy.NON_NULL , MapInterface.Strategy.STRING_BASED , MapInterface.Strategy.CAST","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/get-value/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredRWKey / getValue getValue open fun getValue(thisRef: HasKeys , property: KProperty * ): T","title":"Get value"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/get-value/#getvalue","text":"open fun getValue(thisRef: HasKeys , property: KProperty * ): T","title":"getValue"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/getter-strategy/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredRWKey / getterStrategy getterStrategy protected open val getterStrategy: ERROR CLASS Overrides AbstractRWKey.getterStrategy Defines the value retrieval stategy of the property","title":"Getter strategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/getter-strategy/#getterstrategy","text":"protected open val getterStrategy: ERROR CLASS Overrides AbstractRWKey.getterStrategy Defines the value retrieval stategy of the property","title":"getterStrategy"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/map-interface/","text":"View-common / view.utils.mapBased.keys.delegates.required / RequiredRWKey / mapInterface mapInterface protected open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Overrides AbstractRWKey.mapInterface Returns the MapInterface used to communicate with the map. Parameters keys - The map that contains the values Return The MapInterface used to communicate with the map.","title":"Map interface"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/map-interface/#mapinterface","text":"protected open fun mapInterface(keys: MutableMap String , Any ? ): MapInterface T Overrides AbstractRWKey.mapInterface Returns the MapInterface used to communicate with the map.","title":"mapInterface"},{"location":"Documentation/View/view.utils.map-based.keys.delegates.required/-required-r-w-key/map-interface/#parameters","text":"keys - The map that contains the values Return The MapInterface used to communicate with the map.","title":"Parameters"},{"location":"Documentation/View/view.utils.naming-conventions/","text":"View-common / view.utils.namingConventions Package view.utils.namingConventions Types CaseFormatConverter class CaseFormatConverter Converts strings between different case formats.","title":"Index"},{"location":"Documentation/View/view.utils.naming-conventions/#package-viewutilsnamingconventions","text":"","title":"Package view.utils.namingConventions"},{"location":"Documentation/View/view.utils.naming-conventions/#types","text":"CaseFormatConverter class CaseFormatConverter Converts strings between different case formats.","title":"Types"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/","text":"View-common / view.utils.namingConventions / CaseFormatConverter CaseFormatConverter class CaseFormatConverter Converts strings between different case formats. See Also CaseFormatConverter.Format Types Format enum class Format Represents a string format Constructors init CaseFormatConverter() Converts strings between different case formats. Companion Object Functions convert fun convert(from: Format , to: Format , str: String ): String Converts a string form one case format to another.","title":"Index"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/#caseformatconverter","text":"class CaseFormatConverter Converts strings between different case formats. See Also CaseFormatConverter.Format","title":"CaseFormatConverter"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/#types","text":"Format enum class Format Represents a string format","title":"Types"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/#constructors","text":"init CaseFormatConverter() Converts strings between different case formats.","title":"Constructors"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/#companion-object-functions","text":"convert fun convert(from: Format , to: Format , str: String ): String Converts a string form one case format to another.","title":"Companion Object Functions"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-init-/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / init init CaseFormatConverter() Converts strings between different case formats. See Also CaseFormatConverter.Format","title":" init "},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-init-/#init","text":"CaseFormatConverter() Converts strings between different case formats. See Also CaseFormatConverter.Format","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/convert/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / convert convert fun convert(from: Format , to: Format , str: String ): String Converts a string form one case format to another. Parameters from - The original case format to - The target case format Exceptions IllegalArgumentException - If the passed string is not in the format passed in from . Str The string to be converted","title":"Convert"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/convert/#convert","text":"fun convert(from: Format , to: Format , str: String ): String Converts a string form one case format to another.","title":"convert"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/convert/#parameters","text":"from - The original case format to - The target case format","title":"Parameters"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/convert/#exceptions","text":"IllegalArgumentException - If the passed string is not in the format passed in from . Str The string to be converted","title":"Exceptions"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / Format Format enum class Format Represents a string format Enum Values UPPER_UNDERSCORE LOWER_UNDERSCORE UPPER_CAMEL LOWER_CAMEL","title":"Index"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/#format","text":"enum class Format Represents a string format","title":"Format"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/#enum-values","text":"UPPER_UNDERSCORE LOWER_UNDERSCORE UPPER_CAMEL LOWER_CAMEL","title":"Enum Values"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-l-o-w-e-r_-c-a-m-e-l/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / Format / LOWER_CAMEL LOWER_CAMEL LOWER_CAMEL","title":" l o w e r  c a m e l"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-l-o-w-e-r_-c-a-m-e-l/#lower_camel","text":"LOWER_CAMEL","title":"LOWER_CAMEL"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / Format / LOWER_UNDERSCORE LOWER_UNDERSCORE LOWER_UNDERSCORE","title":" l o w e r  u n d e r s c o r e"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/#lower_underscore","text":"LOWER_UNDERSCORE","title":"LOWER_UNDERSCORE"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-u-p-p-e-r_-c-a-m-e-l/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / Format / UPPER_CAMEL UPPER_CAMEL UPPER_CAMEL","title":" u p p e r  c a m e l"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-u-p-p-e-r_-c-a-m-e-l/#upper_camel","text":"UPPER_CAMEL","title":"UPPER_CAMEL"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/","text":"View-common / view.utils.namingConventions / CaseFormatConverter / Format / UPPER_UNDERSCORE UPPER_UNDERSCORE UPPER_UNDERSCORE","title":" u p p e r  u n d e r s c o r e"},{"location":"Documentation/View/view.utils.naming-conventions/-case-format-converter/-format/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/#upper_underscore","text":"UPPER_UNDERSCORE","title":"UPPER_UNDERSCORE"},{"location":"Documentation/View/view.utils.observables/","text":"View-common / view.utils.observables Package view.utils.observables Types ObservableCollection class ObservableCollection E : MutableCollection E A collection that notifies its subscribes whenever its contents are changed.","title":"Index"},{"location":"Documentation/View/view.utils.observables/#package-viewutilsobservables","text":"","title":"Package view.utils.observables"},{"location":"Documentation/View/view.utils.observables/#types","text":"ObservableCollection class ObservableCollection E : MutableCollection E A collection that notifies its subscribes whenever its contents are changed.","title":"Types"},{"location":"Documentation/View/view.utils.observables/-observable-collection/","text":"View-common / view.utils.observables / ObservableCollection ObservableCollection class ObservableCollection E : MutableCollection E A collection that notifies its subscribes whenever its contents are changed. Constructors init ObservableCollection(list: MutableList E = ArrayList(), onChangeListener: ( ObservableCollection E ) - Unit ) A collection that notifies its subscribes whenever its contents are changed. Functions add fun add(element: E ): Boolean addAll fun addAll(elements: Collection E ): Boolean clear fun clear(): Unit remove fun remove(element: E ): Boolean removeAll fun removeAll(elements: Collection E ): Boolean retainAll fun retainAll(elements: Collection E ): Boolean","title":"Index"},{"location":"Documentation/View/view.utils.observables/-observable-collection/#observablecollection","text":"class ObservableCollection E : MutableCollection E A collection that notifies its subscribes whenever its contents are changed.","title":"ObservableCollection"},{"location":"Documentation/View/view.utils.observables/-observable-collection/#constructors","text":"init ObservableCollection(list: MutableList E = ArrayList(), onChangeListener: ( ObservableCollection E ) - Unit ) A collection that notifies its subscribes whenever its contents are changed.","title":"Constructors"},{"location":"Documentation/View/view.utils.observables/-observable-collection/#functions","text":"add fun add(element: E ): Boolean addAll fun addAll(elements: Collection E ): Boolean clear fun clear(): Unit remove fun remove(element: E ): Boolean removeAll fun removeAll(elements: Collection E ): Boolean retainAll fun retainAll(elements: Collection E ): Boolean","title":"Functions"},{"location":"Documentation/View/view.utils.observables/-observable-collection/-init-/","text":"View-common / view.utils.observables / ObservableCollection / init init ObservableCollection(list: MutableList E = ArrayList(), onChangeListener: ( ObservableCollection E ) - Unit ) A collection that notifies its subscribes whenever its contents are changed.","title":" init "},{"location":"Documentation/View/view.utils.observables/-observable-collection/-init-/#init","text":"ObservableCollection(list: MutableList E = ArrayList(), onChangeListener: ( ObservableCollection E ) - Unit ) A collection that notifies its subscribes whenever its contents are changed.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.observables/-observable-collection/add-all/","text":"View-common / view.utils.observables / ObservableCollection / addAll addAll fun addAll(elements: Collection E ): Boolean","title":"Add all"},{"location":"Documentation/View/view.utils.observables/-observable-collection/add-all/#addall","text":"fun addAll(elements: Collection E ): Boolean","title":"addAll"},{"location":"Documentation/View/view.utils.observables/-observable-collection/add/","text":"View-common / view.utils.observables / ObservableCollection / add add fun add(element: E ): Boolean","title":"Add"},{"location":"Documentation/View/view.utils.observables/-observable-collection/add/#add","text":"fun add(element: E ): Boolean","title":"add"},{"location":"Documentation/View/view.utils.observables/-observable-collection/clear/","text":"View-common / view.utils.observables / ObservableCollection / clear clear fun clear(): Unit","title":"Clear"},{"location":"Documentation/View/view.utils.observables/-observable-collection/clear/#clear","text":"fun clear(): Unit","title":"clear"},{"location":"Documentation/View/view.utils.observables/-observable-collection/remove-all/","text":"View-common / view.utils.observables / ObservableCollection / removeAll removeAll fun removeAll(elements: Collection E ): Boolean","title":"Remove all"},{"location":"Documentation/View/view.utils.observables/-observable-collection/remove-all/#removeall","text":"fun removeAll(elements: Collection E ): Boolean","title":"removeAll"},{"location":"Documentation/View/view.utils.observables/-observable-collection/remove/","text":"View-common / view.utils.observables / ObservableCollection / remove remove fun remove(element: E ): Boolean","title":"Remove"},{"location":"Documentation/View/view.utils.observables/-observable-collection/remove/#remove","text":"fun remove(element: E ): Boolean","title":"remove"},{"location":"Documentation/View/view.utils.observables/-observable-collection/retain-all/","text":"View-common / view.utils.observables / ObservableCollection / retainAll retainAll fun retainAll(elements: Collection E ): Boolean","title":"Retain all"},{"location":"Documentation/View/view.utils.observables/-observable-collection/retain-all/#retainall","text":"fun retainAll(elements: Collection E ): Boolean","title":"retainAll"},{"location":"Documentation/View/view.utils.serialization/","text":"View-common / view.utils.serialization Package view.utils.serialization Types Json expect class Json","title":"Index"},{"location":"Documentation/View/view.utils.serialization/#package-viewutilsserialization","text":"","title":"Package view.utils.serialization"},{"location":"Documentation/View/view.utils.serialization/#types","text":"Json expect class Json","title":"Types"},{"location":"Documentation/View/view.utils.serialization/-json/","text":"View-common / view.utils.serialization / Json Json expect class Json Constructors init Json() Functions parse fun parse(jsonString: String ): Map String , Any serialize fun serialize(map: Map String , Any ): String","title":"Index"},{"location":"Documentation/View/view.utils.serialization/-json/#json","text":"expect class Json","title":"Json"},{"location":"Documentation/View/view.utils.serialization/-json/#constructors","text":"init Json()","title":"Constructors"},{"location":"Documentation/View/view.utils.serialization/-json/#functions","text":"parse fun parse(jsonString: String ): Map String , Any serialize fun serialize(map: Map String , Any ): String","title":"Functions"},{"location":"Documentation/View/view.utils.serialization/-json/-init-/","text":"View-common / view.utils.serialization / Json / init init Json()","title":" init "},{"location":"Documentation/View/view.utils.serialization/-json/-init-/#init","text":"Json()","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.serialization/-json/parse/","text":"View-common / view.utils.serialization / Json / parse parse fun parse(jsonString: String ): Map String , Any","title":"Parse"},{"location":"Documentation/View/view.utils.serialization/-json/parse/#parse","text":"fun parse(jsonString: String ): Map String , Any","title":"parse"},{"location":"Documentation/View/view.utils.serialization/-json/serialize/","text":"View-common / view.utils.serialization / Json / serialize serialize fun serialize(map: Map String , Any ): String","title":"Serialize"},{"location":"Documentation/View/view.utils.serialization/-json/serialize/#serialize","text":"fun serialize(map: Map String , Any ): String","title":"serialize"},{"location":"Documentation/View/view.utils.validators/","text":"View-common / view.utils.validators Package view.utils.validators Types Validator class Validator T : Any A utility class for validation. Exceptions ValidationException class ValidationException : RuntimeException An exception that is thrown whenever a value doesn't pass a validation.","title":"Index"},{"location":"Documentation/View/view.utils.validators/#package-viewutilsvalidators","text":"","title":"Package view.utils.validators"},{"location":"Documentation/View/view.utils.validators/#types","text":"Validator class Validator T : Any A utility class for validation.","title":"Types"},{"location":"Documentation/View/view.utils.validators/#exceptions","text":"ValidationException class ValidationException : RuntimeException An exception that is thrown whenever a value doesn't pass a validation.","title":"Exceptions"},{"location":"Documentation/View/view.utils.validators/-validation-exception/","text":"View-common / view.utils.validators / ValidationException ValidationException class ValidationException : RuntimeException An exception that is thrown whenever a value doesn't pass a validation. Constructors init ValidationException(value: Any , conditions: List String , strategy: Strategy ) Initializes the exception with a message containing information on the failed validation. ValidationException(message: String ) Initializes the exception with a message","title":"Index"},{"location":"Documentation/View/view.utils.validators/-validation-exception/#validationexception","text":"class ValidationException : RuntimeException An exception that is thrown whenever a value doesn't pass a validation.","title":"ValidationException"},{"location":"Documentation/View/view.utils.validators/-validation-exception/#constructors","text":"init ValidationException(value: Any , conditions: List String , strategy: Strategy ) Initializes the exception with a message containing information on the failed validation. ValidationException(message: String ) Initializes the exception with a message","title":"Constructors"},{"location":"Documentation/View/view.utils.validators/-validation-exception/-init-/","text":"View-common / view.utils.validators / ValidationException / init init ValidationException(value: Any , conditions: List String , strategy: Strategy ) Initializes the exception with a message containing information on the failed validation. ValidationException(message: String ) Initializes the exception with a message Constructor Initializes the exception with a message","title":" init "},{"location":"Documentation/View/view.utils.validators/-validation-exception/-init-/#init","text":"ValidationException(value: Any , conditions: List String , strategy: Strategy ) Initializes the exception with a message containing information on the failed validation. ValidationException(message: String ) Initializes the exception with a message Constructor Initializes the exception with a message","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.validators/-validator/","text":"View-common / view.utils.validators / Validator Validator class Validator T : Any A utility class for validation. This class allows for easy construction of multiple validation criteria. It uses a combination of validation strategies and conditions Types Strategy enum class Strategy Represents a validation strategy, Constructors init Validator(vararg conditions: Condition T ) Initializes the object with given conditions and sets the validation strategy to Strategy.UNANIMOUS Validator(strategy: Strategy , vararg conditions: Condition T ) Initializes the object with a validation strategy and conditions. Functions validate fun validate(value: T ): Unit Validates the passed values.","title":"Index"},{"location":"Documentation/View/view.utils.validators/-validator/#validator","text":"class Validator T : Any A utility class for validation. This class allows for easy construction of multiple validation criteria. It uses a combination of validation strategies and conditions","title":"Validator"},{"location":"Documentation/View/view.utils.validators/-validator/#types","text":"Strategy enum class Strategy Represents a validation strategy,","title":"Types"},{"location":"Documentation/View/view.utils.validators/-validator/#constructors","text":"init Validator(vararg conditions: Condition T ) Initializes the object with given conditions and sets the validation strategy to Strategy.UNANIMOUS Validator(strategy: Strategy , vararg conditions: Condition T ) Initializes the object with a validation strategy and conditions.","title":"Constructors"},{"location":"Documentation/View/view.utils.validators/-validator/#functions","text":"validate fun validate(value: T ): Unit Validates the passed values.","title":"Functions"},{"location":"Documentation/View/view.utils.validators/-validator/-init-/","text":"View-common / view.utils.validators / Validator / init init Validator(vararg conditions: Condition T ) Initializes the object with given conditions and sets the validation strategy to Strategy.UNANIMOUS Validator(strategy: Strategy , vararg conditions: Condition T ) Initializes the object with a validation strategy and conditions. Constructor Initializes the object with a validation strategy and conditions.","title":" init "},{"location":"Documentation/View/view.utils.validators/-validator/-init-/#init","text":"Validator(vararg conditions: Condition T ) Initializes the object with given conditions and sets the validation strategy to Strategy.UNANIMOUS Validator(strategy: Strategy , vararg conditions: Condition T ) Initializes the object with a validation strategy and conditions. Constructor Initializes the object with a validation strategy and conditions.","title":"&lt;init&gt;"},{"location":"Documentation/View/view.utils.validators/-validator/validate/","text":"View-common / view.utils.validators / Validator / validate validate fun validate(value: T ): Unit Validates the passed values. Exceptions ValidationException - If the passed value doesn't pass the validation strategy","title":"Validate"},{"location":"Documentation/View/view.utils.validators/-validator/validate/#validate","text":"fun validate(value: T ): Unit Validates the passed values.","title":"validate"},{"location":"Documentation/View/view.utils.validators/-validator/validate/#exceptions","text":"ValidationException - If the passed value doesn't pass the validation strategy","title":"Exceptions"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/","text":"View-common / view.utils.validators / Validator / Strategy Strategy enum class Strategy Represents a validation strategy, Enum Values UNANIMOUS All the conditions should be met. AFFIRMATIVE At least one condition should be met. CONSENSUS The number of met conditions should be greater than the of unmet conditions.","title":"Index"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/#strategy","text":"enum class Strategy Represents a validation strategy,","title":"Strategy"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/#enum-values","text":"UNANIMOUS All the conditions should be met. AFFIRMATIVE At least one condition should be met. CONSENSUS The number of met conditions should be greater than the of unmet conditions.","title":"Enum Values"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/-a-f-f-i-r-m-a-t-i-v-e/","text":"View-common / view.utils.validators / Validator / Strategy / AFFIRMATIVE AFFIRMATIVE AFFIRMATIVE At least one condition should be met.","title":" a f f i r m a t i v e"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/-a-f-f-i-r-m-a-t-i-v-e/#affirmative","text":"AFFIRMATIVE At least one condition should be met.","title":"AFFIRMATIVE"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/-c-o-n-s-e-n-s-u-s/","text":"View-common / view.utils.validators / Validator / Strategy / CONSENSUS CONSENSUS CONSENSUS The number of met conditions should be greater than the of unmet conditions.","title":" c o n s e n s u s"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/-c-o-n-s-e-n-s-u-s/#consensus","text":"CONSENSUS The number of met conditions should be greater than the of unmet conditions.","title":"CONSENSUS"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/-u-n-a-n-i-m-o-u-s/","text":"View-common / view.utils.validators / Validator / Strategy / UNANIMOUS UNANIMOUS UNANIMOUS All the conditions should be met.","title":" u n a n i m o u s"},{"location":"Documentation/View/view.utils.validators/-validator/-strategy/-u-n-a-n-i-m-o-u-s/#unanimous","text":"UNANIMOUS All the conditions should be met.","title":"UNANIMOUS"},{"location":"Documentation/View/view.utils.validators.conditions/","text":"View-common / view.utils.validators.conditions Package view.utils.validators.conditions Types Condition interface Condition T Represents a condition that the a value should meet to be valid. DoubleConditions enum class DoubleConditions : Condition Double IntegerConditions enum class IntegerConditions : Condition Int LongConditions enum class LongConditions : Condition Long StringConditions enum class StringConditions : Condition String Type Aliases DC typealias DC = DoubleConditions IC typealias IC = IntegerConditions LC typealias LC = LongConditions SC typealias SC = StringConditions","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/#package-viewutilsvalidatorsconditions","text":"","title":"Package view.utils.validators.conditions"},{"location":"Documentation/View/view.utils.validators.conditions/#types","text":"Condition interface Condition T Represents a condition that the a value should meet to be valid. DoubleConditions enum class DoubleConditions : Condition Double IntegerConditions enum class IntegerConditions : Condition Int LongConditions enum class LongConditions : Condition Long StringConditions enum class StringConditions : Condition String","title":"Types"},{"location":"Documentation/View/view.utils.validators.conditions/#type-aliases","text":"DC typealias DC = DoubleConditions IC typealias IC = IntegerConditions LC typealias LC = LongConditions SC typealias SC = StringConditions","title":"Type Aliases"},{"location":"Documentation/View/view.utils.validators.conditions/-d-c/","text":"View-common / view.utils.validators.conditions / DC DC typealias DC = DoubleConditions","title":" d c"},{"location":"Documentation/View/view.utils.validators.conditions/-d-c/#dc","text":"typealias DC = DoubleConditions","title":"DC"},{"location":"Documentation/View/view.utils.validators.conditions/-i-c/","text":"View-common / view.utils.validators.conditions / IC IC typealias IC = IntegerConditions","title":" i c"},{"location":"Documentation/View/view.utils.validators.conditions/-i-c/#ic","text":"typealias IC = IntegerConditions","title":"IC"},{"location":"Documentation/View/view.utils.validators.conditions/-l-c/","text":"View-common / view.utils.validators.conditions / LC LC typealias LC = LongConditions","title":" l c"},{"location":"Documentation/View/view.utils.validators.conditions/-l-c/#lc","text":"typealias LC = LongConditions","title":"LC"},{"location":"Documentation/View/view.utils.validators.conditions/-s-c/","text":"View-common / view.utils.validators.conditions / SC SC typealias SC = StringConditions","title":" s c"},{"location":"Documentation/View/view.utils.validators.conditions/-s-c/#sc","text":"typealias SC = StringConditions","title":"SC"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/","text":"View-common / view.utils.validators.conditions / Condition Condition interface Condition T Represents a condition that the a value should meet to be valid. Functions isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid. Inheritors DoubleConditions enum class DoubleConditions : Condition Double IntegerConditions enum class IntegerConditions : Condition Int LongConditions enum class LongConditions : Condition Long StringConditions enum class StringConditions : Condition String","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/#condition","text":"interface Condition T Represents a condition that the a value should meet to be valid.","title":"Condition"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/#functions","text":"isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/#inheritors","text":"DoubleConditions enum class DoubleConditions : Condition Double IntegerConditions enum class IntegerConditions : Condition Int LongConditions enum class LongConditions : Condition Long StringConditions enum class StringConditions : Condition String","title":"Inheritors"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/is-valid/","text":"View-common / view.utils.validators.conditions / Condition / isValid isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/is-valid/#isvalid","text":"abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-condition/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/","text":"View-common / view.utils.validators.conditions / DoubleConditions DoubleConditions enum class DoubleConditions : Condition Double Enum Values ZERO POSITIVE NEGATIVE NON_POSITIVE NON_NEGATIVE Inherited Functions isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/#doubleconditions","text":"enum class DoubleConditions : Condition Double","title":"DoubleConditions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/#enum-values","text":"ZERO POSITIVE NEGATIVE NON_POSITIVE NON_NEGATIVE","title":"Enum Values"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/#inherited-functions","text":"isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-e-g-a-t-i-v-e/","text":"View-common / view.utils.validators.conditions / DoubleConditions / NEGATIVE NEGATIVE NEGATIVE Functions isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-e-g-a-t-i-v-e/#negative","text":"NEGATIVE","title":"NEGATIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-e-g-a-t-i-v-e/#functions","text":"isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-e-g-a-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / DoubleConditions / NEGATIVE / isValid isValid fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-e-g-a-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-e-g-a-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-n-e-g-a-t-i-v-e/","text":"View-common / view.utils.validators.conditions / DoubleConditions / NON_NEGATIVE NON_NEGATIVE NON_NEGATIVE Functions isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-n-e-g-a-t-i-v-e/#non_negative","text":"NON_NEGATIVE","title":"NON_NEGATIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-n-e-g-a-t-i-v-e/#functions","text":"isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-n-e-g-a-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / DoubleConditions / NON_NEGATIVE / isValid isValid fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-n-e-g-a-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-n-e-g-a-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-p-o-s-i-t-i-v-e/","text":"View-common / view.utils.validators.conditions / DoubleConditions / NON_POSITIVE NON_POSITIVE NON_POSITIVE Functions isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-p-o-s-i-t-i-v-e/#non_positive","text":"NON_POSITIVE","title":"NON_POSITIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-p-o-s-i-t-i-v-e/#functions","text":"isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-p-o-s-i-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / DoubleConditions / NON_POSITIVE / isValid isValid fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-p-o-s-i-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-n-o-n_-p-o-s-i-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-p-o-s-i-t-i-v-e/","text":"View-common / view.utils.validators.conditions / DoubleConditions / POSITIVE POSITIVE POSITIVE Functions isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-p-o-s-i-t-i-v-e/#positive","text":"POSITIVE","title":"POSITIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-p-o-s-i-t-i-v-e/#functions","text":"isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-p-o-s-i-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / DoubleConditions / POSITIVE / isValid isValid fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-p-o-s-i-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-p-o-s-i-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-z-e-r-o/","text":"View-common / view.utils.validators.conditions / DoubleConditions / ZERO ZERO ZERO Functions isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-z-e-r-o/#zero","text":"ZERO","title":"ZERO"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-z-e-r-o/#functions","text":"isValid fun isValid(value: Double ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-z-e-r-o/is-valid/","text":"View-common / view.utils.validators.conditions / DoubleConditions / ZERO / isValid isValid fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-z-e-r-o/is-valid/#isvalid","text":"fun isValid(value: Double ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-double-conditions/-z-e-r-o/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/","text":"View-common / view.utils.validators.conditions / IntegerConditions IntegerConditions enum class IntegerConditions : Condition Int Enum Values ZERO POSITIVE NEGATIVE NON_POSITIVE NON_NEGATIVE Inherited Functions isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/#integerconditions","text":"enum class IntegerConditions : Condition Int","title":"IntegerConditions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/#enum-values","text":"ZERO POSITIVE NEGATIVE NON_POSITIVE NON_NEGATIVE","title":"Enum Values"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/#inherited-functions","text":"isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-e-g-a-t-i-v-e/","text":"View-common / view.utils.validators.conditions / IntegerConditions / NEGATIVE NEGATIVE NEGATIVE Functions isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-e-g-a-t-i-v-e/#negative","text":"NEGATIVE","title":"NEGATIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-e-g-a-t-i-v-e/#functions","text":"isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-e-g-a-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / IntegerConditions / NEGATIVE / isValid isValid fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-e-g-a-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-e-g-a-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-n-e-g-a-t-i-v-e/","text":"View-common / view.utils.validators.conditions / IntegerConditions / NON_NEGATIVE NON_NEGATIVE NON_NEGATIVE Functions isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-n-e-g-a-t-i-v-e/#non_negative","text":"NON_NEGATIVE","title":"NON_NEGATIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-n-e-g-a-t-i-v-e/#functions","text":"isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-n-e-g-a-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / IntegerConditions / NON_NEGATIVE / isValid isValid fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-n-e-g-a-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-n-e-g-a-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-p-o-s-i-t-i-v-e/","text":"View-common / view.utils.validators.conditions / IntegerConditions / NON_POSITIVE NON_POSITIVE NON_POSITIVE Functions isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-p-o-s-i-t-i-v-e/#non_positive","text":"NON_POSITIVE","title":"NON_POSITIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-p-o-s-i-t-i-v-e/#functions","text":"isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-p-o-s-i-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / IntegerConditions / NON_POSITIVE / isValid isValid fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-p-o-s-i-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-n-o-n_-p-o-s-i-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-p-o-s-i-t-i-v-e/","text":"View-common / view.utils.validators.conditions / IntegerConditions / POSITIVE POSITIVE POSITIVE Functions isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-p-o-s-i-t-i-v-e/#positive","text":"POSITIVE","title":"POSITIVE"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-p-o-s-i-t-i-v-e/#functions","text":"isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-p-o-s-i-t-i-v-e/is-valid/","text":"View-common / view.utils.validators.conditions / IntegerConditions / POSITIVE / isValid isValid fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-p-o-s-i-t-i-v-e/is-valid/#isvalid","text":"fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-p-o-s-i-t-i-v-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-z-e-r-o/","text":"View-common / view.utils.validators.conditions / IntegerConditions / ZERO ZERO ZERO Functions isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-z-e-r-o/#zero","text":"ZERO","title":"ZERO"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-z-e-r-o/#functions","text":"isValid fun isValid(value: Int ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-z-e-r-o/is-valid/","text":"View-common / view.utils.validators.conditions / IntegerConditions / ZERO / isValid isValid fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-z-e-r-o/is-valid/#isvalid","text":"fun isValid(value: Int ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-integer-conditions/-z-e-r-o/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/","text":"View-common / view.utils.validators.conditions / LongConditions LongConditions enum class LongConditions : Condition Long Enum Values RGB RGBA COLOR Inherited Functions isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/#longconditions","text":"enum class LongConditions : Condition Long","title":"LongConditions"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/#enum-values","text":"RGB RGBA COLOR","title":"Enum Values"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/#inherited-functions","text":"isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-c-o-l-o-r/","text":"View-common / view.utils.validators.conditions / LongConditions / COLOR COLOR COLOR Functions isValid fun isValid(value: Long ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-c-o-l-o-r/#color","text":"COLOR","title":"COLOR"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-c-o-l-o-r/#functions","text":"isValid fun isValid(value: Long ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-c-o-l-o-r/is-valid/","text":"View-common / view.utils.validators.conditions / LongConditions / COLOR / isValid isValid fun isValid(value: Long ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-c-o-l-o-r/is-valid/#isvalid","text":"fun isValid(value: Long ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-c-o-l-o-r/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b/","text":"View-common / view.utils.validators.conditions / LongConditions / RGB RGB RGB Functions isValid fun isValid(value: Long ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b/#rgb","text":"RGB","title":"RGB"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b/#functions","text":"isValid fun isValid(value: Long ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b/is-valid/","text":"View-common / view.utils.validators.conditions / LongConditions / RGB / isValid isValid fun isValid(value: Long ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b/is-valid/#isvalid","text":"fun isValid(value: Long ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b-a/","text":"View-common / view.utils.validators.conditions / LongConditions / RGBA RGBA RGBA Functions isValid fun isValid(value: Long ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b-a/#rgba","text":"RGBA","title":"RGBA"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b-a/#functions","text":"isValid fun isValid(value: Long ): Boolean Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b-a/is-valid/","text":"View-common / view.utils.validators.conditions / LongConditions / RGBA / isValid isValid fun isValid(value: Long ): Boolean Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b-a/is-valid/#isvalid","text":"fun isValid(value: Long ): Boolean Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-long-conditions/-r-g-b-a/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/","text":"View-common / view.utils.validators.conditions / StringConditions StringConditions enum class StringConditions : Condition String Enum Values EMPTY NON_EMPTY PRESENT UPPER_UNDERSCORE LOWER_UNDERSCORE UPPER_CAMEL LOWER_CAMEL Inherited Functions isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/#stringconditions","text":"enum class StringConditions : Condition String","title":"StringConditions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/#enum-values","text":"EMPTY NON_EMPTY PRESENT UPPER_UNDERSCORE LOWER_UNDERSCORE UPPER_CAMEL LOWER_CAMEL","title":"Enum Values"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/#inherited-functions","text":"isValid abstract fun isValid(value: T ): Boolean Checks if the passed value is valid.","title":"Inherited Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-e-m-p-t-y/","text":"View-common / view.utils.validators.conditions / StringConditions / EMPTY EMPTY EMPTY Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-e-m-p-t-y/#empty","text":"EMPTY","title":"EMPTY"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-e-m-p-t-y/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-e-m-p-t-y/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / EMPTY / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-e-m-p-t-y/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-e-m-p-t-y/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-c-a-m-e-l/","text":"View-common / view.utils.validators.conditions / StringConditions / LOWER_CAMEL LOWER_CAMEL LOWER_CAMEL Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-c-a-m-e-l/#lower_camel","text":"LOWER_CAMEL","title":"LOWER_CAMEL"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-c-a-m-e-l/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-c-a-m-e-l/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / LOWER_CAMEL / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-c-a-m-e-l/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-c-a-m-e-l/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/","text":"View-common / view.utils.validators.conditions / StringConditions / LOWER_UNDERSCORE LOWER_UNDERSCORE LOWER_UNDERSCORE Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/#lower_underscore","text":"LOWER_UNDERSCORE","title":"LOWER_UNDERSCORE"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / LOWER_UNDERSCORE / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-l-o-w-e-r_-u-n-d-e-r-s-c-o-r-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-n-o-n_-e-m-p-t-y/","text":"View-common / view.utils.validators.conditions / StringConditions / NON_EMPTY NON_EMPTY NON_EMPTY Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-n-o-n_-e-m-p-t-y/#non_empty","text":"NON_EMPTY","title":"NON_EMPTY"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-n-o-n_-e-m-p-t-y/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-n-o-n_-e-m-p-t-y/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / NON_EMPTY / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-n-o-n_-e-m-p-t-y/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-n-o-n_-e-m-p-t-y/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-p-r-e-s-e-n-t/","text":"View-common / view.utils.validators.conditions / StringConditions / PRESENT PRESENT PRESENT Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-p-r-e-s-e-n-t/#present","text":"PRESENT","title":"PRESENT"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-p-r-e-s-e-n-t/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-p-r-e-s-e-n-t/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / PRESENT / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-p-r-e-s-e-n-t/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-p-r-e-s-e-n-t/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-c-a-m-e-l/","text":"View-common / view.utils.validators.conditions / StringConditions / UPPER_CAMEL UPPER_CAMEL UPPER_CAMEL Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-c-a-m-e-l/#upper_camel","text":"UPPER_CAMEL","title":"UPPER_CAMEL"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-c-a-m-e-l/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-c-a-m-e-l/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / UPPER_CAMEL / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-c-a-m-e-l/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-c-a-m-e-l/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/","text":"View-common / view.utils.validators.conditions / StringConditions / UPPER_UNDERSCORE UPPER_UNDERSCORE UPPER_UNDERSCORE Functions isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Index"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/#upper_underscore","text":"UPPER_UNDERSCORE","title":"UPPER_UNDERSCORE"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/#functions","text":"isValid fun isValid(value: String ): ERROR CLASS Checks if the passed value is valid.","title":"Functions"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/is-valid/","text":"View-common / view.utils.validators.conditions / StringConditions / UPPER_UNDERSCORE / isValid isValid fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid. Parameters value - The value to be checked Return True if the value is valud, false otherwise","title":"Is valid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/is-valid/#isvalid","text":"fun isValid(value: String ): ERROR CLASS Overrides Condition.isValid Checks if the passed value is valid.","title":"isValid"},{"location":"Documentation/View/view.utils.validators.conditions/-string-conditions/-u-p-p-e-r_-u-n-d-e-r-s-c-o-r-e/is-valid/#parameters","text":"value - The value to be checked Return True if the value is valud, false otherwise","title":"Parameters"},{"location":"Guides/1. Installation/","text":"Installation Installing the core library Add Repository repositories { maven { url https://dl.bintray.com/mzaart/View } } Add View to dependencies View-Common compile 'View:View-common:0.1.0' View-JVM compile 'View:View-jvm:0.1.0' View-JS compile 'View:View-js:0.1.0' Installing Renderers For now, only one renderer is available. MaterialDesignJsViewRenderer Renders Views as DOM trees that comply with Material Design standards. Add Repository repositories { maven { url https://dl.bintray.com/mzaart/MaterialDesignJsViewRenderer } } Add Dependency compile 'MaterialDesignJsViewRenderer:MaterialDesignJsVeiwRenderer:0.1.0'","title":"Installation"},{"location":"Guides/1. Installation/#installation","text":"","title":"Installation"},{"location":"Guides/1. Installation/#installing-the-core-library","text":"","title":"Installing the core library"},{"location":"Guides/1. Installation/#add-repository","text":"repositories { maven { url https://dl.bintray.com/mzaart/View } }","title":"Add Repository"},{"location":"Guides/1. Installation/#add-view-to-dependencies","text":"View-Common compile 'View:View-common:0.1.0' View-JVM compile 'View:View-jvm:0.1.0' View-JS compile 'View:View-js:0.1.0'","title":"Add View to dependencies"},{"location":"Guides/1. Installation/#installing-renderers","text":"For now, only one renderer is available.","title":"Installing Renderers"},{"location":"Guides/1. Installation/#materialdesignjsviewrenderer","text":"Renders Views as DOM trees that comply with Material Design standards.","title":"MaterialDesignJsViewRenderer"},{"location":"Guides/1. Installation/#add-repository_1","text":"repositories { maven { url https://dl.bintray.com/mzaart/MaterialDesignJsViewRenderer } }","title":"Add Repository"},{"location":"Guides/1. Installation/#add-dependency","text":"compile 'MaterialDesignJsViewRenderer:MaterialDesignJsVeiwRenderer:0.1.0'","title":"Add Dependency"},{"location":"Guides/2. Getting Started/","text":"Getting Started Setting up a Kotlin Multiplatform Project First, you should set up a Kotlin multiplatform project. For more information, please visit Kotlin's official documentation . Install View See the installation page for more information. Build your UI You can build your UI using DSL or from a serialized format such as JSON. Using DSL // import views import view.core.views.layouts.Layout import view.core.views.layouts.LinearLayout import view.core.views.display.TextView // import DSL import view.core.loaders.builders.dsl.layouts.linearLayout import view.core.loaders.builders.dsl.layouts.linearLayout.children import view.core.loaders.builders.dsl.textView import view.core.loaders.builders.dsl.button // display counter on screen var counter = 0 fun buildUI(): Layout { val layout = linearLayout { direction = LinearLayout.Direction.HORIZONTAL children[ textView { id = counter_display text = Counter: $counter }, button { id = increment_button text = Press to increment } ] } layout.find( increment_button ).onClickListener = { counter++ val textView = layout.find( counter_display ) as TextView textView.text = Counter: $counter } return layout } Using JSON // import views import view.core.views.layouts.Layout import view.core.views.display.TextView // import view loader import view.core.loaders.viewTree.treeLoaders.JsonTreeLoader // display counter on screen var counter = 0 fun buildUI(): Layout { val jsonString = { type : linear_layout , direction : horizontal , children : [ { type : text_view , id = counter_display , text = Counter: 0 }, { type : button , id = increment_button , text = Press to increment } ] } .trimIndent() val loader = JsonTreeLoader(jsonString) val layout = loader.loadViewTree() layout.find( increment_button ).onClickListener = { counter++ val textView = layout.find( counter_display ) as TextView textView.text = Counter: $counter } return layout } Render your views on specific platforms This example will show how to use the MaterialDesignJsViewRenderer which renders views on the web. Please refer to each renderer's documentation on how to render views. // import the renderer import view.core.renderers.MaterialDesignJsRenderer // contains the renderer's dependency injection configuration import view.di.Container // contains the core library's DI configuration import view.di.KodeinContainer fun displayUI() { // add the renderer's DI config to the library's DI config // Note that this should be done before using the library KodeinContainer.addConfig(Container.kodein, allowOverrides = true) // render the layout val layout = buildUI() MaterialDesignJsRenderer.setRoot(layout) }","title":"Getting Started"},{"location":"Guides/2. Getting Started/#getting-started","text":"","title":"Getting Started"},{"location":"Guides/2. Getting Started/#setting-up-a-kotlin-multiplatform-project","text":"First, you should set up a Kotlin multiplatform project. For more information, please visit Kotlin's official documentation .","title":"Setting up a Kotlin Multiplatform Project"},{"location":"Guides/2. Getting Started/#install-view","text":"See the installation page for more information.","title":"Install View"},{"location":"Guides/2. Getting Started/#build-your-ui","text":"You can build your UI using DSL or from a serialized format such as JSON.","title":"Build your UI"},{"location":"Guides/2. Getting Started/#using-dsl","text":"// import views import view.core.views.layouts.Layout import view.core.views.layouts.LinearLayout import view.core.views.display.TextView // import DSL import view.core.loaders.builders.dsl.layouts.linearLayout import view.core.loaders.builders.dsl.layouts.linearLayout.children import view.core.loaders.builders.dsl.textView import view.core.loaders.builders.dsl.button // display counter on screen var counter = 0 fun buildUI(): Layout { val layout = linearLayout { direction = LinearLayout.Direction.HORIZONTAL children[ textView { id = counter_display text = Counter: $counter }, button { id = increment_button text = Press to increment } ] } layout.find( increment_button ).onClickListener = { counter++ val textView = layout.find( counter_display ) as TextView textView.text = Counter: $counter } return layout }","title":"Using DSL"},{"location":"Guides/2. Getting Started/#using-json","text":"// import views import view.core.views.layouts.Layout import view.core.views.display.TextView // import view loader import view.core.loaders.viewTree.treeLoaders.JsonTreeLoader // display counter on screen var counter = 0 fun buildUI(): Layout { val jsonString = { type : linear_layout , direction : horizontal , children : [ { type : text_view , id = counter_display , text = Counter: 0 }, { type : button , id = increment_button , text = Press to increment } ] } .trimIndent() val loader = JsonTreeLoader(jsonString) val layout = loader.loadViewTree() layout.find( increment_button ).onClickListener = { counter++ val textView = layout.find( counter_display ) as TextView textView.text = Counter: $counter } return layout }","title":"Using JSON"},{"location":"Guides/2. Getting Started/#render-your-views-on-specific-platforms","text":"This example will show how to use the MaterialDesignJsViewRenderer which renders views on the web. Please refer to each renderer's documentation on how to render views. // import the renderer import view.core.renderers.MaterialDesignJsRenderer // contains the renderer's dependency injection configuration import view.di.Container // contains the core library's DI configuration import view.di.KodeinContainer fun displayUI() { // add the renderer's DI config to the library's DI config // Note that this should be done before using the library KodeinContainer.addConfig(Container.kodein, allowOverrides = true) // render the layout val layout = buildUI() MaterialDesignJsRenderer.setRoot(layout) }","title":"Render your views on specific platforms"},{"location":"Guides/3. Custom Views/","text":"Customizing Views With View, you can either customize existing views or create entirely new views. Creating new views As an example, we will create a text view that prepends a string to whatever text it displays. Creating the view You can create a new view by either subclassing the base class View or any of its subclasses. When creating views it is preferable to use a set of view property delegates that make the development of views much easier and faster. Please refer to the view property delegates documentation for more information. import view.core.views.display.TextView import view.core.views.propertyDelegates.ViewProperty import view.utils.validators.Validator import view.utils.validators.conditions.StringConditions class PrependedTextView: TextView() { var prependedText by ViewProperty( Original Text: , Validator(StringConditions.PRESENT)) } Creating the view builder A View Builder takes a map of key-value pairs and uses it to build the view. The map is parsed from a serialized format such as JSON or is built by the DSL. View Builders are \"map-based\" classes. Please see the utils.mapBased package that contains utility classes that help with common operations. import org.kodein.di.Kodein import org.kodein.di.erased.bind import org.kodein.di.erased.provider import view.core.loaders.builders.ViewBuilder import view.core.loaders.builders.display.TextViewBuilder import view.utils.extensions.nonNull import view.utils.mapBased.keys.delegates.nullable.StringRWKey import view.di.KodeinContainer class PrependedTextViewBuilder: TextViewBuilder() { override val view = PrependedTextView() var prependedText by StringRWKey override fun beforeProduction() { super.beforeProduction() prependedText.nonNull { view.prependedText = it } } } // add DI bindings to the library's bindings container val newBindings = Kodein { bind ViewBuilder * ( PrependedTextView ) with provider { PrependedTextViewBuilder() } } KodeinContainer.addConfig(newBindings) Creating the DSL This step is optional. object prependedTextView { operator fun invoke(init: PrependedTextViewBuilder.() - Unit): PrependedTextView { return PrependedTextViewBuilder().apply { init() }.build() as PrependedTextView } } // can be used as follows val pTV = prependedTextView { prependedText = This is text will be prepended } Adding a renderer Please follow each renderer's documentation on how to add renderers for new views. Creating a custom view property delegate View property delegates are helpful as they allow us to control how view properties are set and retrieved. This package contains multiple delegates that can be used. The main functions of view property delegates are: - Validate property values - Notify the renderer whenever the property's value changes Currently, four property delegate classes are available: 1. AbstractViewProperty: Base class for mutable view property delegates 2. ViewProperty: Property delegate for non-nullable view properties 3. NullableViewProperty: Property delegate for non-nullable view properties 4. LateInitVal: Allows an immutable property to be initialized later in the class' lifetime. As an example, we will create a property delegate that logs to the console whenever a property is accessed. import view.core.views.View import view.core.views.propertyDelegates.ViewProperty import view.utils.validators.Validator import kotlin.reflect.KProperty class LoggerProperty T: Any ( initValue: T, validator: Validator T ? = null ): ViewProperty T (initValue, validator) { override fun getValue(thisRef: View, property: KProperty * ): T { val value = super.getValue(thisRef, property) println( Retrieving value $value from property ${property.name} ) return value } override fun setValue(thisRef: View, property: KProperty * , value: T) { super.setValue(thisRef, property, value) println( Set property ${property.name} with value $value ) } } // can be used as follows import view.utils.validators.conditions.IntegerConditions val counter by LoggerProperty(0, Validator(IntegerConditions.NON_NEGATIVE))","title":"Customizing Views"},{"location":"Guides/3. Custom Views/#customizing-views","text":"With View, you can either customize existing views or create entirely new views.","title":"Customizing Views"},{"location":"Guides/3. Custom Views/#creating-new-views","text":"As an example, we will create a text view that prepends a string to whatever text it displays.","title":"Creating new views"},{"location":"Guides/3. Custom Views/#creating-the-view","text":"You can create a new view by either subclassing the base class View or any of its subclasses. When creating views it is preferable to use a set of view property delegates that make the development of views much easier and faster. Please refer to the view property delegates documentation for more information. import view.core.views.display.TextView import view.core.views.propertyDelegates.ViewProperty import view.utils.validators.Validator import view.utils.validators.conditions.StringConditions class PrependedTextView: TextView() { var prependedText by ViewProperty( Original Text: , Validator(StringConditions.PRESENT)) }","title":"Creating the view"},{"location":"Guides/3. Custom Views/#creating-the-view-builder","text":"A View Builder takes a map of key-value pairs and uses it to build the view. The map is parsed from a serialized format such as JSON or is built by the DSL. View Builders are \"map-based\" classes. Please see the utils.mapBased package that contains utility classes that help with common operations. import org.kodein.di.Kodein import org.kodein.di.erased.bind import org.kodein.di.erased.provider import view.core.loaders.builders.ViewBuilder import view.core.loaders.builders.display.TextViewBuilder import view.utils.extensions.nonNull import view.utils.mapBased.keys.delegates.nullable.StringRWKey import view.di.KodeinContainer class PrependedTextViewBuilder: TextViewBuilder() { override val view = PrependedTextView() var prependedText by StringRWKey override fun beforeProduction() { super.beforeProduction() prependedText.nonNull { view.prependedText = it } } } // add DI bindings to the library's bindings container val newBindings = Kodein { bind ViewBuilder * ( PrependedTextView ) with provider { PrependedTextViewBuilder() } } KodeinContainer.addConfig(newBindings)","title":"Creating the view builder"},{"location":"Guides/3. Custom Views/#creating-the-dsl","text":"This step is optional. object prependedTextView { operator fun invoke(init: PrependedTextViewBuilder.() - Unit): PrependedTextView { return PrependedTextViewBuilder().apply { init() }.build() as PrependedTextView } } // can be used as follows val pTV = prependedTextView { prependedText = This is text will be prepended }","title":"Creating the DSL"},{"location":"Guides/3. Custom Views/#adding-a-renderer","text":"Please follow each renderer's documentation on how to add renderers for new views.","title":"Adding a renderer"},{"location":"Guides/3. Custom Views/#creating-a-custom-view-property-delegate","text":"View property delegates are helpful as they allow us to control how view properties are set and retrieved. This package contains multiple delegates that can be used. The main functions of view property delegates are: - Validate property values - Notify the renderer whenever the property's value changes Currently, four property delegate classes are available: 1. AbstractViewProperty: Base class for mutable view property delegates 2. ViewProperty: Property delegate for non-nullable view properties 3. NullableViewProperty: Property delegate for non-nullable view properties 4. LateInitVal: Allows an immutable property to be initialized later in the class' lifetime. As an example, we will create a property delegate that logs to the console whenever a property is accessed. import view.core.views.View import view.core.views.propertyDelegates.ViewProperty import view.utils.validators.Validator import kotlin.reflect.KProperty class LoggerProperty T: Any ( initValue: T, validator: Validator T ? = null ): ViewProperty T (initValue, validator) { override fun getValue(thisRef: View, property: KProperty * ): T { val value = super.getValue(thisRef, property) println( Retrieving value $value from property ${property.name} ) return value } override fun setValue(thisRef: View, property: KProperty * , value: T) { super.setValue(thisRef, property, value) println( Set property ${property.name} with value $value ) } } // can be used as follows import view.utils.validators.conditions.IntegerConditions val counter by LoggerProperty(0, Validator(IntegerConditions.NON_NEGATIVE))","title":"Creating a custom view property delegate"},{"location":"Guides/4. Supporting a Serialization Format/","text":"Supporting a Serialization Format View Tree Loaders, View Builders and Nodes The process of loading a view tree from a serialized format contains three components: 1. View Tree Loaders: A View Tree Loader traverses a tree of nodes of key-value pairs that represent a view. At each node, it calls a View Builder that builds the view from the given key-value pairs. 2. View Builders: View Builders are responsible for building a single view from key-value pairs. 3. Nodes: A node is responsible for parsing the key-value pairs from a string. There are two types of nodes, a layout node that represents a layout view and a normal node that represents a non-layout view. In the tree that the View Tree Loader operates on, all non-leaf nodes are layout nodes while leaf nodes are just normal nodes. As we can, View Tree Loaders and View Builders are oblivious to the serialization format, they only operate on key-value pairs. As a result, if we want to support a new serialization format, all what we have to do is add the corresponding Node objects. In this example, we will add support for loading views from the YAML format. Add YAML parser In your common code, declare the class that is responsible for parsing the YAML and provide its implementation on each platform. expect class YamlParser() { fun parse(yamlString: String): Map String, Any } Add the YAML nodes import view.core.loaders.viewTree.nodes.Node import view.core.loaders.viewTree.nodes.LayoutNode class YamlNode(yamlString: String): Node() { override var content = YamlParser().parse(yamlString) } class YamlLayoutNode(yamlString: String): LayoutNode() { override var content = YamlParser().parse(yamlString) } You can use the nodes as follows: import view.core.loaders.viewTree.treeLoaders.SerializedViewTreeLoader val yamlString = ..... val rootNode = YamlLayoutNode(yamlString) val treeLoader = SerializedViewTreeLoader(rootNode) val viewTree = treeLoader.loadViewTree() Optional: Add a ViewTreeLoader Optionally, you can encapsulate the usage of nodes by creating a new tree loader. import view.core.loaders.viewTree.treeLoaders.SerializedViewTreeLoader class YAMLTreeLoader(yamlString: String): SerializedViewTreeLoader(YamlLayoutNode(yamlString)) You can use the loader as follows: val yamlString = ..... val treeLoader = YAMLTreeLoader(yamlString) val viewTree = treeLoader.loadViewTree() As we can see, it is very simple to support a new serialization format.","title":"Supporting a Serialization Format"},{"location":"Guides/4. Supporting a Serialization Format/#supporting-a-serialization-format","text":"","title":"Supporting a Serialization Format"},{"location":"Guides/4. Supporting a Serialization Format/#view-tree-loaders-view-builders-and-nodes","text":"The process of loading a view tree from a serialized format contains three components: 1. View Tree Loaders: A View Tree Loader traverses a tree of nodes of key-value pairs that represent a view. At each node, it calls a View Builder that builds the view from the given key-value pairs. 2. View Builders: View Builders are responsible for building a single view from key-value pairs. 3. Nodes: A node is responsible for parsing the key-value pairs from a string. There are two types of nodes, a layout node that represents a layout view and a normal node that represents a non-layout view. In the tree that the View Tree Loader operates on, all non-leaf nodes are layout nodes while leaf nodes are just normal nodes. As we can, View Tree Loaders and View Builders are oblivious to the serialization format, they only operate on key-value pairs. As a result, if we want to support a new serialization format, all what we have to do is add the corresponding Node objects. In this example, we will add support for loading views from the YAML format.","title":"View Tree Loaders, View Builders and Nodes"},{"location":"Guides/4. Supporting a Serialization Format/#add-yaml-parser","text":"In your common code, declare the class that is responsible for parsing the YAML and provide its implementation on each platform. expect class YamlParser() { fun parse(yamlString: String): Map String, Any }","title":"Add YAML parser"},{"location":"Guides/4. Supporting a Serialization Format/#add-the-yaml-nodes","text":"import view.core.loaders.viewTree.nodes.Node import view.core.loaders.viewTree.nodes.LayoutNode class YamlNode(yamlString: String): Node() { override var content = YamlParser().parse(yamlString) } class YamlLayoutNode(yamlString: String): LayoutNode() { override var content = YamlParser().parse(yamlString) } You can use the nodes as follows: import view.core.loaders.viewTree.treeLoaders.SerializedViewTreeLoader val yamlString = ..... val rootNode = YamlLayoutNode(yamlString) val treeLoader = SerializedViewTreeLoader(rootNode) val viewTree = treeLoader.loadViewTree()","title":"Add the YAML nodes"},{"location":"Guides/4. Supporting a Serialization Format/#optional-add-a-viewtreeloader","text":"Optionally, you can encapsulate the usage of nodes by creating a new tree loader. import view.core.loaders.viewTree.treeLoaders.SerializedViewTreeLoader class YAMLTreeLoader(yamlString: String): SerializedViewTreeLoader(YamlLayoutNode(yamlString)) You can use the loader as follows: val yamlString = ..... val treeLoader = YAMLTreeLoader(yamlString) val viewTree = treeLoader.loadViewTree() As we can see, it is very simple to support a new serialization format.","title":"Optional: Add a ViewTreeLoader"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/1. Installation/","text":"This renderer renders Views as DOM trees that comply with Material Design standards. Add Repository repositories { maven { url https://dl.bintray.com/mzaart/MaterialDesignJsViewRenderer } } Add Dependency compile 'MaterialDesignJsViewRenderer:MaterialDesignJsVeiwRenderer:0.1.0'","title":"1. Installation"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/1. Installation/#add-repository","text":"repositories { maven { url https://dl.bintray.com/mzaart/MaterialDesignJsViewRenderer } }","title":"Add Repository"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/1. Installation/#add-dependency","text":"compile 'MaterialDesignJsViewRenderer:MaterialDesignJsVeiwRenderer:0.1.0'","title":"Add Dependency"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/2. Getting Started/","text":"Getting Started Setting up View First, follow this tutorial on setting up the View library. Using the renderer // import the renderer import view.core.renderers.MaterialDesignJsRenderer // contains the renderer's dependency injection configuration import view.di.Container // contains the core library's DI configuration import view.di.KodeinContainer fun displayUI() { // add the renderer's DI config to the library's DI config // Note that this should be done before using the library KodeinContainer.addConfig(Container.kodein, allowOverrides = true) // render the layout val layout = buildUI() MaterialDesignJsRenderer.setRoot(layout) }","title":"Getting Started"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/2. Getting Started/#getting-started","text":"","title":"Getting Started"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/2. Getting Started/#setting-up-view","text":"First, follow this tutorial on setting up the View library.","title":"Setting up View"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/2. Getting Started/#using-the-renderer","text":"// import the renderer import view.core.renderers.MaterialDesignJsRenderer // contains the renderer's dependency injection configuration import view.di.Container // contains the core library's DI configuration import view.di.KodeinContainer fun displayUI() { // add the renderer's DI config to the library's DI config // Note that this should be done before using the library KodeinContainer.addConfig(Container.kodein, allowOverrides = true) // render the layout val layout = buildUI() MaterialDesignJsRenderer.setRoot(layout) }","title":"Using the renderer"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/3. Rendering Custom Views/","text":"Rendering Custom Views Create the custom view Follow this tutorial for creating custom views. Create the View Renderer You can create a view renderer by subclassing the class AbstractViewRenderer or any of its child classes. In this example, we will create a renderer for the PrependedTextView that we've created in this tutorial . import org.w3c.dom.HTMLElement import kotlin.browser.document import view.core.renderers.viewRenderers.display.TextViewRenderer // primary constructor to be used when re-rendering the view open class PrependedTextViewRenderer( view: PrependedTextView, element: HTMLElement, reRendering: Boolean = true ): TextViewRenderer(view, element, reRendering) { // secondary constructor to be used when rendering the view for the first time constructor(view: PrependedTextView): this(view, document.createElement( p ) as HTMLElement, false) override fun buildElement() { super.buildElement() element.innerText = (view as PrependedTextView).prependedText + view.text } } Register the renderer in the DI container Create DI bindings for the new renderer and add them to the core library's bindings. Note that this should be done before the library is first used. import org.kodein.di.Kodein import org.kodein.di.erased.bind import org.kodein.di.erased.factory import org.w3c.dom.HTMLElement import view.core.renderers.ViewRenderer import view.core.views.View import view.di.KodeinContainer // declare the bindings val bindings = Kodein { bind ViewRenderer * ( PrependedTextView ) with factory { v: View - PrependedTextViewRenderer(v as PrependedTextView) } bind ViewRenderer * ( PrependedTextView ) with factory { v: View, e: HTMLElement - PrependedTextViewRenderer(v as PrependedTextView, e) } } // add the bindings to the core library's DI bindings KodeinContainer.addConfig(bindings)","title":"Rendering Custom Views"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/3. Rendering Custom Views/#rendering-custom-views","text":"","title":"Rendering Custom Views"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/3. Rendering Custom Views/#create-the-custom-view","text":"Follow this tutorial for creating custom views.","title":"Create the custom view"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/3. Rendering Custom Views/#create-the-view-renderer","text":"You can create a view renderer by subclassing the class AbstractViewRenderer or any of its child classes. In this example, we will create a renderer for the PrependedTextView that we've created in this tutorial . import org.w3c.dom.HTMLElement import kotlin.browser.document import view.core.renderers.viewRenderers.display.TextViewRenderer // primary constructor to be used when re-rendering the view open class PrependedTextViewRenderer( view: PrependedTextView, element: HTMLElement, reRendering: Boolean = true ): TextViewRenderer(view, element, reRendering) { // secondary constructor to be used when rendering the view for the first time constructor(view: PrependedTextView): this(view, document.createElement( p ) as HTMLElement, false) override fun buildElement() { super.buildElement() element.innerText = (view as PrependedTextView).prependedText + view.text } }","title":"Create the View Renderer"},{"location":"Guides/Renderers/MaterialDesignJSRenderer/3. Rendering Custom Views/#register-the-renderer-in-the-di-container","text":"Create DI bindings for the new renderer and add them to the core library's bindings. Note that this should be done before the library is first used. import org.kodein.di.Kodein import org.kodein.di.erased.bind import org.kodein.di.erased.factory import org.w3c.dom.HTMLElement import view.core.renderers.ViewRenderer import view.core.views.View import view.di.KodeinContainer // declare the bindings val bindings = Kodein { bind ViewRenderer * ( PrependedTextView ) with factory { v: View - PrependedTextViewRenderer(v as PrependedTextView) } bind ViewRenderer * ( PrependedTextView ) with factory { v: View, e: HTMLElement - PrependedTextViewRenderer(v as PrependedTextView, e) } } // add the bindings to the core library's DI bindings KodeinContainer.addConfig(bindings)","title":"Register the renderer in the DI container"}]}